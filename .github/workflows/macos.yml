name: Build for macOS

on:
  workflow_dispatch:
  push:
    paths:
      - '.github/workflows/macos.yml'
      - 'cmake/**'
      - 'meos/**'
      - 'mobilitydb/**'
      - 'postgis/**'
      - 'CMakeLists.txt'
    branch_ignore: gh-pages
  pull_request:
    paths:
      - '.github/workflows/macos.yml'
      - 'cmake/**'
      - 'meos/**'
      - 'mobilitydb/**'
      - 'postgis/**'
      - 'CMakeLists.txt'
    branch_ignore: gh-pages

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ macos-14, macos-15 ]
        psql: [ 17, 18 ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get dependencies from homebrew (cache)
        uses: tecolicom/actions-use-homebrew-tools@v1
        with:
          tools: postgresql@${{ matrix.psql }} postgis proj gsl

      - name: Configure
        run: |
          mkdir build
          cd build
          cmake -DPOSTGRESQL_BIN="/opt/homebrew/opt/postgresql@${{ matrix.psql }}/bin" -DCMAKE_BUILD_TYPE=Release ..

      - name: Build
        run: |
          cd build
          make -j
          sudo make install

      - name: Library symlinks
        run: |
          DYNLIB_DIR="/opt/homebrew/lib/postgresql@${{ matrix.psql }}"
          if [ -d "$DYNLIB_DIR" ]; then
            echo "Creating missing MobilityDB symlinks in $DYNLIB_DIR"
            cd "$DYNLIB_DIR"
            if [ -f libMobilityDB-1.3.so ]; then
              sudo ln -sf libMobilityDB-1.3.so libMobilityDB-1.3.dylib
              sudo ln -sf libMobilityDB-1.3.so libMobilityDB-1.3
            elif [ -f libMobilityDB-1.3.dylib ]; then
              sudo ln -sf libMobilityDB-1.3.dylib libMobilityDB-1.3.so
              sudo ln -sf libMobilityDB-1.3.dylib libMobilityDB-1.3
            fi
            ls -l libMobilityDB*
          else
            echo "Directory $DYNLIB_DIR not found"
          fi

      - name: test install
        run: |
          export PATH="/opt/homebrew/opt/postgresql@${{ matrix.psql }}/bin:$PATH"
          pg_ctl -D /opt/homebrew/var/postgresql@${{ matrix.psql }}/ start
          createdb ___mobdb___test___
          psql -d ___mobdb___test___ -c "CREATE EXTENSION mobilitydb CASCADE;  SELECT postgis_full_version(); SELECT mobilitydb_full_version();"

      - name: Test
        run: |
          cd build
          make test
