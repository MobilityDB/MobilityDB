<?xml version="1.0" encoding="UTF-8"?>
<!--
   ****************************************************************************
    MobilityDB Manual
    Copyright(c) MobilityDB Contributors

    This documentation is licensed under a Creative Commons Attribution-Share
    Alike 3.0 License: https://creativecommons.org/licenses/by-sa/3.0/
   ****************************************************************************
-->
<appendix id ="data_generator">
	<title>Generador de datos sintéticos</title>
	<para>
		En muchas circunstancias, es necesario tener un conjunto de datos de prueba para evaluar enfoques de implementación alternativos o realizar evaluaciones comparativas. A menudo se requiere que tal conjunto de datos tenga requisitos particulares en tamaño o en las características intrínsecas de sus datos. Incluso si un conjunto de datos del mundo real pudiera estar disponible, puede que no sea ideal para tales experimentos por múltiples razones. Por lo tanto, un generador de datos sintéticos que pueda personalizarse para producir datos de acuerdo con los requisitos dados suele ser la mejor solución. Obviamente, los experimentos con datos sintéticos deben complementarse con experimentos con datos del mundo real para tener una comprensión profunda del problema en cuestión.
	</para>

	<para>
    MobilityDB proporciona un generador simple de datos sintéticos que se puede utilizar para tales fines. En particular, se utilizó este generador de datos para generar la base de datos utilizada para las pruebas de regresión en MobilityDB. El generador de datos está programado en PL/pgSQL para que se pueda personalizar fácilmente. Se encuentra en el directorio <varname>datagen</varname> en el repositorio. En este apéndice, presentamos brevemente la funcionalidad básica del generador. Primero enumeramos las funciones que generan valores aleatorios para varios tipos de datos de PostgreSQL, PostGIS y MobilityDB y luego damos ejemplos de cómo se usan estas funciones para generar tablas de dichos valores. Los parámetros de las funciones no están especificados, consulte los archivos fuente donde se pueden encontrar explicaciones detalladas sobre los distintos parámetros.
	</para>

	<sect1>
		<title>Generador para tipos PostgreSQL</title>
			<itemizedlist>
				<listitem>
					<para><varname>random_bool</varname>: Generar un booleano aleatorio</para>
				</listitem>
				<listitem>
					<para><varname>random_int</varname>: Generar un entero aleatorio</para>
				</listitem>
				<listitem>
					<para><varname>random_int_array</varname>: Generar una matriz de enteros aleatorios</para>
				</listitem>
				<listitem>
					<para><varname>random_intrango</varname>: Generar un rango aleatorio de enteros</para>
				</listitem>
				<listitem>
					<para><varname>random_float</varname>: Generar un número flotante aleatorio</para>
				</listitem>
				<listitem>
					<para><varname>random_float_array</varname>: Generar una matriz de números flotantes aleatorios</para>
				</listitem>
				<listitem>
					<para><varname>random_floatrango</varname>: Generar un rango aleatorio de números flotantes</para>
				</listitem>
				<listitem>
					<para><varname>random_text</varname>: Generar un texto aleatorio</para>
				</listitem>
				<listitem>
					<para><varname>random_timestamptz</varname>: Generar una marca de tiempo con zona horaria aleatoria</para>
				</listitem>
				<listitem>
					<para><varname>random_timestamptz_array</varname>: Generar una matriz de marcas de tiempo con zona horaria aleatorias</para>
				</listitem>
				<listitem>
					<para><varname>random_minutos</varname>: Generar un intervalo de minutos aleatorio</para>
				</listitem>
				<listitem>
					<para><varname>random_tstzrange</varname>: Generar rango aleatorio de marcas de tiempo con zona horaria </para>
				</listitem>
				<listitem>
					<para><varname>random_tstzrango_array</varname>: Generar una matriz de rangos aleatorios de marcas de tiempo con zona horaria</para>
				</listitem>
			</itemizedlist>
	</sect1>

	<sect1>
		<title>Generador para tipos PostGIS</title>
			<itemizedlist>
				<listitem>
					<para><varname>random_geom_point</varname>: Generar un punto geométrico 2D aleatorio</para>
				</listitem>
				<listitem>
					<para><varname>random_geom_point3D</varname>: Generar un punto geométrico 3D aleatorio</para>
				</listitem>
				<listitem>
					<para><varname>random_geog_point</varname>: Generar un punto geográfico 2D aleatorio</para>
				</listitem>
				<listitem>
					<para><varname>random_geog_point3D</varname>: Generar un punto geográfico 3D aleatorio</para>
				</listitem>
				<listitem>
					<para><varname>random_geom_point_array</varname>: Generar una matriz de puntos geométricos 2D aleatorios</para>
				</listitem>
				<listitem>
					<para><varname>random_geom_point3D_array</varname>: Generar una matriz de puntos geométricos 3D aleatorios</para>
				</listitem>
				<listitem>
					<para><varname>random_geog_point_array</varname>: Generar una matriz puntos geográficos 2D aleatorios</para>
				</listitem>
				<listitem>
					<para><varname>random_geog_point3D_array</varname>: Generar una matriz de puntos geográficos 3D aleatorios</para>
				</listitem>
				<listitem>
					<para><varname>random_geom_linestring</varname>: Generar una cadena lineal geométrica 2D aleatoria</para>
				</listitem>
				<listitem>
					<para><varname>random_geom_linestring3D</varname>: Generar una cadena lineal geométrica 3D aleatoria</para>
				</listitem>
				<listitem>
					<para><varname>random_geog_linestring</varname>: Generar una cadena lineal geográfica 2D aleatoria</para>
				</listitem>
				<listitem>
					<para><varname>random_geog_linestring3D</varname>: Generar una cadena lineal geográfica 3D aleatoria</para>
				</listitem>
				<listitem>
					<para><varname>random_geom_polygon</varname>: Generar un polígono geométrico 2D sin agujeros aleatorio</para>
				</listitem>
				<listitem>
					<para><varname>random_geom_polygon3D</varname>: Generar un polígono geométrico 3D sin agujeros aleatorio</para>
				</listitem>
				<listitem>
					<para><varname>random_geog_polygon</varname>: Generar un polígono geográfico 2D sin agujeros aleatorio</para>
				</listitem>
				<listitem>
					<para><varname>random_geog_polygon3D</varname>: Generar un polígono geográfico 3D sin agujeros aleatorio</para>
				</listitem>
				<listitem>
					<para><varname>random_geom_multipoint</varname>: Generar un multipunto geométrico 2D aleatorio</para>
				</listitem>
				<listitem>
					<para><varname>random_geom_multipoint3D</varname>: Generar un multipunto geométrico 3D aleatorio</para>
				</listitem>
				<listitem>
					<para><varname>random_geog_multipoint</varname>: Generar un multipunto geográfico 2D aleatorio</para>
				</listitem>
				<listitem>
					<para><varname>random_geog_multipoint3D</varname>: Generar un multipunto geográfico 3D aleatorio</para>
				</listitem>
				<listitem>
					<para><varname>random_geom_multilinestring</varname>: Generar una multicadena lineal geométrica 2D aleatoria</para>
				</listitem>
				<listitem>
					<para><varname>random_geom_multilinestring3D</varname>: Generar una multicadena lineal geométrica 3D aleatoria</para>
				</listitem>
				<listitem>
					<para><varname>random_geog_multilinestring</varname>: Generar una multicadena lineal geográfica 2D aleatoria</para>
				</listitem>
				<listitem>
					<para><varname>random_geog_multilinestring3D</varname>: Generar una multicadena lineal geográfica 3D aleatoria</para>
				</listitem>
				<listitem>
					<para><varname>random_geom_multipolygon</varname>: Generar un multipolígono geométrico 2D sin agujeros aleatorio</para>
				</listitem>
				<listitem>
					<para><varname>random_geom_multipolygon3D</varname>: Generar un multipolígono geométrico 3D sin agujeros aleatorio</para>
				</listitem>
				<listitem>
					<para><varname>random_geog_multipolygon</varname>: Generar un multipolígono geográfico 2D sin agujeros aleatorio</para>
				</listitem>
				<listitem>
					<para><varname>random_geog_multipolygon3D</varname>: Generar un multipolígono geográfico 3D sin agujeros aleatorio</para>
				</listitem>
			</itemizedlist>
	</sect1>

	<sect1>
		<title>Generador para tipos de tiempo y de cuadro delimitador MobilityDB</title>

			<itemizedlist>
				<listitem>
					<para><varname>random_timestampset</varname>: Generar un <varname>timestampset</varname> aleatorio</para>
				</listitem>
				<listitem>
					<para><varname>random_period</varname>: Generar un <varname>period</varname> aleatorio</para>
				</listitem>
				<listitem>
					<para><varname>random_period_array</varname>: Generar una matriz de valores <varname>period</varname> aleatorios</para>
				</listitem>
				<listitem>
					<para><varname>random_periodset</varname>: Generar un <varname>periodset</varname> aleatorio</para>
				</listitem>
				<listitem>
					<para><varname>random_tbox</varname>: Generar un <varname>tbox</varname> aleatorio</para>
				</listitem>
				<listitem>
					<para><varname>random_stbox</varname>: Generar un <varname>stbox</varname> 2D aleatorio</para>
				</listitem>
				<listitem>
					<para><varname>random_stbox3D</varname>: Generar un <varname>stbox</varname> 3D aleatorio</para>
				</listitem>
				<listitem>
					<para><varname>random_geodstbox</varname>: Generar un <varname>stbox</varname> geodético 2D aleatorio</para>
				</listitem>
				<listitem>
					<para><varname>random_geodstbox3D</varname>: Generar un <varname>stbox</varname> geodético 3D aleatorio</para>
				</listitem>
			</itemizedlist>
	</sect1>

	<sect1>
		<title>Generador para tipos temporales MobilityDB</title>

			<itemizedlist>
				<listitem>
					<para><varname>random_tbool_inst</varname>: Generar un booleano temporal de subtipo instante aleatorio</para>
				</listitem>
				<listitem>
					<para><varname>random_tint_inst</varname>: Generar un entero temporal de subtipo instante aleatorio</para>
				</listitem>
				<listitem>
					<para><varname>random_tfloat_inst</varname>: Generar un flotante temporal de subtipo instante aleatorio</para>
				</listitem>
				<listitem>
					<para><varname>random_ttext_inst</varname>: Generar un texto temporal de subtipo instante aleatorio</para>
				</listitem>
				<listitem>
					<para><varname>random_tgeompoint_inst</varname>: Generar un punto geométrico temporal 2D de subtipo instante aleatorio</para>
				</listitem>
				<listitem>
					<para><varname>random_tgeompoint3D_inst</varname>: Generar un punto geométrico temporal 3D de subtipo instante aleatorio</para>
				</listitem>
				<listitem>
					<para><varname>random_tgeogpoint_inst</varname>: Generar un punto geográfico temporal 2D de subtipo instante aleatorio</para>
				</listitem>
				<listitem>
					<para><varname>random_tgeogpoint3D_inst</varname>: Generar un punto geográfico temporal 3D de subtipo instante aleatorio</para>
				</listitem>
				<listitem>
					<para><varname>random_tbool_instset</varname>: Generar un booleano temporal de subtipo conjunto de instantes aleatorio</para>
				</listitem>
				<listitem>
					<para><varname>random_tint_instset</varname>: Generar un entero temporal de subtipo conjunto de instantes aleatorio</para>
				</listitem>
				<listitem>
					<para><varname>random_tfloat_instset</varname>: Generar un flotante temporal de subtipo conjunto de instantes aleatorio</para>
				</listitem>
				<listitem>
					<para><varname>random_ttext_instset</varname>: Generar un texto temporal de subtipo conjunto de instantes aleatorio</para>
				</listitem>
				<listitem>
					<para><varname>random_tgeompoint_instset</varname>: Generar un punto temporal geométrico 2D de subtipo conjunto de instantes aleatorio</para>
				</listitem>
				<listitem>
					<para><varname>random_tgeompoint3D_instset</varname>: Generar un punto geométrico temporal 3D de subtipo conjunto de instantes aleatorio</para>
				</listitem>
				<listitem>
					<para><varname>random_tgeogpoint_instset</varname>: Generar un punto geográfico temporal 2D de subtipo conjunto de instantes aleatorio</para>
				</listitem>
				<listitem>
					<para><varname>random_tgeogpoint3D_instset</varname>: Generar un punto geográfico temporal 3D de subtipo conjunto de instantes aleatorio</para>
				</listitem>
          <listitem>
					<para><varname>random_tbool_seq</varname>: Generar un booleano temporal de subtipo secuencia aleatorio</para>
				</listitem>
				<listitem>
					<para><varname>random_tint_seq</varname>: Generar un entero temporal de subtipo secuencia aleatorio</para>
				</listitem>
				<listitem>
					<para><varname>random_tfloat_seq</varname>: Generar un flotante temporal de subtipo secuencia aleatorio</para>
				</listitem>
				<listitem>
					<para><varname>random_ttext_seq</varname>: Generar un texto temporal de subtipo secuencia aleatorio</para>
				</listitem>
				<listitem>
					<para><varname>random_tgeompoint_seq</varname>: Generar un punto geométrico temporal 2D de subtipo secuencia aleatorio</para>
				</listitem>
				<listitem>
					<para><varname>random_tgeompoint3D_seq</varname>: Generar un punto geométrico temporal 3D de subtipo secuencia aleatorio</para>
				</listitem>
				<listitem>
					<para><varname>random_tgeogpoint_seq</varname>: Generar un punto geográfico temporal 2D de subtipo secuencia aleatorio</para>
				</listitem>
				<listitem>
					<para><varname>random_tgeogpoint3D_seq</varname>: Generar un punto geográfico temporal 3D de subtipo secuencia aleatorio</para>
				</listitem>
				<listitem>
					<para><varname>random_tbool_seqset</varname>: Generar un booleano temporal de subtipo conjunto de secuencias aleatorio</para>
				</listitem>
				<listitem>
					<para><varname>random_tint_seqset</varname>: Generar un entero temporal de subtipo conjunto de secuencias aleatorio</para>
				</listitem>
				<listitem>
					<para><varname>random_tfloat_seqset</varname>: Generar un flotante temporal de subtipo conjunto de secuencias aleatorio</para>
				</listitem>
				<listitem>
					<para><varname>random_ttext_seqset</varname>: Generar un texto temporal de subtipo conjunto de secuencias aleatorio</para>
				</listitem>
				<listitem>
					<para><varname>random_tgeompoint_seqset</varname>: Generar un punto geométrico temporal 2D de subtipo conjunto de secuencias aleatorio</para>
				</listitem>
				<listitem>
					<para><varname>random_tgeompoint3D_seqset</varname>: Generar un punto geométrico temporal 3D de subtipo conjunto de secuencias aleatorio</para>
				</listitem>
				<listitem>
					<para><varname>random_tgeogpoint_seqset</varname>: Generar un punto geográfico temporal 2D de subtipo conjunto de secuencias aleatorio</para>
				</listitem>
				<listitem>
					<para><varname>random_tgeogpoint3D_seqset</varname>: Generar un punto geográfico temporal 3D de subtipo conjunto de secuencias aleatorio</para>
				</listitem>
			</itemizedlist>

	</sect1>

	<sect1>
		<title>Generación de tablas con valores aleatorios</title>

		<para>
			Los archivos <varname>create_test_tables_temporal.sql</varname> y <varname>create_test_tables_tpoint.sql</varname> dan ejemplos de utilización de las funciones que generan valores aleatorios listadas arriba. Por ejemplo, el primer archivo define la función siguiente.
		</para>

		<programlisting xml:space="preserve">
CREATE OR REPLACE FUNCTION create_test_tables_temporal(size int DEFAULT 100)
RETURNS text AS $$
DECLARE
  perc int;
BEGIN
perc := size * 0.01;
IF perc &lt; 1 THEN perc := 1; END IF;

-- ... Table generation ...

RETURN 'The End';
END;
$$ LANGUAGE 'plpgsql';
</programlisting>
		<para>
			La función tiene un parámetro <varname>size</varname> que define el número de  filas en las tablas. Si no se proporciona, crea por defecto tablas de 100 filas. La función define una variable <varname>perc</varname> que calcula el 1% del tamaño de las tablas. Este parámetro se utiliza, por ejemplo, para generar tablas con un 1% de valores nulos. A continuación ilustramos algunos de los comandos que generan tablas.
		</para>

		<para>
			La creación de una tabla <varname>tbl_float</varname> que contiene valores aleatorios <varname>float</varname> en el rango [0,100] con 1% de valores nulos se da a continuación.
		</para>
		<programlisting xml:space="preserve">
CREATE TABLE tbl_float AS
/* Add perc NULL valores */
SELECT k, NULL AS f
FROM generate_series(1, perc) AS k UNION
SELECT k, random_float(0, 100)
FROM generate_series(perc+1, size) AS k;
</programlisting>

		<para>
			La creación de una tabla <varname>tbl_tbox</varname> que contiene valores aleatorios <varname>tbox</varname> donde los límites de los valores están en el rango [0,100] y los límites de las marcas de tiempo están en el rango [2001-01-01, 2001-12-31] se da a continuación.
		</para>
		<programlisting xml:space="preserve">
CREATE TABLE tbl_tbox AS
/* Add perc NULL valores */
SELECT k, NULL AS b
FROM generate_series(1, perc) AS k UNION
SELECT k, random_tbox(0, 100, '2001-01-01', '2001-12-31', 10, 10)
FROM generate_series(perc+1, size) AS k;
</programlisting>

		<para>
			La creación de una tabla <varname>tbl_floatrange</varname> que contiene valores aleatorios <varname>floatrange</varname> donde los límites de los valores están en el rango [0,100] y la máxima diferencia entre los límites inferiores y superiores es 10 se da a continuación.
		</para>
		<programlisting xml:space="preserve">
CREATE TABLE tbl_floatrango AS
/* Add perc NULL valores */
SELECT k, NULL AS f
FROM generate_series(1, perc) AS k UNION
SELECT k, random_floatrango(0, 100, 10)
FROM generate_series(perc+1, size) AS k;
</programlisting>

		<para>
			La creación de una tabla <varname>tbl_timestampset</varname> que contiene valores aleatorios <varname>timestampset</varname> que tienen entre 5 y 10 marcas de tiempo donde las marcas de tiempo están en el rango [2001-01-01, 2001-12-31] y el máximo intervalo entre marcas de tiempo consecutivas es 10 minutos se da a continuación.
		</para>
		<programlisting xml:space="preserve">
CREATE TABLE tbl_timestampset AS
/* Add perc NULL valores */
SELECT k, NULL AS ts
FROM generate_series(1, perc) AS k UNION
SELECT k, random_timestampset('2001-01-01', '2001-12-31', 10, 5, 10)
FROM generate_series(perc+1, size) AS k;
</programlisting>

		<para>
			La creación de una tabla <varname>tbl_period</varname> que contiene valores aleatorios <varname>period</varname> donde las marcas de tiempo están en el rango [2001-01-01, 2001-12-31] y la máxima diferencia entre los límites inferiores y superiores es 10 minutos se da a continuación.
		</para>
		<programlisting xml:space="preserve">
CREATE TABLE tbl_period AS
/* Add perc NULL valores */
SELECT k, NULL AS p
FROM generate_series(1, perc) AS k UNION
SELECT k, random_period('2001-01-01', '2001-12-31', 10)
FROM generate_series(perc+1, size) AS k;
</programlisting>

		<para>
			La creación de una tabla <varname>tbl_geom_point</varname> que contiene valores aleatorios <varname>geometry</varname> 2D point valores, donde las coordenadas x e y están en el rango [0, 100] y en SRID 3812 se da a continuación.
		</para>
		<programlisting xml:space="preserve">
CREATE TABLE tbl_geom_point AS
SELECT 1 AS k, geometry 'SRID=3812;point empty' AS g UNION
SELECT k, random_geom_point(0, 100, 0, 100, 3812)
FROM generate_series(2, size) k;
</programlisting>
		<para>
			Observe que la tabla contiene un valor de punto vacío. Si no se proporciona el SRID, se establece de forma predeterminada en 0.
		</para>

		<para>
			La creación de una tabla <varname>tbl_geog_point3D</varname> que contiene valores aleatorios <varname>geography</varname> 3D point valores, donde las coordenadas x, y, y z están, respectivament, en los rangos [-10, 32], [35, 72] y [0, 1000] y en SRID 7844 se da a continuación.
		</para>
		<programlisting xml:space="preserve">
CREATE TABLE tbl_geog_point3D AS
SELECT 1 AS k, geography 'SRID=7844;pointZ empty' AS g UNION
SELECT k, random_geog_point3D(-10, 32, 35, 72, 0, 1000, 7844)
FROM generate_series(2, size) k;
</programlisting>
		<para>
			Tenga en cuenta que los valores de latitud y longitud se eligen para cubrir aproximadamente la Europa continental. Si no se proporciona el SRID, se establece de forma predeterminada en 4326.
		</para>

		<para>
			La creación de una tabla <varname>tbl_geom_linestring</varname> que contiene valores aleatorios <varname>geometry</varname> 2D linestring valores que tienen entre 5 y 10 vértices, donde las coordenadas x e y están en el rango [0, 100] y en SRID 3812 y la máxima diferencia entre valores de coordenadas consecutivos es 10 unidades en el SRID subyacente se da a continuación.
		</para>
		<programlisting xml:space="preserve">
CREATE TABLE tbl_geom_linestring AS
SELECT 1 AS k, geometry 'linestring empty' AS g UNION
SELECT k, random_geom_linestring(0, 100, 0, 100, 10, 5, 10, 3812)
FROM generate_series(2, size) k;
</programlisting>

		<para>
			La creación de una tabla <varname>tbl_geom_linestring</varname> que contiene valores aleatorios <varname>geometry</varname> 2D linestring valores que tienen entre 5 y 10 vértices, donde las coordenadas x e y están en el rango [0, 100] y la máxima diferencia entre valores de coordenadas consecutivos es 10 unidades en el SRID subyacente se da a continuación.
		</para>
		<programlisting xml:space="preserve">
CREATE TABLE tbl_geom_linestring AS
SELECT 1 AS k, geometry 'linestring empty' AS g UNION
SELECT k, random_geom_linestring(0, 100, 0, 100, 10, 5, 10)
FROM generate_series(2, size) k;
</programlisting>

		<para>
			La creación de una tabla <varname>tbl_geom_polygon3D</varname> que contiene valores aleatorios <varname>geometry</varname> 3D polygon valores sin agujeros, que tienen entre 5 y 10 vértices, donde las coordenadas x, y, y z están en el rango [0, 100] y la máxima diferencia entre valores de coordenadas consecutivos es 10 unidades en el SRID subyacente se da a continuación.
		</para>
		<programlisting xml:space="preserve">
CREATE TABLE tbl_geom_polygon3D AS
SELECT 1 AS k, geometry 'polygon Z empty' AS g UNION
SELECT k, random_geom_polygon3D(0, 100, 0, 100, 0, 100, 10, 5, 10)
FROM generate_series(2, size) k;
</programlisting>

		<para>
			La creación de una tabla <varname>tbl_geom_multipoint</varname> que contiene valores aleatorios <varname>geometry</varname> 2D multipunto valores que tienen entre 5 y 10 points, donde las coordenadas x e y están en el rango [0, 100] y la máxima diferencia entre valores de coordenadas consecutivos es 10 unidades en el SRID subyacente se da a continuación.
		</para>
		<programlisting xml:space="preserve">
CREATE TABLE tbl_geom_multipoint AS
SELECT 1 AS k, geometry 'multipunto empty' AS g UNION
SELECT k, random_geom_multipoint(0, 100, 0, 100, 10, 5, 10)
FROM generate_series(2, size) k;
</programlisting>

		<para>
			La creación de una tabla <varname>tbl_geog_multilinestring</varname> que contiene valores aleatorios <varname>geography</varname> 2D multilinestring valores que tienen entre 5 y 10 linestrings, cada una teniendo entre 5 y 10 vértices, donde las coordenadas x e y estan, respectivamente, en el rangos [-10, 32] y [35, 72] y la máxima diferencia entre valores de coordenadas consecutivos es 10 se da a continuación.
		</para>
		<programlisting xml:space="preserve">
CREATE TABLE tbl_geog_multilinestring AS
SELECT 1 AS k, geography 'multilinestring empty' AS g UNION
SELECT k, random_geog_multilinestring(-10, 32, 35, 72, 10, 5, 10, 5, 10)
FROM generate_series(2, size) k;
</programlisting>

		<para>
			La creación de una tabla <varname>tbl_geometry3D</varname> que contiene valores aleatorios <varname>geometry</varname> 3D de varios tipos se da a continuación. Esta función requiere que las tablas para los diversos tipos de geometría se hayan creado previamente.
		</para>
		<programlisting xml:space="preserve">
CREATE TABLE tbl_geometry3D (
  k serial PRIMARY KEY,
  g geometry);
INSERT INTO tbl_geometry3D(g)
(SELECT g FROM tbl_geom_point3D ORDER BY k LIMIT (size * 0.1)) UNION ALL
(SELECT g FROM tbl_geom_linestring3D ORDER BY k LIMIT (size * 0.1)) UNION ALL
(SELECT g FROM tbl_geom_polygon3D ORDER BY k LIMIT (size * 0.2)) UNION ALL
(SELECT g FROM tbl_geom_multipoint3D ORDER BY k LIMIT (size * 0.2)) UNION ALL
(SELECT g FROM tbl_geom_multilinestring3D ORDER BY k LIMIT (size * 0.2)) UNION ALL
(SELECT g FROM tbl_geom_multipolygon3D ORDER BY k LIMIT (size * 0.2));
</programlisting>


		<para>
			La creación de una tabla <varname>tbl_tbool_inst</varname> que contiene valores aleatorios <varname>tbool</varname> valores de subtipo instante donde las marcas de tiempo están en el rango [2001-01-01, 2001-12-31] se da a continuación.
		</para>
		<programlisting xml:space="preserve">
CREATE TABLE tbl_tbool_inst AS
/* Add perc NULL valores */
SELECT k, NULL AS inst
FROM generate_series(1, perc) AS k UNION
SELECT k, random_tbool_inst('2001-01-01', '2001-12-31')
FROM generate_series(perc+1, size) k;
/* Add perc duplicates */
UPDATE tbl_tbool_inst t1
SET inst = (SELECT inst FROM tbl_tbool_inst t2 WHERE t2.k = t1.k+perc)
WHERE k in (SELECT i FROM generate_series(1 + 2*perc, 3*perc) i);
/* Add perc rows con the same timestamp */
UPDATE tbl_tbool_inst t1
SET inst = (SELECT tboolinst(random_bool(), getTimestamp(inst))
  FROM tbl_tbool_inst t2 WHERE t2.k = t1.k+perc)
WHERE k in (SELECT i FROM generate_series(1 + 4*perc, 5*perc) i);
</programlisting>
		<para>
			Como se puede ver arriba, la tabla tiene un porcentaje de valores nulos, de duplicados y de filas con la misma marca de tiempo.
		</para>

		<para>
			La creación de una tabla <varname>tbl_tint_instset</varname> que contiene valores aleatorios <varname>tint</varname> valores de subtipo conjunto de instantes que tienen entre 5 y 10 marcas de tiempo donde the integer valores están en el rango [0, 100], las marcas de tiempo están en el rango [2001-01-01, 2001-12-31], la máxima diferencia entre dos valores consecutivos es 10 y el máximo intervalo entre dos instantes consecutivos es 10 minutos se da a continuación.
		</para>
		<programlisting xml:space="preserve">
CREATE TABLE tbl_tint_instset AS
/* Add perc NULL valores */
SELECT k, NULL AS ti
FROM generate_series(1, perc) AS k UNION
SELECT k, random_tint_instset(0, 100, '2001-01-01', '2001-12-31', 10, 10, 5, 10) AS ti
FROM generate_series(perc+1, size) k;
/* Add perc duplicates */
UPDATE tbl_tint_instset t1
SET ti = (SELECT ti FROM tbl_tint_instset t2 WHERE t2.k = t1.k+perc)
WHERE k in (SELECT i FROM generate_series(1 + 2*perc, 3*perc) i);
/* Add perc rows con the same timestamp */
UPDATE tbl_tint_instset t1
SET ti = (SELECT ti + random_int(1, 2) FROM tbl_tint_instset t2 WHERE t2.k = t1.k+perc)
WHERE k in (SELECT i FROM generate_series(1 + 4*perc, 5*perc) i);
/* Add perc rows that meet */
UPDATE tbl_tint_instset t1
SET ti = (SELECT shift(ti, endTimestamp(ti)-startTimestamp(ti))
  FROM tbl_tint_instset t2 WHERE t2.k = t1.k+perc)
WHERE t1.k in (SELECT i FROM generate_series(1 + 6*perc, 7*perc) i);
/* Add perc rows that overlap */
UPDATE tbl_tint_instset t1
SET ti = (SELECT shift(ti, date_trunc('minute',(endTimestamp(ti)-startTimestamp(ti))/2))
  FROM tbl_tint_instset t2 WHERE t2.k = t1.k+2)
WHERE t1.k in (SELECT i FROM generate_series(1 + 8*perc, 9*perc) i);
</programlisting>
		<para>
			Como se puede ver arriba, la tabla tiene un porcentaje de valores nulos, de duplicados, de filas con la misma marca de tiempo, de filas que se encuentran y de filas que se superponen.
		</para>

		<para>
			La creación de una tabla <varname>tbl_tfloat_seq</varname> que contiene valores aleatorios <varname>tfloat</varname> valores de subtipo secuencia que tienen entre 5 y 10 marcas de tiempo donde the float valores están en el rango [0, 100], las marcas de tiempo están en el rango [2001-01-01, 2001-12-31], la máxima diferencia entre dos valores consecutivos es 10 y el máximo intervalo entre dos instantes consecutivos es 10 minutos se da a continuación.
		</para>
		<programlisting xml:space="preserve">
CREATE TABLE tbl_tfloat_seq AS
/* Add perc NULL valores */
SELECT k, NULL AS seq
FROM generate_series(1, perc) AS k UNION
SELECT k, random_tfloat_seq(0, 100, '2001-01-01', '2001-12-31', 10, 10, 5, 10) AS seq
FROM generate_series(perc+1, size) k;
/* Add perc duplicates */
UPDATE tbl_tfloat_seq t1
SET seq = (SELECT seq FROM tbl_tfloat_seq t2 WHERE t2.k = t1.k+perc)
WHERE k in (SELECT i FROM generate_series(1 + 2*perc, 3*perc) i);
/* Add perc tuples with the same timestamp */
UPDATE tbl_tfloat_seq t1
SET seq = (SELECT seq + random_int(1, 2) FROM tbl_tfloat_seq t2 WHERE t2.k = t1.k+perc)
WHERE k in (SELECT i FROM generate_series(1 + 4*perc, 5*perc) i);
/* Add perc tuples that meet */
UPDATE tbl_tfloat_seq t1
SET seq = (SELECT shift(seq, timespan(seq)) FROM tbl_tfloat_seq t2 WHERE t2.k = t1.k+perc)
WHERE t1.k in (SELECT i FROM generate_series(1 + 6*perc, 7*perc) i);
/* Add perc tuples that overlap */
UPDATE tbl_tfloat_seq t1
SET seq = (SELECT shift(seq, date_trunc('minute',timespan(seq)/2))
  FROM tbl_tfloat_seq t2 WHERE t2.k = t1.k+perc)
WHERE t1.k in (SELECT i FROM generate_series(1 + 8*perc, 9*perc) i);
</programlisting>

		<para>
			La creación de una tabla <varname>tbl_ttext_seqset</varname> que contiene valores aleatorios <varname>ttext</varname> de subtipo conjunto de secuencias que tienen entre 5 y 10 sequences, cada una teniendo entre 5 y 10 marcas de tiempo, donde los valores de texto tienen máximo 10 caracteres, las marcas de tiempo están en el rango [2001-01-01, 2001-12-31] y el máximo intervalo entre dos instantes consecutivos es 10 minutos se da a continuación.
		</para>
		<programlisting xml:space="preserve">
CREATE TABLE tbl_ttext_seqset AS
/* Add perc NULL valores */
SELECT k, NULL AS ts
FROM generate_series(1, perc) AS k UNION
SELECT k, random_ttext_seqset('2001-01-01', '2001-12-31', 10, 10, 5, 10, 5, 10) AS ts
FROM generate_series(perc+1, size) AS k;
/* Add perc duplicates */
UPDATE tbl_ttext_seqset t1
SET ts = (SELECT ts FROM tbl_ttext_seqset t2 WHERE t2.k = t1.k+perc)
WHERE k in (SELECT i FROM generate_series(1 + 2*perc, 3*perc) i);
/* Add perc tuples con the same timestamp */
UPDATE tbl_ttext_seqset t1
SET ts = (SELECT ts || text 'A' FROM tbl_ttext_seqset t2 WHERE t2.k = t1.k+perc)
WHERE k in (SELECT i FROM generate_series(1 + 4*perc, 5*perc) i);
/* Add perc tuples that meet */
UPDATE tbl_ttext_seqset t1
SET ts = (SELECT shift(ts, timespan(ts)) FROM tbl_ttext_seqset t2 WHERE t2.k = t1.k+perc)
WHERE t1.k in (SELECT i FROM generate_series(1 + 6*perc, 7*perc) i);
/* Add perc tuples that overlap */
UPDATE tbl_ttext_seqset t1
SET ts = (SELECT shift(ts, date_trunc('minute', timespan(ts)/2))
  FROM tbl_ttext_seqset t2 WHERE t2.k = t1.k+perc)
WHERE t1.k in (SELECT i FROM generate_series(1 + 8*perc, 9*perc) i);
</programlisting>

		<para>
			La creación de una tabla <varname>tbl_tgeompoint_instset</varname> que contiene valores aleatorios <varname>tgeompoint</varname> 2D valores de subtipo conjunto de instantes que tienen entre 5 y 10 instantes, donde the x e y coordenadas están en el rango [0, 100] y en SRID 3812, las marcas de tiempo están en el rango [2001-01-01, 2001-12-31], la máxima diferencia entre coordenadas successivas máximo 10 unidades en el SRID subyacente y el máximo intervalo entre dos instantes consecutivos es 10 minutos se da a continuación.
		</para>
		<programlisting xml:space="preserve">
CREATE TABLE tbl_tgeompoint_instset AS
SELECT k, random_tgeompoint_instset(0, 100, 0, 100, '2001-01-01', '2001-12-31',
  10, 10, 5, 10, 3812) AS ti
FROM generate_series(1, size) k;
/* Add perc duplicates */
UPDATE tbl_tgeompoint_instset t1
SET ti = (SELECT ti FROM tbl_tgeompoint_instset t2 WHERE t2.k = t1.k+perc)
WHERE k IN (SELECT i FROM generate_series(1, perc) i);
/* Add perc tuples con the same timestamp */
UPDATE tbl_tgeompoint_instset t1
SET ti = (SELECT round(ti,6) FROM tbl_tgeompoint_instset t2 WHERE t2.k = t1.k+perc)
WHERE k IN (SELECT i FROM generate_series(1 + 2*perc, 3*perc) i);
/* Add perc tuples that meet */
UPDATE tbl_tgeompoint_instset t1
SET ti = (SELECT shift(ti, endTimestamp(ti)-startTimestamp(ti))
  FROM tbl_tgeompoint_instset t2 WHERE t2.k = t1.k+perc)
WHERE t1.k IN (SELECT i FROM generate_series(1 + 4*perc, 5*perc) i);
/* Add perc tuples that overlap */
UPDATE tbl_tgeompoint_instset t1
SET ti = (SELECT shift(ti, date_trunc('minute',(endTimestamp(ti)-startTimestamp(ti))/2))
  FROM tbl_tgeompoint_instset t2 WHERE t2.k = t1.k+2)
WHERE t1.k IN (SELECT i FROM generate_series(1 + 6*perc, 7*perc) i);
</programlisting>

		<para>
			Finalmente, la creación de una tabla <varname>tbl_tgeompoint3D_seqset</varname> que contiene valores aleatorios <varname>tgeompoint</varname> 3D valores de subtipo conjunto de secuencias que tienen entre 5 y 10 sequences, cada una teniendo entre 5 y 10 marcas de tiempo, donde las coordenadas x, y, y z están en el rango [0, 100] y en SRID 3812, las marcas de tiempo están en el rango [2001-01-01, 2001-12-31], la máxima diferencia entre coordenadas successivas máximo 10 unidades en el SRID subyacente y el máximo intervalo entre dos instantes consecutivos es 10 minutos se da a continuación.
		</para>
		<programlisting xml:space="preserve">
DROP TABLE IF EXISTS tbl_tgeompoint3D_seqset;
CREATE TABLE tbl_tgeompoint3D_seqset AS
SELECT k, random_tgeompoint3D_seqset(0, 100, 0, 100, 0, 100, '2001-01-01', '2001-12-31',
  10, 10, 5, 10, 5, 10, 3812) AS ts
FROM generate_series(1, size) AS k;
/* Add perc duplicates */
UPDATE tbl_tgeompoint3D_seqset t1
SET ts = (SELECT ts FROM tbl_tgeompoint3D_seqset t2 WHERE t2.k = t1.k+perc)
WHERE k IN (SELECT i FROM generate_series(1, perc) i);
/* Add perc tuples con the same timestamp */
UPDATE tbl_tgeompoint3D_seqset t1
SET ts = (SELECT round(ts,3) FROM tbl_tgeompoint3D_seqset t2 WHERE t2.k = t1.k+perc)
WHERE k IN (SELECT i FROM generate_series(1 + 2*perc, 3*perc) i);
/* Add perc tuples that meet */
UPDATE tbl_tgeompoint3D_seqset t1
SET ts = (SELECT shift(ts, timespan(ts)) FROM tbl_tgeompoint3D_seqset t2 WHERE t2.k = t1.k+perc)
WHERE t1.k IN (SELECT i FROM generate_series(1 + 4*perc, 5*perc) i);
/* Add perc tuples that overlap */
UPDATE tbl_tgeompoint3D_seqset t1
SET ts = (SELECT shift(ts, date_trunc('minute', timespan(ts)/2))
  FROM tbl_tgeompoint3D_seqset t2 WHERE t2.k = t1.k+perc)
WHERE t1.k IN (SELECT i FROM generate_series(1 + 6*perc, 7*perc) i);
</programlisting>
	</sect1>

	<sect1>
	<title>Generador para tipos de red temporales</title>
		<itemizedlist>
			<listitem>
				<para><varname>random_fraction</varname>: Generar una fracción aleatoria en el rango [0,1]</para>
			</listitem>
			<listitem>
				<para><varname>random_npoint</varname>: Genera un punto de red aleatorio</para>
			</listitem>
			<listitem>
				<para><varname>random_nsegment</varname>: Genera un segmento de red aleatorio</para>
			</listitem>
			<listitem>
				<para><varname>random_tnpoint_inst</varname>: Generar un punto de red temporal de subtipo instant aleatorio</para>
			</listitem>
			<listitem>
				<para><varname>random_tnpoint_instset</varname>: Generar un punto de red temporal de subtipo conjunto de instantes aleatorio</para>
			</listitem>
			<listitem>
				<para><varname>random_tnpoint_seq</varname>: Generar un punto de red temporal de subtipo secuencia aleatorio</para>
			</listitem>
			<listitem>
				<para><varname>random_tnpoint_seqset</varname>: Generar un punto de red temporal de subtipo conjunto de secuencias aleatorio</para>
			</listitem>
		</itemizedlist>

		<para>
			El archivo
			<varname>/datagen/npoint/create_test_tables_tnpoint.sql</varname>
			da ejemplos de utilización de las funciones que generan valores aleatorios listadas arriba.
		</para>
	</sect1>

</appendix>
