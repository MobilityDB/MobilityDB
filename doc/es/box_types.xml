<?xml version="1.0" encoding="UTF-8"?>
<!--
   ****************************************************************************
    MobilityDB Manual
    Copyright(c) MobilityDB Contributors

    This documentation is licensed under a Creative Commons Attribution-Share
    Alike 3.0 License: https://creativecommons.org/licenses/by-sa/3.0/
   ****************************************************************************
-->
<chapter id="box_types">
	<title>Tipos de cuadro delimitador</title>
	<para>A continuación presentamos las funciones y operadores para tipos cuadro delimitador. Estas funciones y operadores son polimórficos, es decir, sus argumentos pueden ser de varios tipos y el tipo del resultado puede depender del tipo de los argumentos. Para expresar esto, usamos la siguiente notación:</para>

	<itemizedlist>
		<listitem>
			<para><varname>box</varname> representa cualquier tipos cuadro delimitador, es decir <varname>tbox</varname> o <varname>stbox</varname>.</para>
		</listitem>
	</itemizedlist>
  <para>A continuación, especificamos con el símbolo &Z_support; que la función admite puntos 3D y con el símbolo &geography_support; que la función está disponible para geografías.</para>

	<sect1 id="box_types_input_output">
		<title>Entrada y salida</title>
		<para>
			MobilityDB generaliza los formatos de entrada y salida Well-Known Text (WKT) y Well-Known Binary (WKB) del Open Geospatial Consortium para todos los tipos temporales. Presentamos a continuación las funciones de entrada y salida para los tipos de cuadro delimitador.
		</para>

		<para>Un <varname>tbox</varname> se compone de dimensiónes de valor numérico y/o de tiempo. Para cada dimensión, se proporciona un rango, es decir, un <varname>floatspan</varname> para la dimensión de valor y un <varname>tstzspan</varname> para la dimensión de tiempo. Ejemplos de entrada de valores <varname>tbox</varname> son los siguientes:
			<programlisting language="sql" xml:space="preserve">
-- Dimensiones de valor y tiempo
SELECT tbox 'TBOX XT([1.0,2.0],[2000-01-01,2000-01-02])';
-- Sólo dimensión de valor
SELECT tbox 'TBOX X((1.0,2.0))';
-- Sólo dimensión de tiempo
SELECT tbox 'TBOX XT((2000-01-01,2000-01-02))';
</programlisting>
		</para>

		<para>Un <varname>stbox</varname> se compone de dimensiónes espacial y/o temporal, donde las coordenadas de la dimensión espacial pueden ser 2D o 3D. Para la dimensión de tiempo se da un <varname>tstzspan</varname>, y para la dimensión espacial se dan los valores mínimos y máximos de las coordenadas, donde estas últimas pueden ser cartesianas (planas) o geodésicas (esféricas). Se puede especificar el SRID de las coordenadas; si no es el caso, se asume un valor de 0 (desconocido) y 4326 (correspondiente a WGS84), respectivamente, para coordenadas planas y geodésicas. Los cuadros geodésicos siempre tienen una dimensión Z para tener en cuenta la curvatura de la esfera o esferoide subyacente. Ejemplos de entrada de valores <varname>stbox</varname> son los siguientes:
			<programlisting language="sql" xml:space="preserve">
-- Sólo dimensión de valor con coordenadas X e Y
SELECT stbox 'STBOX X((1.0,2.0),(1.0,2.0))';
-- Sólo dimensión de valor con coordenadas X, Y y Z
SELECT stbox 'STBOX Z((1.0,2.0,3.0),(1.0,2.0,3.0))';
-- Dimensiones de valor (con coordenadas X e Y) y de tiempo
SELECT stbox 'STBOX XT(((1.0,2.0),(1.0,2.0)),[2001-01-03,2001-01-03])';
-- Dimensiones de valor (con coordenadas X, Y y Z) y de tiempo
SELECT stbox 'STBOX ZT(((1.0,2.0,3.0),(1.0,2.0,3.0)),[2001-01-01,2001-01-03])';
-- Sólo dimensión de tiempo
SELECT stbox 'STBOX T([2001-01-03,2001-01-03])';
-- Sólo dimensión de valores con coordenadas geodéticas X, Y y Z
SELECT stbox 'GEODSTBOX Z((1.0,2.0,3.0),(1.0,2.0,3.0))';
-- Dimensiones de valor (con coordenadas geodéticas X, Y y Z) y de tiempo
SELECT stbox 'GEODSTBOX ZT(((1.0,2.0,3.0),(1.0,2.0,3.0)),[2001-01-04,2001-01-04])';
-- Sólo dimensión temporal para cuadro geodético
SELECT stbox 'GEODSTBOX T([2001-01-03,2001-01-03])';
-- Se indica el SRID
SELECT stbox 'SRID=5676;STBOX XT(((1.0,2.0),(1.0,2.0)),[2001-01-04,2001-01-04])';
SELECT stbox 'SRID=4326;GEODSTBOX Z((1.0,2.0,3.0),(1.0,2.0,3.0))';
</programlisting>
		</para>

			<para>
				Damos a continuación las funciones de entrada y salida de tipos de cuadro delimitador en formato binario conocido.
			</para>

			<itemizedlist>
				<listitem id="box_asBinary">
					<indexterm><primary><varname>asBinary</varname></primary></indexterm>
					<para>Obtener la representación binaria conocida (Well-Known Binary o WKB)</para>
					<para><varname>asBinary(box,endian text='') → bytea</varname></para>
					<para>El resultado se codifica utilizando la codificación little-endian (NDR) o big-endian (XDR). Si no se especifica ninguna codificación, se utiliza la codificación de la máquina.</para>
					<programlisting language="sql" xml:space="preserve">
SELECT asBinary(tbox 'TBOX XT([1,2),[2000-01-01,2000-01-02))');
-- \x01030a0001005c6c29ffffffff00bc434713000000060001000000000000f03f0000000000000040
SELECT asBinary(tbox 'TBOX XT([1,2),[2000-01-01,2000-01-02))', 'XDR');
-- \x0003000a01ffffffff296c5c00000000134743bc000006013ff00000000000004000000000000000
SELECT asBinary(stbox 'STBOX Z((1,1),(2,2))');
-- \x0101000000000000f03f0000000000000040000000000000f03f0000000000000040
</programlisting>
				</listitem>

				<listitem id="box_asHexWKB">
					<indexterm><primary><varname>asHexWKB</varname></primary></indexterm>
					<para>Obtener la representación hexadecimal binaria conocida (HexWKB) en formato texto</para>
					<para><varname>asHexWKB(box,endian text='') → text</varname></para>
					<para>El resultado se codifica utilizando la codificación little-endian (NDR) o big-endian (XDR). Si no se especifica ninguna codificación, se utiliza la codificación de la máquina.</para>
					<programlisting language="sql" xml:space="preserve">
SELECT asHexWKB(tbox 'TBOX XT([1,2),[2000-01-01,2000-01-02))');
-- 01030A0001005C6C29FFFFFFFF00BC434713000000060001000000000000F03F0000000000000040
SELECT asHexWKB(tbox 'TBOX XT([1,2)[2000-01-01,2000-01-02))', 'XDR');
-- 0003000A01FFFFFFFF296C5C00000000134743BC000006013FF00000000000004000000000000000
SELECT asHexWKB(stbox 'STBOX X((1,1),(2,2))');
-- 0101000000000000F03F0000000000000040000000000000F03F0000000000000040
</programlisting>
				</listitem>

				<listitem id="box_FromBinary">
					<indexterm><primary><varname>tboxFromBinary</varname></primary></indexterm>
					<indexterm><primary><varname>stboxFromBinary</varname></primary></indexterm>
					<para>Entrar un cuadro delimitador en una representación binaria conocida (WKB)</para>
					<para><varname>tboxFromBinary(bytea) → tbox</varname></para>
					<para><varname>stboxFromBinary(bytea) → stbox</varname></para>
					<programlisting language="sql" xml:space="preserve">
SELECT tboxFromBinary(
  '\x01030a0001005c6c29ffffffff00bc434713000000060001000000000000f03f0000000000000040');
-- TBOX XT([1,2),[2000-01-01,2000-01-02))
SELECT stboxFromBinary(
  '\x0101000000000000f03f0000000000000040000000000000f03f0000000000000040');
--  STBOX X((1,1),(2,2))
</programlisting>
				</listitem>

				<listitem id="box_FromHexWKB">
					<indexterm><primary><varname>tboxFromHexWKB</varname></primary></indexterm>
					<indexterm><primary><varname>stboxFromHexWKB</varname></primary></indexterm>
					<para>Entrar un cuadro delimitador temporal en una representación hexadecimal binaria conocida (HexWKB)</para>
					<para><varname>tboxFromHexWKB(text) → tbox</varname></para>
					<para><varname>stboxFromHexWKB(text) → stbox</varname></para>
					<programlisting language="sql" xml:space="preserve">
SELECT tboxFromHexWKB(
  '01030A0001005C6C29FFFFFFFF00BC434713000000060001000000000000F03F0000000000000040');
-- TBOX XT([1,2),[2000-01-01,2000-01-02))
SELECT stboxFromHexWKB(
  '0101000000000000F03F0000000000000040000000000000F03F0000000000000040');
-- STBOX X((1,1),(2,2))
</programlisting>
				</listitem>
			</itemizedlist>
	</sect1>

	<sect1 id="box_types_constructors">
		<title>Constructores</title>

		<para>
			El tipo <varname>tbox</varname> tienen varias funciones constructoras dependiendo de si se da la extensión de valor y/o de tiempo. La extensión de valor se puede especificar mediante un número o un intervalo, mientras que la extensión de tiempo se puede especificar mediante un tipo de tiempo.
		</para>

		<itemizedlist>
			<listitem id="tbox">
				<indexterm><primary><varname>tbox</varname></primary></indexterm>
				<para>Constructor para <varname>tbox</varname></para>
				<para><varname>tbox(time) → tbox</varname></para>
				<para><varname>tbox({number,numspan}) → tbox</varname></para>
				<para><varname>tbox({number,numspan},time) → tbox</varname></para>
				<programlisting language="sql" xml:space="preserve">
-- Dimensiones de valores y de tiempo
SELECT tbox(1.0, timestamptz '2001-01-01');
SELECT tbox(floatspan '[1.0,2.0)', tstzspan '[2001-01-01,2001-01-02)');
-- Sólo dimensión de valores
SELECT tbox(floatspan '[1.0,2.0)');
-- Sólo dimensión de tiempo
SELECT tbox(tstzspan '[2001-01-01,2001-01-02)');
</programlisting>
			</listitem>
		</itemizedlist>

		<para>
			El tipo <varname>stbox</varname> tiene varias funciones constructoras dependiendo de si se da la extensión espacial y/o de tiempo. Las coordenadas de la extension espacial pueden ser 2D o 3D y pueden ser cartesianas o geodésicas. La extensión espacial se puede especificar mediante los valores de coordenadas mínimo y máximo. El SRID se puede especificar en un último argumento opcional. Si no se proporciona, se asume un valor 0 (respectivamente 4326) por defecto para los cuadros planos (respectivamente geodésicos). La extensión espacial también se puede especificar mediante una geometría o una geografía. La extensión temporal se puede especificar mediante un tipo de tiempo.
		</para>

		<itemizedlist>
			<listitem id="stbox">
				<indexterm><primary><varname>stbox</varname></primary></indexterm>
				<indexterm><primary><varname>stbox_z</varname></primary></indexterm>
				<indexterm><primary><varname>stbox_t</varname></primary></indexterm>
				<indexterm><primary><varname>stbox_zt</varname></primary></indexterm>
				<indexterm><primary><varname>geodstbox_z</varname></primary></indexterm>
				<indexterm><primary><varname>geodstbox_t</varname></primary></indexterm>
				<indexterm><primary><varname>geodstbox_zt</varname></primary></indexterm>
				<para>Constructor para <varname>stbox</varname></para>
				<para><varname>stbox(float,float,float,float,integer) → stbox</varname></para>
				<para><varname>stbox_z(float,float,float,float,float,float,integer) → stbox</varname></para>
				<para><varname>stbox_t(float,float,float,float,{timestamptz,tstzspan},integer) → stbox</varname></para>
				<para><varname>stbox_zt(float,float,float,float,float,float,{timestamptz,tstzspan},integer) → stbox</varname></para>
				<para><varname>geodstbox_z(float,float,float,float,float,float,integer) → stbox</varname></para>
				<para><varname>geodstbox_t(time) → stbox</varname></para>
				<para><varname>geodstbox_zt(float,float,float,float,float,float,{timestamptz,tstzspan},integer) → stbox</varname></para>
				<para><varname>stbox(geo) → stbox</varname></para>
				<para><varname>stbox_t(time) → stbox</varname></para>
				<para><varname>stbox(geo,time) → stbox</varname></para>
				<programlisting language="sql" xml:space="preserve">
-- Sólo dimensión de valores con coordenadas X e Y
SELECT stbox(1.0,2.0,1.0,2.0);
-- Sólo dimensión de valores con coordenadas X, Y y Z
SELECT stbox_z(1.0,2.0,3.0,1.0,2.0,3.0);
-- Sólo dimensión de valores con coordenadas X, Y y Z con SRID
SELECT stbox_z(1.0,2.0,3.0,1.0,2.0,3.0,5676);
-- Sólo dimensión de tiempo
SELECT stbox_t('[2001-01-03,2001-01-03]');
-- Dimensiones de valor (con coordenadas X e Y) y de tiempo
SELECT stbox_t(1.0,2.0, 1.0,2.0, '[2001-01-03,2001-01-03]');
-- Dimensiones de valor (con coordenadas X, Y y Z) y de tiempo
SELECT stbox_zt(1.0,2.0,3.0, 1.0,2.0,3.0, '[2001-01-03,2001-01-03]');
-- Sólo dimensión de valores con coordenadas geodéticas X, Y y Z
SELECT geodstbox_z(1.0,2.0,3.0,1.0,2.0,3.0);
-- Sólo dimensión de tiempo para cuadro geodético
SELECT geodstbox_t('[2001-01-03,2001-01-03]');
-- Dimensiones de valor (con coordenadas geodéticas X, Y y Z) y de tiempo
SELECT geodstbox_zt(1.0,2.0,3.0, 1.0,2.0,3.0, '[2001-01-03,2001-01-04]');
-- Geometry and time dimensión
SELECT stbox(geometry 'Linestring(1 1 1,2 2 2)', tstzspan '[2001-01-03, 2001-01-05]');
-- Geography and time dimensión
SELECT stbox(geography 'Linestring(1 1 1,2 2 2)', tstzspan '[2001-01-03, 2001-01-05]');
</programlisting>
			</listitem>
		</itemizedlist>
	</sect1>

	<sect1 id="box_types_casting">
		<title>Conversiones de tipo</title>

		<itemizedlist>
			<listitem id="tbox_cast_to">
				<indexterm><primary><varname>::</varname></primary></indexterm>
				<para>Convertir un <varname>tbox</varname> a otro tipo</para>
				<para><varname>tbox::{floatspan,tstzspan}</varname></para>
				<programlisting language="sql" xml:space="preserve">
SELECT tbox 'TBOX XT((1,2),[2000-01-01,2000-01-02))'::floatspan;
-- (1, 2)
SELECT tbox 'TBOX XT((1,2),[2000-01-01,2000-01-02))'::tstzspan;
-- [2000-01-01,2000-01-02)
</programlisting>
			</listitem>

			<listitem id="tbox_cast_from">
				<indexterm><primary><varname>::</varname></primary></indexterm>
				<para>Convertir otro tipo a un <varname>tbox</varname></para>
				<para><varname>{number,span,time,tnumber}::tbox</varname></para>
				<programlisting language="sql" xml:space="preserve">
SELECT floatspan '(1.0,2.0)'::tbox;
-- TBOX X((1,2))
SELECT tstzspanset '{(2001-01-01,2001-01-02),(2001-01-03,2001-01-04)}'::tbox;
-- TBOX T((2001-01-01,2001-01-04))
</programlisting>
			</listitem>

			<listitem id="stbox_cast_to">
				<indexterm><primary><varname>::</varname></primary></indexterm>
				<para>Convertir un <varname>stbox</varname> a otro tipo</para>
				<para><varname>stbox::{tstzspan,geometry}</varname></para>
				<programlisting language="sql" xml:space="preserve">
SELECT stbox 'STBOX XT(((1.0,2.0),(3.0,4.0)),[2001-01-01,2001-01-03])'::tstzspan;
-- [2000-01-01,2000-01-03]
SELECT ST_AsEWKT(stbox 'SRID=4326;STBOX XT(((1,1),(5,5)),[2000-01-01,2000-01-05])'::geometry);
-- SRID=4326;POLYGON((1 1,1 5,5 5,5 1,1 1))
SELECT ST_AsEWKT(stbox 'SRID=4326;STBOX XT(((1,1),(1,5)),[2000-01-01,2000-01-05])'::geometry);
-- SRID=4326;LINESTRING(1 1,1 5)
SELECT ST_AsEWKT(stbox 'SRID=4326;STBOX XT(((1,1),(1,1)),[2000-01-01,2000-01-05])'::geometry);
-- SRID=4326;POINT(1 1)
SELECT ST_AsEWKT(stbox 'SRID=4326;STBOX ZT(((1,1,1),(5,5,5)),[2000-01-01,2000-01-05])'::
  geometry);
/* SRID=4326;POLYHEDRALSURFACE(((1 1 1,1 5 1,5 5 1,5 1 1,1 1 1)),
  ((1 1 5,5 1 5,5 5 5,1 5 5,1 1 5)),((1 1 1,1 1 5,1 5 5,1 5 1,1 1 1)),
  ((5 1 1,5 5 1,5 5 5,5 1 5,5 1 1)),((1 1 1,5 1 1,5 1 5,1 1 5,1 1 1)),
  ((1 5 1,1 5 5,5 5 5,5 5 1,1 5 1))) */
</programlisting>
			</listitem>

			<listitem id="stbox_cast_from">
				<indexterm><primary><varname>::</varname></primary></indexterm>
				<para>Convertir otro tipo a un <varname>stbox</varname></para>
				<para><varname>{geo,time,tpoint}::stbox</varname></para>
				<programlisting language="sql" xml:space="preserve">
SELECT geometry 'Linestring(1 1,2 2)'::stbox;
-- STBOX X((1,1),(2,2))
SELECT tstzspanset '{(2001-01-01,2001-01-02),(2001-01-03,2001-01-04)}'::stbox;
-- STBOX T((2001-01-01,2001-01-04))
</programlisting>
			</listitem>
		</itemizedlist>
	</sect1>

	<sect1 id="box_types_accessors">
		<title>Accesores</title>

		<itemizedlist>
			<listitem id="hasX">
				<indexterm><primary><varname>hasX</varname></primary></indexterm>
				<indexterm><primary><varname>hasZ</varname></primary></indexterm>
				<indexterm><primary><varname>hasT</varname></primary></indexterm>
				<para>¿Tiene dimensión X/Z/T?</para>
				<para><varname>hasX(box) → boolean</varname></para>
				<para><varname>hasZ(stbox) → boolean</varname></para>
				<para><varname>hasT(box) → boolean</varname></para>
				<programlisting language="sql" xml:space="preserve">
SELECT hasX(tbox 'TBOX T([2000-01-01,2000-01-03))');
-- false
SELECT hasX(stbox 'STBOX X((1.0,2.0),(3.0,4.0))');
-- true
SELECT hasZ(stbox 'STBOX X((1.0,2.0),(3.0,4.0))');
-- false
SELECT hasT(tbox 'TBOX XT((1.0,3.0),[2000-01-01,2000-01-03])');
-- true
SELECT hasT(stbox 'STBOX X((1.0,2.0),(3.0,4.0))');
-- false
</programlisting>
			</listitem>

			<listitem id="isGeodetic">
				<indexterm><primary><varname>isGeodetic</varname></primary></indexterm>
				<para>¿Es geodética?</para>
				<para><varname>isGeodetic(stbox) → boolean</varname></para>
				<programlisting language="sql" xml:space="preserve">
SELECT isGeodetic(stbox 'GEODSTBOX Z('(1.0,1.0,0.0),(3.0,3.0,1.0)))');
-- true
SELECT isGeodetic(stbox 'STBOX XT(((1.0,2.0),(3.0,4.0)),[2001-01-01,2001-01-02])');
-- false
</programlisting>
			</listitem>

			<listitem id="Xmin">
				<indexterm><primary><varname>Xmin</varname></primary></indexterm>
				<indexterm><primary><varname>Ymin</varname></primary></indexterm>
				<indexterm><primary><varname>Zmin</varname></primary></indexterm>
				<indexterm><primary><varname>Tmin</varname></primary></indexterm>
				<para>Obtener el valor mínimo de X/Y/Z/T</para>
				<para><varname>Xmin(box) → float</varname></para>
				<para><varname>Ymin(stbox) → float</varname></para>
				<para><varname>Zmin(stbox) → float</varname></para>
				<para><varname>Tmin(box) → timestamptz</varname></para>
				<programlisting language="sql" xml:space="preserve">
SELECT Xmin(tbox 'TBOX XT((1.0,3.0),[2000-01-01,2000-01-03))');
-- 1
SELECT Ymin(stbox 'STBOX X((1.0,2.0),(3.0,4.0))');
-- 2
SELECT Zmin(stbox 'STBOX Z((1.0,2.0,3.0),(4.0,5.0,6.0))');
-- 3
SELECT Tmin(stbox 'GEODSTBOX T([2001-01-01,2001-01-03))');
-- 2001-01-01
</programlisting>
			</listitem>

			<listitem id="Xmax">
				<indexterm><primary><varname>Xmax</varname></primary></indexterm>
				<indexterm><primary><varname>Ymax</varname></primary></indexterm>
				<indexterm><primary><varname>Zmax</varname></primary></indexterm>
				<indexterm><primary><varname>Tmax</varname></primary></indexterm>
				<para>Obtener el valor máximo de X/Y/Z/T</para>
				<para><varname>Xmax(box) → float</varname></para>
				<para><varname>Ymax(stbox) → float</varname></para>
				<para><varname>Zmax(stbox) → float</varname></para>
				<para><varname>Tmax(box) → timestamptz</varname></para>
				<programlisting language="sql" xml:space="preserve">
SELECT Xmax(stbox 'STBOX X((1.0,2.0),(3.0,4.0))');
-- 3
SELECT Ymax(stbox 'STBOX X((1.0,2.0),(3.0,4.0))');
-- 4
SELECT Zmax(stbox 'STBOX Z((1.0,2.0,3.0),(4.0,5.0,6.0))');
-- 6
SELECT Tmax(stbox 'GEODSTBOX T([2001-01-01,2001-01-03))');
-- 2001-01-03
</programlisting>
			</listitem>
		</itemizedlist>
	</sect1>

	<sect1 id ="box_types_transformations">
			<title>Transformaciones</title>

			<itemizedlist>
				<listitem id="getSpace">
					<indexterm><primary><varname>getSpace</varname></primary></indexterm>
					<para>Obtener la dimensión espacial del cuadro delimitador, eliminando la dimensión temporal, si existe</para>
					<para><varname>getSpace(stbox) → stbox</varname></para>
					<programlisting language="sql" xml:space="preserve">
SELECT getSpace(stbox 'STBOX ZT(((1,1,1),(2,2,2)),[2001-01-01,2001-01-03])');
-- STBOX Z((1,1,1),(2,2,2))
</programlisting>
				</listitem>
			</itemizedlist>

			<para>
				Las funciones dadas a continuación expanden los cuadros delimitadores en la dimensión de valor y de tiempo o establecen la precisión de la dimensión de valor. Estas funciones generan un error si la dimensión correspondiente no está presente.
			</para>
			<itemizedlist>
				<listitem id="expandValue">
					<indexterm><primary><varname>expandValue</varname></primary></indexterm>
					<para>Extender la dimensión numérica del cuadro delimitador con un valor flotante</para>
					<para><varname>expandValue(tbox,float) → tbox</varname></para>
					<programlisting language="sql" xml:space="preserve">
SELECT expandValue(tbox 'TBOX XT((1,2),[2001-01-01,2001-01-03])', 1);
-- TBOX XT((0,3),[2001-01-01, 2001-01-03])
SELECT expandValue(tbox 'TBOX T([2001-01-01,2001-01-03))', 1);
-- The box must have value dimensión
</programlisting>
				</listitem>

				<listitem id="expandSpace">
					<indexterm><primary><varname>expandSpace</varname></primary></indexterm>
					<para>Extender la dimensión espacial del cuadro delimitador con un valor flotante</para>
					<para><varname>expandSpace(stbox,float) → stbox</varname></para>
					<programlisting language="sql" xml:space="preserve">
SELECT expandSpace(stbox 'STBOX ZT(((1,1,1),(2,2,2)),[2001-01-01,2001-01-03])', 1);
-- STBOX ZT(((0,0,0),(3,3,3)),[2001-01-01, 2001-01-03])
SELECT expandSpace(stbox 'STBOX T([2001-01-01,2001-01-03))', 1);
-- The box must have XY(Z) dimensión
</programlisting>
				</listitem>

				<listitem id="expandTime">
					<indexterm><primary><varname>expandTime</varname></primary></indexterm>
					<para>Extender la dimensión temporal del cuadro delimitador con un intervalo de tiempo</para>
					<para><varname>expandTime(box,interval) → box</varname></para>
					<programlisting language="sql" xml:space="preserve">
SELECT expandTime(tbox 'TBOX XT((1,2),[2001-01-01,2001-01-03])', interval '1 day');
-- TBOX XT((1,2),[2011-12-31, 2001-01-04])
SELECT expandTime(stbox 'STBOX ZT(((1,1,1),(2,2,2)),[2001-01-01,2001-01-03])',
  interval '1 day');
-- STBOX ZT(((1,1,1),(2,2,2)),[2011-12-31, 2001-01-04])
</programlisting>
				</listitem>

				<listitem id="box_round">
					<indexterm><primary><varname>round</varname></primary></indexterm>
					<para>Redondear el valor o las coordenadas del cuadro delimitador a un número de decimales</para>
					<para><varname>round(box,integer) → box</varname></para>
					<programlisting language="sql" xml:space="preserve">
SELECT round(tbox 'TBOX XT((1.12345,2.12345),[2000-01-01,2000-01-02])', 2);
-- TBOX XT((1.12, 2.12),[2000-01-01,2000-01-02])
SELECT round(stbox 'STBOX XT(((1.12345,1.12345),(2.12345,2.12345)),
	[2000-01-01,2000-01-02])', 2);
-- STBOX XT(((1.12,1.12),(2.12,2.12)),[2000-01-01,2000-01-02])
</programlisting>
				</listitem>

			</itemizedlist>
		</sect1>

	<sect1 id ="box_types_srid">
		<title>Sistema de referencia espacial</title>

		<itemizedlist>
			<listitem id="stbox_SRID">
				<indexterm><primary><varname>SRID</varname></primary></indexterm>
				<para>Obtener el identificador de referencia espacial</para>
				<para><varname>SRID(stbox) → integer</varname></para>
				<programlisting language="sql" xml:space="preserve">
SELECT SRID(stbox 'STBOX ZT(((1.0,2.0,3.0),(4.0,5.0,6.0)),[2000-01-01,2000-01-02])');
-- 0
SELECT SRID(stbox 'SRID=5676;STBOX XT(((1.0,2.0),(4.0,5.0)),[2000-01-01,2000-01-02])');
-- 5676
SELECT SRID(stbox 'GEODSTBOX T([2000-01-01,2000-01-02))');
-- 4326
</programlisting>
			</listitem>

			<listitem id="stbox_setSRID">
				<indexterm><primary><varname>setSRID</varname></primary></indexterm>
				<para>Especificar el identificador de referencia espacial</para>
				<para><varname>setSRID(stbox) → stbox</varname></para>
				<programlisting language="sql" xml:space="preserve">
SELECT setSRID(stbox 'STBOX ZT(((1.0,2.0,3.0),(4.0,5.0,6.0)),
  [2000-01-01,2000-01-02])', 5676);
-- SRID=5676;STBOX ZT(((1,2,3),(4,5,6)),[2000-01-01,2000-01-02])
</programlisting>
				</listitem>

			<listitem id="stbox_transform">
				<indexterm><primary><varname>transform</varname></primary></indexterm>
				<para>Transformar a una referencia espacial diferente &Z_support; &geography_support;</para>
				<para><varname>transform(stbox,integer) → stbox</varname></para>
				<programlisting language="sql" xml:space="preserve">
SELECT transform(stbox 'SRID=4326;STBOX XT(((2.340088, 49.400250),
  (6.575317, 51.553167)),[2000-01-01,2000-01-02])', 3812);
/* SRID=3812;STBOX XT((502773.4299808172,511805.1204015772),
   (803028.9082648156,751590.7426289867),[2000-01-01,2000-01-02]) */
</programlisting>
			</listitem>
		</itemizedlist>
	</sect1>

	<sect1 id ="box_types_split">
		<title>Funciones de división</title>

		<itemizedlist>
			<listitem id="quadSplit">
				<indexterm><primary><varname>quadSplit</varname></primary></indexterm>
				<para>Dividir el cuadro delimitador en cuadrantes u octantes &Z_support; &geography_support; &SRF;</para>
				<para><varname>quadSplit(stbox) → {stbox}</varname></para>
				<programlisting language="sql" xml:space="preserve">
SELECT quadSplit(stbox 'STBOX XT(((0,0),(4,4)),[2000-01-01,2000-01-05])');
/* {"STBOX XT(((0,0),(2,2)),[2000-01-01, 2000-01-05])",
   "STBOX XT(((2,0),(4,2)),[2000-01-01, 2000-01-05])",
   "STBOX XT(((0,2),(2,4)),[2000-01-01, 2000-01-05])",
   "STBOX XT(((2,2),(4,4)),[2000-01-01, 2000-01-05])"} */
SELECT quadSplit(stbox 'STBOX Z((0,0,0),(4,4,4))');
/* {"STBOX Z((0,0,0),(2,2,2))","STBOX Z((2,0,0),(4,2,2))","STBOX Z((0,2,0),(2,4,2))",
   "STBOX Z((2,2,0),(4,4,2))","STBOX Z((0,0,2),(2,2,4))","STBOX Z((2,0,2),(4,2,4))",
   "STBOX Z((0,2,2),(2,4,4))","STBOX Z((2,2,2),(4,4,4))"} */
</programlisting>
			</listitem>
		</itemizedlist>
		<para>Tenga en cuenta que la función anterior es una <emphasis>función de retorno de conjuntos</emphasis> (también conocida como <emphasis>función de tabla</emphasis>) ya que normalmente devuelve más de un valor. Por lo tanto, la función está marcada con el símbolo &SRF;. Esta función se usa normalmente para cuadrículas de resolución múltiple, donde el espacio se divide en celdas de modo que las celdas tengan un número máximo de elementos. <xref linkend="berlinmod_grid" /> muestra un ejemplo del resultado de usar esta función usando trayectorias sintéticas en Bruselas.</para>
		<figure id="berlinmod_grid" float="start">
			<title>Grilla multiresolución sobre datos de Bruselas obtenidos mediante el generador <ulink url="https://github.com/MobilityDB/MobilityDB-BerlinMOD">BerlinMOD</ulink>. Cada celda contiene como máximo 10.000 (izquierda) y 1.000 (derecha) instantes durante todo el período de simulación (cuatro días en este caso). A la izquierda, podemos ver la alta densidad de tráfico en el anillo alrededor de Bruselas, mientras que a la derecha podemos ver otros ejes principales de la ciudad.</title>
			<mediaobject>
				<imageobject><imagedata scale='65' fileref='../images/berlinmod_grid10k.png' /></imageobject>
			</mediaobject>
			<mediaobject>
				<imageobject><imagedata scale='65' fileref='../images/berlinmod_grid1k.png' /></imageobject>
			</mediaobject>
		</figure>
	</sect1>

	<sect1 id ="box_types_aggregations">
		<title>Aggregaciones</title>

		<itemizedlist>
			<listitem id="box_extent">
				<indexterm><primary><varname>extent</varname></primary></indexterm>
				<para>Extensión del cuadro delimitador</para>
				<para><varname>extent(box) → box</varname></para>
				<programlisting language="sql" xml:space="preserve">
WITH boxes(b) AS (
  SELECT tbox 'TBOX XT((1,3),[2000-01-01,2000-01-03])' UNION
  SELECT tbox 'TBOX XT((5,7),[2000-01-05,2000-01-07])' UNION
  SELECT tbox 'TBOX XT((6,8),[2000-01-06,2000-01-08])'
)
SELECT extent(b) FROM boxes;
-- TBOX XT((1,8),[2000-01-01,2000-01-08])
WITH boxes(b) AS (
  SELECT stbox 'STBOX Z((1,1,1),(3,3,3))' UNION
  SELECT stbox 'STBOX Z((5,5,5),(7,7,7))' UNION
  SELECT stbox 'STBOX Z((6,6,6),(8,8,8))'
)
SELECT extent(b) FROM boxes;
-- STBOX Z((1,1,1),(8,8,8))
</programlisting>
			</listitem>
		</itemizedlist>
	</sect1>

	<sect1 id="box_types_comparisons">
		<title>Comparaciones</title>

		<para>Los operadores de comparación tradicionales (<varname>=</varname>, <varname>&lt;</varname>, etc.) se pueden aplicar a tipos de cuadro delimitador. Exceptuando la igualdad y la no igualdad, los otros operadores de comparación no son útiles en el mundo real pero permiten construir índices de árbol B en tipos de cuadro delimitador. Estos operadores comparan primero los valores de tiempo y, si son iguales, comparan los valores.</para>

		<itemizedlist>
			<listitem id="box_eq">
				<indexterm><primary><varname>=</varname></primary></indexterm>
				<para>¿Son iguales los cuadros delimitadores?</para>
				<para><varname>box = box → boolean</varname></para>
				<programlisting language="sql" xml:space="preserve">
SELECT tbox 'TBOX XT([1,1],[2001-01-01,2001-01-04])' =
  tbox 'TBOX XT([2,2],[2001-01-03,2001-01-05])';
-- false
</programlisting>
			</listitem>

			<listitem id="box_ne">
				<indexterm><primary><varname>&lt;&gt;</varname></primary></indexterm>
				<para>¿Son diferentes los cuadros delimitadores?</para>
				<para><varname>box &lt;&gt; box → boolean</varname></para>
				<programlisting language="sql" xml:space="preserve">
SELECT tbox 'TBOX XT([1,1],[2001-01-01,2001-01-04])' &lt;&gt;
  tbox 'TBOX XT([2,2],[2001-01-03,2001-01-05])';
-- true
</programlisting>
			</listitem>

			<listitem id="box_lt">
				<indexterm><primary><varname>&lt;</varname></primary></indexterm>
				<para>¿Es el primer cuadro delimitador menor que el segundo?</para>
				<para><varname>box &lt; box → boolean</varname></para>
				<programlisting language="sql" xml:space="preserve">
SELECT tbox 'TBOX XT([1,1],[2001-01-01,2001-01-04])' &lt;
  tbox 'TBOX XT([1,2],[2001-01-03,2001-01-05])';
-- true
</programlisting>
			</listitem>

			<listitem id="box_gt">
				<indexterm><primary><varname>&gt;</varname></primary></indexterm>
				<para>¿Es el primer cuadro delimitador mayor que el segundo?</para>
				<para><varname>box &gt; box → boolean</varname></para>
				<programlisting language="sql" xml:space="preserve">
SELECT tbox 'TBOX XT([1,1],[2001-01-03,2001-01-04])' &gt;
  tbox 'TBOX XT((1,2),[2001-01-01,2001-01-05])';
-- true
</programlisting>
			</listitem>

			<listitem id="box_le">
				<indexterm><primary><varname>&lt;=</varname></primary></indexterm>
				<para>¿Es el primer cuadro delimitador menor o igual que el segundo?</para>
				<para><varname>box &lt;= box → boolean</varname></para>
				<programlisting language="sql" xml:space="preserve">
SELECT tbox 'TBOX XT([1,1],[2001-01-01,2001-01-04])' &lt;=
  tbox 'TBOX XT([2,2],[2001-01-03,2001-01-05])';
-- true
</programlisting>
			</listitem>

			<listitem id="box_ge">
				<indexterm><primary><varname>&gt;=</varname></primary></indexterm>
				<para>¿Es el primer cuadro delimitador mayor o igual que el segundo?</para>
				<para><varname>box &gt;= box → boolean</varname></para>
				<programlisting language="sql" xml:space="preserve">
SELECT tbox 'TBOX XT([1,1],[2001-01-01,2001-01-04])' &gt;=
  tbox 'TBOX XT([2,2],[2001-01-03,2001-01-05])';
-- false
</programlisting>
			</listitem>
		</itemizedlist>
	</sect1>

	<sect1 id="box_types_set">
		<title>Operaciones de conjuntos</title>

		<para>Los operadores de conjuntos para los tipos de cuadro delimitador son la unión (<varname>+</varname>) y la intersección (<varname>*</varname>). En el caso de la unión, los operandos deben tener exactamente las mismas dimensiónes, de lo contrario se genera un error. Además, si los operandos no se superponen en todas las dimensiónes se genera un error, ya que esto daría como resultado una caja con valores disjuntos, que no se puede representar. El operador calcula la unión en todas las dimensiónes que están presentes en ambos argumentos. En el caso de intersección, los operandos deben tener al menos una dimensión común, de lo contrario se genera un error. El operador calcula la intersección en todas las dimensiónes que están presentes en ambos argumentos.</para>

		<itemizedlist>
			<listitem id="box_union">
				<indexterm><primary><varname>+</varname></primary></indexterm>
				<para>Unión de los cuadros delimitadores</para>
				<para><varname>box + box → box</varname></para>
				<programlisting language="sql" xml:space="preserve">
SELECT tbox 'TBOX XT([1,3),[2001-01-01,2001-01-03])' +
  tbox 'TBOX XT([2,4),[2001-01-02,2001-01-04])';
-- TBOX XT([1,4),[2001-01-01, 2001-01-04])
SELECT stbox 'STBOX ZT(((1,1,1),(2,2,2)),[2001-01-01,2001-01-02])' +
  stbox 'STBOX XT(((2,2),(3,3)),[2001-01-01,2001-01-03])';
-- ERROR:  The arguments must be of the same dimensionality
SELECT tbox 'TBOX XT((1,3),[2001-01-01,2001-01-02])' +
  tbox 'TBOX XT((3,4),[2001-01-03,2001-01-04])';
-- ERROR:  Result of box union would not be contiguous
</programlisting>
			</listitem>

			<listitem id="box_intersection">
				<indexterm><primary><varname>*</varname></primary></indexterm>
				<para>Intersección de los cuadros delimitadores</para>
				<para><varname>box * box → box</varname></para>
				<programlisting language="sql" xml:space="preserve">
SELECT tbox 'TBOX XT([1,3),[2001-01-01,2001-01-03])' *
  tbox 'TBOX XT([2001-01-02,2001-01-04))';
-- TBOX T([2001-01-02,2001-01-03))
SELECT stbox 'STBOX ZT(((1,1,1),(3,3,3)),[2001-01-01,2001-01-02])' *
  stbox 'STBOX X((2,2),(4,4))';
-- STBOX X((2,2),(3,3))
</programlisting>
			</listitem>
		</itemizedlist>
	</sect1>

	<sect1 id="box_types_topo_rel">
		<title>Operaciones topológicas y de posición relativa</title>

		<para>Hay cinco operadores topológicos: superposición (<varname>&amp;&amp;</varname>), contiene (<varname>@&gt;</varname>), es contenido (<varname>&lt;@</varname>), mismo (<varname>~=</varname>) y adyacente (<varname>-|-</varname>). Los operadores verifican la relación topológica entre los cuadros delimitadores teniendo en cuenta la dimensión de valor y/o de tiempo para todas las dimensiónes que estén presentes en ambos argumentos.</para>

		<para>Los operadores topológicos para los cuadros delimitadores se dan a continuación.</para>

		<itemizedlist>
			<listitem id="box_overlap">
				<indexterm><primary><varname>&amp;&amp;</varname></primary></indexterm>
				<para>¿Se superponen los cuadros delimitadores?</para>
				<para><varname>box &amp;&amp; box → boolean</varname></para>
				<programlisting language="sql" xml:space="preserve">
SELECT tbox 'TBOX XT((1,3),[2001-01-01,2001-01-03])' &amp;&amp;
  tbox 'TBOX XT((2,4),[2001-01-02,2001-01-04])';
-- true
SELECT stbox 'STBOX XT(((1,1),(2,2)),[2001-01-01,2001-01-02])' &amp;&amp;
  stbox 'STBOX XT([2001-01-02,2001-01-02])';
-- true
</programlisting>
			</listitem>

			<listitem id="box_contains">
				<indexterm><primary><varname>@&gt;</varname></primary></indexterm>
				<para>¿Contiene el primer cuadro delimitador el segundo?</para>
				<para><varname>box @&gt; box → boolean</varname></para>
				<programlisting language="sql" xml:space="preserve">
SELECT tbox 'TBOX XT((1,4),[2001-01-01,2001-01-04])' @&gt;
  tbox 'TBOX XT((2,3),[2001-01-01,2001-01-02])';
-- true
SELECT stbox 'STBOX Z((1,1,1),(3,3,3))' @&gt;
  stbox 'STBOX XT(((1,1),(2,2)),[2001-01-01,2001-01-02])';
-- true
</programlisting>
			</listitem>

			<listitem id="box_containedby">
				<indexterm><primary><varname>&lt;@</varname></primary></indexterm>
				<para>¿Está el primer cuadro delimitador contenido en el segundo?</para>
				<para><varname>box &lt;@ box → boolean</varname></para>
				<programlisting language="sql" xml:space="preserve">
SELECT tbox 'TBOX XT((1,2),[2001-01-01,2001-01-02])' &lt;@
  tbox 'TBOX XT((1,2),[2001-01-01,2001-01-02])';
-- true
SELECT stbox 'STBOX XT(((1,1),(2,2)),[2001-01-01,2001-01-02)' &lt;@
  stbox 'STBOX ZT(((1,1,1),(2,2,2)),[2001-01-01,2001-01-02])';
-- true
</programlisting>
			</listitem>

			<listitem id="box_same">
				<indexterm><primary><varname>~=</varname></primary></indexterm>
				<para>¿Son los cuadros delimitadores iguales en sus dimensiónes comunes?</para>
				<para><varname>box ~= box → boolean</varname></para>
				<programlisting language="sql" xml:space="preserve">
SELECT tbox 'TBOX XT((1,2),[2001-01-01,2001-01-02])' ~=
  tbox 'TBOX XT([2001-01-01,2001-01-02])';
-- true
SELECT stbox 'STBOX XT(((1,1),(3,3)),[2001-01-01,2001-01-03])' ~=
  stbox 'STBOX Z((1,1,1),(3,3,3))';
-- true
</programlisting>
			</listitem>

			<listitem id="box_adjacent">
				<indexterm><primary><varname>-|-</varname></primary></indexterm>
				<para>¿Son los cuadros delimitadores adyacentes?</para>
				<para><varname>box -|- box → boolean</varname></para>
				<para>Dos cuadros delimitadores son adyacentes si comparten  <emphasis>n</emphasis> dimensiónes y si su intersección tiene como máximo <emphasis>n</emphasis>-1 dimensiónes.</para>
				<programlisting language="sql" xml:space="preserve">
SELECT tbox 'TBOX XT((1,2)[2001-01-01,2001-01-02])' -|-
  tbox 'TBOX T([2001-01-02,2001-01-03])';
-- true
SELECT stbox 'STBOX XT(((1,1),(3,3)),[2001-01-01,2001-01-03])' -|-
  stbox 'STBOX XT(((2,2),(4,4)),[2001-01-03,2001-01-04])';
-- true
</programlisting>
			</listitem>
		</itemizedlist>

		<para>Los operadores de posición relativa consideran la posición relativa de los cuadros delimitadores. Los operadores <varname>&lt;&lt;</varname>, <varname>&gt;&gt;</varname>, <varname>&amp;&lt;</varname> y <varname>&amp;&gt;</varname> consideran el valor X para el tipo <varname>tbox</varname> y las coordenadas X para el tipo <varname>stbox</varname>, los operadores <varname>&lt;&lt;|</varname>, <varname>|&gt;&gt;</varname>, <varname>&amp;&lt;|</varname> y <varname>|&amp;&gt;</varname> consideran las coordenadas Y para el tipo <varname>stbox</varname>, los operadores <varname>&lt;&lt;/</varname>, <varname>/&gt;&gt;</varname>, <varname>&amp;&lt;/</varname> y <varname>/&amp;&gt;</varname> consideran las coordenadas Z para el tipo <varname>stbox</varname> y los operadores <varname>&lt;&lt;#</varname>, <varname>#&gt;&gt;</varname>, <varname>#&amp;&lt;</varname> y <varname>#&amp;&gt;</varname> consideran la dimensión de tiempo para los tipos <varname>tbox</varname> y <varname>stbox</varname>. Los operadores generan un error si ambos cuadros delimitadores no tienen la dimensión requerida.</para>

		<para>Los operadores para la dimensión numérica del tipo <varname>tbox</varname> se dan a continuación.</para>

		<itemizedlist>
			<listitem id="tbox_left">
				<indexterm><primary><varname>&lt;&lt;</varname></primary></indexterm>
				<indexterm><primary><varname>&lt;&lt;|</varname></primary></indexterm>
				<indexterm><primary><varname>&lt;&lt;/</varname></primary></indexterm>
				<indexterm><primary><varname>&lt;&lt;#</varname></primary></indexterm>
				<para>¿Son los valores X/Y/Z/T del primer cuadro delimitador estrictamente menores que los del segundo?</para>
				<para><varname>box &lt;&lt; box → boolean</varname></para>
				<para><varname>stbox &lt;&lt;| stbox → boolean</varname></para>
				<para><varname>stbox &lt;&lt;/ stbox → boolean</varname></para>
				<para><varname>box &lt;&lt;# box → boolean</varname></para>
				<programlisting language="sql" xml:space="preserve">
SELECT tbox 'TBOX XT((1,2),[2001-01-01,2001-01-02])' &lt;&lt;
  tbox 'TBOX XT((3,4),[2001-01-03,2001-01-04])';
-- true
SELECT tbox 'TBOX XT((1,2),[2001-01-01,2001-01-02])' &lt;&lt;
  tbox 'TBOX XT([2001-01-03,2001-01-04])';
-- ERROR:  The box must have value dimension
SELECT stbox 'STBOX Z((1,1,1),(2,2,2))' &lt;&lt; stbox 'STBOX Z((3,3,3),(4,4,4))';
-- true
SELECT stbox 'STBOX Z((1,1,1),(2,2,2))' &lt;&lt;| stbox 'STBOX Z((3,3,3),(4,4,4))';
-- true
SELECT stbox 'STBOX Z((1,1,1),(2,2,2))' &lt;&lt;/ stbox 'STBOX Z((3,3,3),(4,4,4))';
-- true
SELECT tbox 'TBOX XT((1,2),[2000-01-01,2000-01-02])' &lt;&lt;#
  tbox 'TBOX XT((3,4),[2000-01-03,2000-01-04])';
-- true
</programlisting>
			</listitem>

			<listitem id="tbox_right">
				<indexterm><primary><varname>&gt;&gt;</varname></primary></indexterm>
				<indexterm><primary><varname>|&gt;&gt;</varname></primary></indexterm>
				<indexterm><primary><varname>/&gt;&gt;</varname></primary></indexterm>
				<indexterm><primary><varname>#&gt;&gt;</varname></primary></indexterm>
				<para>¿Son los valores X/Y/Z/T del primer cuadro delimitador estrictamente mayores que los del segundo?</para>
				<para><varname>box &gt;&gt; box → boolean</varname></para>
				<para><varname>stbox |&gt;&gt; stbox → boolean</varname></para>
				<para><varname>stbox /&gt;&gt; stbox → boolean</varname></para>
				<para><varname>box #&gt;&gt; box → boolean</varname></para>
				<programlisting language="sql" xml:space="preserve">
SELECT tbox 'TBOX XT((3,4),[2001-01-03,2001-01-04])' &gt;&gt;
  tbox 'TBOX XT((1,2),[2001-01-01,2001-01-02])';
-- true
SELECT stbox 'STBOX Z((3,3,3),(4,4,4))' &gt;&gt; stbox 'STBOX Z((1,1,1),(2,2,2))';
-- true
SELECT stbox 'STBOX Z((3,3,3),(4,4,4))' |&gt;&gt; stbox 'STBOX Z((1,1,1),(2,2,2))';
-- true
SELECT stbox 'STBOX Z((3,3,3),(4,4,4))' /&gt;&gt; stbox 'STBOX Z((1,1,1),(2,2,2))';
-- true
SELECT stbox 'STBOX XT((4,4),[2000-01-03,2000-01-04],((3,3)))'  #&gt;&gt;
  stbox 'STBOX XT(((1,1),(2,2)),[2000-01-01,2000-01-02])';
-- true
</programlisting>
			</listitem>

			<listitem id="tbox_overleft">
				<indexterm><primary><varname>&amp;&lt;</varname></primary></indexterm>
				<indexterm><primary><varname>&amp;&lt;|</varname></primary></indexterm>
				<indexterm><primary><varname>&amp;&lt;/</varname></primary></indexterm>
				<indexterm><primary><varname>&amp;&lt;#</varname></primary></indexterm>
				<para>¿No son los valores X/Y/Z/T del primer cuadro delimitador mayores que los del segundo?</para>
				<para><varname>box &amp;&lt; box → boolean</varname></para>
				<para><varname>stbox &amp;&lt;| stbox → boolean</varname></para>
				<para><varname>stbox &amp;&lt;/ stbox → boolean</varname></para>
				<para><varname>box &amp;&lt;# box → boolean</varname></para>
				<programlisting language="sql" xml:space="preserve">
SELECT tbox 'TBOX XT((1,4),[2001-01-01,2001-01-04])' &amp;&lt;
  tbox 'TBOX XT((3,4),[2001-01-03,2001-01-04])';
-- true
SELECT stbox 'STBOX Z((1,1,1),(4,4,4))' &amp;&lt; stbox 'STBOX Z((3,3,3),(4,4,4))';
-- true
SELECT stbox 'STBOX Z((1,1,1),(4,4,4))' &amp;&lt;| stbox 'STBOX Z((3,3,3),(4,4,4))';
-- true
SELECT stbox 'STBOX Z((1,1,1),(4,4,4))' &amp;&lt;/ stbox 'STBOX Z((3,3,3),(4,4,4))';
-- true
SELECT tbox 'TBOX XT((1,4),[2000-01-01,2000-01-04])' &amp;&lt;#
  tbox 'TBOX XT((3,4),[2000-01-03,2000-01-04])';
-- true
</programlisting>
			</listitem>

			<listitem id="tbox_overright">
				<indexterm><primary><varname>&amp;&gt;</varname></primary></indexterm>
				<indexterm><primary><varname>|&amp;&gt;</varname></primary></indexterm>
				<indexterm><primary><varname>/&amp;&gt;</varname></primary></indexterm>
				<indexterm><primary><varname>#&amp;&gt;</varname></primary></indexterm>
				<para>¿No son los valores X/Y/Z/T del primer cuadro delimitador menores que los del segundo?</para>
				<para><varname>box &amp;&gt; box → boolean</varname></para>
				<para><varname>stbox |&amp;&gt; stbox → boolean</varname></para>
				<para><varname>stbox /&amp;&gt; stbox → boolean</varname></para>
				<para><varname>box #&amp;&gt; box → boolean</varname></para>
				<programlisting language="sql" xml:space="preserve">
SELECT tbox 'TBOX XT((1,2),[2001-01-01,2001-01-02])' &amp;&gt;
  tbox 'TBOX XT((1,4),[2001-01-01,2001-01-04])';
-- true
SELECT stbox 'STBOX Z((3,3,3),(4,4,4))' &amp;&gt; stbox 'STBOX Z((1,1,1),(2,2,2))';
-- true
SELECT stbox 'STBOX Z((3,3,3),(4,4,4))' |&amp;&gt; stbox 'STBOX Z((1,1,1),(2,2,2))';
-- false
SELECT stbox 'STBOX Z((3,3,3),(4,4,4))' /&amp;&gt; stbox 'STBOX Z((1,1,1),(2,2,2))';
-- true
SELECT stbox 'STBOX XT(((1,1),(2,2)),[2000-01-01,2000-01-02])' #&amp;&gt;
  stbox 'STBOX XT(((1,1),(4,4)),[2000-01-01,2000-01-04])';
-- true
</programlisting>
			</listitem>
		</itemizedlist>
	</sect1>

	<sect1 id ="box_types_indexing">
		<title>Indexación</title>
		<para>Se pueden crear índices GiST y SP-GiST para columnas de tablas de los tipos <varname>tbox</varname> y <varname>stbox</varname>. El índice GiST implementa un árbol R, mientras que el índice SP-GiST implementa un árbol cuádruple n-dimensiónal. Un ejemplo de creación de un índice GiST en una columna <varname>Box</varname> de tipo <varname>stbox</varname> en una tabla <varname>Trips</varname> es el siguiente:
			<programlisting language="sql" xml:space="preserve">
CREATE TABLE Trips(TripID integer PRIMARY KEY, Trip tgeompoint, Box stbox);
CREATE INDEX Trips_Box_Idx ON Trips USING GIST(Box);
</programlisting>
		</para>
		<para>Un índice GiST o SP-GiST puede acelerar las consultas que involucran a los siguientes operadores: <varname>&amp;&amp;</varname>, <varname>&lt;@</varname>, <varname>@&gt;</varname>, <varname>~=</varname>, <varname>-|-</varname>, <varname>&lt;&lt;</varname>, <varname>&gt;&gt;</varname>, <varname>&amp;&lt;</varname>, <varname>&amp;&gt;</varname>, <varname>&lt;&lt;|</varname>, <varname>|&gt;&gt;</varname>, <varname>&amp;&lt;|</varname>, <varname>|&amp;&gt;</varname>, <varname>&lt;&lt;/</varname>, <varname>/&gt;&gt;</varname>, <varname>&amp;&lt;/</varname>, <varname>/&amp;&gt;</varname>, <varname>&lt;&lt;#</varname>, <varname>#&gt;&gt;</varname>, <varname>&amp;&lt;#</varname> y <varname>#&amp;&gt;</varname>.</para>

		<para>Además, se pueden crear índices de árbol B para columnas de tablas de un tipo cuadro delimitador. Para estos tipos de índices, básicamente la única operación útil es la igualdad. Hay un orden de clasificación de árbol B definido para valores de tipos cuadro delimitador con los correspondientes operadores <varname>&lt;</varname> y <varname>&gt;</varname>, pero el orden es bastante arbitrario y no suele ser útil en el mundo real. El soporte de árbol B está destinado principalmente a permitir la clasificación interna en las consultas, en lugar de la creación de índices reales.</para>
	</sect1>
</chapter>
