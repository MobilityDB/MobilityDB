<?xml version="1.0" encoding="UTF-8"?>
<!--
   ****************************************************************************
    MobilityDB Manual
    Copyright(c) MobilityDB Contributors

    This documentation is licensed under a Creative Commons Attribution-Share
    Alike 3.0 License: https://creativecommons.org/licenses/by-sa/3.0/
   ****************************************************************************
-->
<appendix xml:id="reference">
	<title>MobilityDB Reference</title>

	<sect1>
		<title>MobilityDB Types</title>
		<para>MobilityDB defines four <emphasis>template types</emphasis> that act as type constructors over <emphasis>base types</emphasis>. These template types are <varname>set</varname>, <varname>span</varname>, <varname>spanset</varname>, and <varname>temporal</varname>. <xref linkend="templatetypes"/> shows the types defined over these template types. Furthermore, MobilityDB defines two bounding box types, namely, <varname>tbox</varname> and <varname>stbox</varname>.</para>

		<table frame="all" colsep="1" rowsep="1" xml:id="templatetypes">
			<?dblatex table-width="autowidth.column: 1 2 3 4 5"?>
			<title>MobilityDB current instantiations of template types</title>
			<tgroup cols="5" align="left" colsep="1" rowsep="1">
			<colspec colnum="1" colname="col1"/>
			<colspec colnum="2" colname="col2"/>
			<colspec colnum="3" colname="col3"/>
			<colspec colnum="4" colname="col4"/>
			<colspec colnum="5" colname="col5"/>
			<thead>
				<row>
					<entry morerows="1"><emphasis role="bold">Base Types</emphasis></entry>
					<entry namest="col2" nameend="col5" align="center">Template Types</entry>
				</row>
				<row>
					<entry><emphasis role="bold"><varname>set</varname></emphasis></entry>
					<entry><emphasis role="bold"><varname>span</varname></emphasis></entry>
					<entry><emphasis role="bold"><varname>spanset</varname></emphasis></entry>
					<entry><emphasis role="bold"><varname>temporal</varname></emphasis></entry>
				</row>
			</thead>
			<tbody>
				<row>
					<entry><emphasis role="bold"><varname>bool</varname></emphasis></entry>
					<entry><varname/></entry>
					<entry><varname/></entry>
					<entry><varname/></entry>
					<entry><varname>tbool</varname></entry>
				</row>
				<row>
					<entry><emphasis role="bold"><varname>text</varname></emphasis></entry>
					<entry><varname>textset</varname></entry>
					<entry><varname/></entry>
					<entry><varname/></entry>
					<entry><varname>ttext</varname></entry>
				</row>
				<row>
					<entry><emphasis role="bold"><varname>integer</varname></emphasis></entry>
					<entry><varname>intset</varname></entry>
					<entry><varname>intspan</varname></entry>
					<entry><varname>intspanset</varname></entry>
					<entry><varname>tint</varname></entry>
				</row>
				<row>
						<entry><emphasis role="bold"><varname>bigint</varname></emphasis></entry>
						<entry><varname>bigintset</varname></entry>
						<entry><varname>bigintspan</varname></entry>
						<entry><varname>bigintspanset</varname></entry>
						<entry><varname/></entry>
				</row>
				<row>
					<entry><emphasis role="bold"><varname>float</varname></emphasis></entry>
					<entry><varname>floatset</varname></entry>
					<entry><varname>floatspan</varname></entry>
					<entry><varname>floatspanset</varname></entry>
					<entry><varname>tfloat</varname></entry>
				</row>
				<row>
					<entry><emphasis role="bold"><varname>date</varname></emphasis></entry>
					<entry><varname>dateset</varname></entry>
					<entry><varname>datespan</varname></entry>
					<entry><varname>datespanset</varname></entry>
					<entry><varname/></entry>
				</row>
				<row>
					<entry><emphasis role="bold"><varname>timestamptz</varname></emphasis></entry>
					<entry><varname>tstzset</varname></entry>
					<entry><varname>tstzspan</varname></entry>
					<entry><varname>tstzspanset</varname></entry>
					<entry><varname/></entry>
				</row>
				<row>
					<entry><emphasis role="bold"><varname>geometry</varname></emphasis></entry>
					<entry><varname>geomset</varname></entry>
					<entry><varname/></entry>
					<entry><varname/></entry>
					<entry><varname>tgeompoint</varname>, <varname>tgeometry</varname></entry>
				</row>
				<row>
					<entry><emphasis role="bold"><varname>geography</varname></emphasis></entry>
					<entry><varname>geogset</varname></entry>
					<entry><varname/></entry>
					<entry><varname/></entry>
					<entry><varname>tgeogpoint</varname>, <varname>tgeography</varname></entry>
				</row>
				<row>
					<entry><emphasis role="bold"><varname>pose</varname></emphasis></entry>
					<entry><varname>poseset</varname></entry>
					<entry><varname/></entry>
					<entry><varname/></entry>
					<entry><varname>tpose</varname></entry>
				</row>
				<row>
					<entry><emphasis role="bold"><varname>npoint</varname></emphasis></entry>
					<entry><varname>npointset</varname></entry>
					<entry><varname/></entry>
					<entry><varname/></entry>
					<entry><varname>tnpoint</varname></entry>
				</row>
				<row>
					<entry><emphasis role="bold"><varname>cbuffer</varname></emphasis></entry>
					<entry><varname>cbufferset</varname></entry>
					<entry><varname/></entry>
					<entry><varname/></entry>
					<entry><varname>tcbuffer</varname></entry>
				</row>
			</tbody>
			</tgroup>
		</table>
	</sect1>

	<sect1>
		<title>Set and Span Types</title>

		<sect2>
			<title>Input and Output</title>
			<itemizedlist>
				<listitem>
					<para><link linkend="setspan_asText"><varname>asText</varname></link>: Return the Well-Known Text (WKT) representation</para>
				</listitem>

				<listitem>
					<para><link linkend="setspan_asBinary"><varname>asBinary</varname></link>: Return the Well-Known Binary (WKB) or the Hexadecimal Well-Known Binary (HexWKB) representation</para>
				</listitem>

				<listitem>
					<para><link linkend="setspan_FromBinary"><varname>settypeFromBinary</varname>, <varname>spantypeFromBinary</varname>, <varname>spansettypeFromBinary</varname></link>: Input from the Well-Known Binary (WKB) representation</para>
				</listitem>

				<listitem>
					<para><link linkend="setspan_FromHexWKB"><varname>settypeFromHexWKB</varname>, <varname>spantypeFromHexWKB</varname>, <varname>spansettypeFromHexWKB</varname></link>: Input from the Hexadecimal Well-Known Binary (HexWKB) representation</para>
				</listitem>
			</itemizedlist>
		</sect2>

		<sect2>
			<title>Constructors</title>
			<itemizedlist>
				<listitem>
					<para><link linkend="set"><varname>set</varname></link>: Constructor for set values</para>
				</listitem>

				<listitem>
					<para><link linkend="span"><varname>span</varname></link>: Constructor for span values</para>
				</listitem>

				<listitem>
					<para><link linkend="spanset"><varname>spanset</varname></link>: Constructor for span set values</para>
				</listitem>
			</itemizedlist>
		</sect2>

		<sect2>
			<title>Conversions</title>
			<itemizedlist>
				<listitem>
					<para><link linkend="base_convert"><varname>::</varname>, <varname>set(base)</varname>, <varname>span(base)</varname>, <varname>spanset(base)</varname></link>: Convert a base value to a set, span, or span set value</para>
				</listitem>

				<listitem>
					<para><link linkend="set_convert"><varname>::</varname>, <varname>spanset(set)</varname></link>: Convert a set value to a span set value</para>
				</listitem>

				<listitem>
					<para><link linkend="span_convert"><varname>::</varname>, <varname>spanset(span)</varname></link>: Convert a span value to a span set value</para>
				</listitem>

				<listitem>
					<para><link linkend="range_convert"><varname>::</varname>, <varname>range(span)</varname>, <varname>span(range)</varname></link>: Convert a span value to and from a PostgreSQL range value</para>
				</listitem>

				<listitem>
					<para><link linkend="multirange_convert"><varname>::</varname>, <varname>multirange(spanset)</varname>, <varname>spanset(multirange)</varname></link>: Convert a span set value to and from a PostgreSQL multirange value</para>
				</listitem>
			</itemizedlist>
		</sect2>

		<sect2>
			<title>Accessors</title>
			<itemizedlist>
				<listitem>
					<para><link linkend="setspan_memSize"><varname>memSize</varname></link>: Return the memory size in bytes</para>
				</listitem>

				<listitem>
					<para><link linkend="setspan_lower"><varname>lower</varname>, <varname>upper</varname></link>: Return the lower or upper bound</para>
				</listitem>

				<listitem>
					<para><link linkend="setspan_lowerInc"><varname>lowerInc</varname>, <varname>upperInc</varname></link>: Is the lower or upper bound inclusive?</para>
				</listitem>

				<listitem>
					<para><link linkend="setspan_width"><varname>width</varname></link>: Return the width of the span as a float</para>
				</listitem>

				<listitem>
					<para><link linkend="setspan_duration"><varname>duration</varname></link>: Return the duration</para>
				</listitem>

				<listitem>
					<para><link linkend="setspan_span"><varname>span</varname></link>: Return the bounding span of the set or span set ignoring the potential time gaps</para>
				</listitem>

				<listitem>
					<para><link linkend="setspan_numValues"><varname>numValues</varname>, <varname>getValues</varname></link>: Return the (number of) values</para>
				</listitem>

				<listitem>
					<para><link linkend="setspan_startValue"><varname>startValue</varname>, <varname>endValue</varname>, <varname>valueN</varname></link>: Return the start, end, or n-th value</para>
				</listitem>

				<listitem>
					<para><link linkend="setspan_numSpans"><varname>numSpans</varname>, <varname>spans</varname></link>: Return (the number of) composing spans</para>
				</listitem>

				<listitem>
					<para><link linkend="setspan_startSpan"><varname>startSpan</varname>, <varname>endSpan</varname>, <varname>spanN</varname></link>: Return the start, end, or n-th span</para>
				</listitem>

				<listitem>
					<para><link linkend="setspan_numDates"><varname>numDates</varname>, <varname>dates</varname></link>: Return the (number of) different dates</para>
				</listitem>

				<listitem>
					<para><link linkend="setspan_startDate"><varname>startDate</varname>, <varname>endDate</varname>, <varname>dateN</varname></link>: Return the start, end, or n-th date</para>
				</listitem>

				<listitem>
					<para><link linkend="setspan_numTimestamps"><varname>numTimestamps</varname>, <varname>timestamps</varname></link>: Return the (number of) different timestamps</para>
				</listitem>

				<listitem>
					<para><link linkend="setspan_startTimestamp"><varname>startTimestamp</varname>, <varname>endTimestamp</varname>, <varname>timestampN</varname></link>: Return the start, end, or n-th timestamp</para>
				</listitem>
			</itemizedlist>
		</sect2>

		<sect2>
			<title>Transformations</title>

			<itemizedlist>
				<listitem>
					<para><link linkend="setspan_expand"><varname>expand</varname></link>: Expand or shrink the bounds by a value or an interval</para>
				</listitem>

				<listitem>
					<para><link linkend="setspan_shift"><varname>shift</varname>, <varname>scale</varname>, <varname>shiftScale</varname></link>: Shift and/or scale by a value or an interval</para>
				</listitem>

				<listitem>
					<para><link linkend="floatsetspan_floor"><varname>floor</varname>, <varname>ceil</varname></link>: Round down or up to the lowest integer</para>
				</listitem>

				<listitem>
					<para><link linkend="floatsetspan_round"><varname>round</varname></link>: Round to a number of decimal places</para>
				</listitem>

				<listitem>
					<para><link linkend="floatset_degrees"><varname>degrees</varname>, <varname>radians</varname></link>: Transform to degrees or radians</para>
				</listitem>

				<listitem>
					<para><link linkend="textset_lower"><varname>lower</varname>, <varname>upper</varname>, <varname>initcap</varname></link>: Transform to lowercase, uppercase, or initcap</para>
				</listitem>

				<listitem>
					<para><link linkend="textset_concat"><varname>||</varname></link>: Text concatenation</para>
				</listitem>

				<listitem>
					<para><link linkend="time_tprecision"><varname>tprecision</varname></link>: Set the temporal precision to the interval with respect to the origin</para>
				</listitem>
			</itemizedlist>
		</sect2>

		<sect2>
			<title>Spatial Reference System</title>

			<itemizedlist>
				<listitem>
					<para><link linkend="spatialset_SRID"><varname>SRID</varname>, <varname>setSRID</varname></link>: Return or set the spatial reference identifier</para>
				</listitem>

				<listitem>
					<para><link linkend="spatialset_transform"><varname>transform</varname>, <varname>transformPipeline</varname></link>: Transform to a spatial reference identifier</para>
				</listitem>
			</itemizedlist>
		</sect2>

		<sect2>
			<title>Set Operations</title>

			<itemizedlist>
				<listitem>
					<para><link linkend="setspan_union"><varname>+</varname>, <varname>-</varname>, <varname>*</varname></link>: Union, difference, and intersection of sets or spans</para>
				</listitem>
			</itemizedlist>
		</sect2>

		<sect2>
			<title>Bounding Box Operations</title>

			<sect3>
				<title>Topological Operations</title>
				<itemizedlist>
					<listitem>
						<para><link linkend="setspan_overlaps"><varname>&amp;&amp;</varname></link>: Do the sets or spans overlap (have values in common)?</para>
					</listitem>

					<listitem>
						<para><link linkend="setspan_contains"><varname>@&gt;</varname></link>: Does the first set or span contain the second one?</para>
					</listitem>

					<listitem>
						<para><link linkend="setspan_containedby"><varname>&lt;@</varname></link>: Is the first set or span contained by the second one?</para>
					</listitem>

					<listitem>
						<para><link linkend="setspan_adjacent"><varname>-|-</varname></link>: Is the first set or span adjacent to the second one?</para>
					</listitem>
				</itemizedlist>
			</sect3>

			<sect3>
				<title>Position Operations</title>
				<itemizedlist>
					<listitem>
						<para><link linkend="setspan_left"><varname>&lt;&lt;</varname>, <varname>&lt;&lt;#</varname></link>: Is the first set or span scritly to the left of the second one?</para>
					</listitem>

					<listitem>
						<para><link linkend="setspan_right"><varname>&gt;&gt;</varname>, <varname>#&gt;&gt;</varname></link>: Is the first set or span strictly to the right of the second one?</para>
					</listitem>

					<listitem>
						<para><link linkend="setspan_overleft"><varname>&amp;&lt;</varname>, <varname>&amp;&lt;#</varname></link>: Is the first set or span not to the right of the second one?</para>
					</listitem>

					<listitem>
						<para><link linkend="setspan_overright"><varname>&amp;&gt;</varname>, <varname>#&amp;&gt;</varname></link>: Is the first set or span not to the left of the second one?</para>
					</listitem>
				</itemizedlist>
			</sect3>

			<sect3>
				<title>Splitting Operations</title>
				<itemizedlist>
					<listitem>
						<para><link linkend="splitNSpans"><varname>splitNSpans</varname></link>: Return an array of N spans obtained by merging the elements of a set or the spans of a spanset</para>
					</listitem>
					<listitem>
						<para><link linkend="splitEachNSpans"><varname>splitEachNSpans</varname></link>: Return an array of spans obtained by merging N consecutive elements of a set or N consecutive spans of a spanset</para>
					</listitem>
				</itemizedlist>
			</sect3>

		</sect2>

		<sect2>
			<title>Distance Operations</title>

			<itemizedlist>
				<listitem>
					<para><link linkend="smallest_distance_time"><varname>&lt;-&gt;</varname></link>: Return the smallest distance ever</para>
				</listitem>
			</itemizedlist>
		</sect2>

		<sect2>
			<title>Comparisons</title>

			<itemizedlist>
				<listitem>
					<para><link linkend="setspan_eq"><varname>=</varname>, <varname>&lt;&gt;</varname>, <varname>&lt;</varname>, <varname>&gt;</varname>, <varname>&lt;=</varname>, <varname>&gt;=</varname></link>: Traditional comparisons</para>
				</listitem>
			</itemizedlist>
		</sect2>

		<sect2>
			<title>Aggregations</title>

			<itemizedlist>
				<listitem>
					<para><link linkend="setspan_tCount"><varname>tCount</varname></link>: Temporal count</para>
				</listitem>

				<listitem>
					<para><link linkend="setspan_extent"><varname>extent</varname></link>: Bounding span</para>
				</listitem>

				<listitem>
					<para><link linkend="setspan_union_agg"><varname>setUnion</varname>, <varname>spanUnion</varname></link>: Aggregate union</para>
				</listitem>
			</itemizedlist>
		</sect2>
	</sect1>

	<sect1>
		<title>Box Types</title>

		<sect2>
			<title>Input and Output</title>
			<itemizedlist>
				<listitem>
					<para><link linkend="box_asText"><varname>asText</varname></link>: Return the Well-Known Text (WKT) representation</para>
				</listitem>

				<listitem>
					<para><link linkend="box_asBinary"><varname>asBinary</varname>, <varname>asHexWKB</varname></link>: Return the Well-Known Binary (WKB) or the Hexadecimal Well-Known Binary (HexWKB) representation as text</para>
				</listitem>

				<listitem>
					<para><link linkend="boxFromBinary"><varname>boxFromBinary</varname>, <varname>boxFromHexWKB</varname></link>: Input from the Well-Known Binary (WKB) or from the Hexadecimal Well-Known Binary (HexWKB) representation</para>
				</listitem>
			</itemizedlist>
		</sect2>

		<sect2>
			<title>Constructors</title>
			<itemizedlist>
				<listitem>
					<para><link linkend="tbox"><varname>tbox</varname></link>: Constructor for <varname>tbox</varname></para>
				</listitem>

				<listitem>
					<para><link linkend="stbox"><varname>stboxX, stboxZ, stboxT, stboxXT, stboxZT, geodstboxZ, geodstboxT, geodstboxZT</varname></link>: Constructor for <varname>stbox</varname></para>
				</listitem>
			</itemizedlist>
		</sect2>

		<sect2>
			<title>Conversions</title>

			<itemizedlist>
				<listitem>
					<para><link linkend="tbox_convert_to"><varname>tbox::type</varname></link>: Convert a <varname>tbox</varname> to another type</para>
				</listitem>

				<listitem>
					<para><link linkend="tbox_convert_from"><varname>type::tbox</varname></link>: Convert another type to a <varname>tbox</varname></para>
				</listitem>

				<listitem>
					<para><link linkend="stbox_convert_to"><varname>stbox::type</varname></link>: Convert an <varname>stbox</varname> to another type</para>
				</listitem>

				<listitem>
					<para><link linkend="stbox_convert_from"><varname>type::stbox</varname></link>: Convert another type to an <varname>stbox</varname></para>
				</listitem>
			</itemizedlist>
		</sect2>

		<sect2>
			<title>Accessors</title>

			<itemizedlist>
				<listitem>
					<para><link linkend="hasX"><varname>hasX</varname>, <varname>hasZ</varname>, <varname>hasT</varname></link>: Has X/Z/T dimension?</para>
				</listitem>

				<listitem>
					<para><link linkend="isGeodetic"><varname>isGeodetic</varname></link>: Is geodetic?</para>
				</listitem>

				<listitem>
					<para><link linkend="xMin"><varname>xMin</varname>, <varname>yMin</varname>, <varname>zMin</varname>, <varname>tMin</varname></link>: Return the minimum X/Y/Z/T value</para>
				</listitem>

				<listitem>
					<para><link linkend="xMax"><varname>xMax</varname>, <varname>yMax</varname>, <varname>zMax</varname>, <varname>tMax</varname></link>: Return the maximum X/Y/Z/T value</para>
				</listitem>

				<listitem>
					<para><link linkend="xMinInc"><varname>xMinInc</varname>, <varname>tMinInc</varname></link>: Is the minimum X/T value inclusive?</para>
				</listitem>

				<listitem>
					<para><link linkend="xMaxInc"><varname>xMaxInc</varname>, <varname>tMaxInc</varname></link>: Is the maximum X/T value inclusive?</para>
				</listitem>

				<listitem>
					<para><link linkend="area"><varname>area</varname>, <varname>volume</varname>, <varname>perimeter</varname></link>: Area, volume, perimeter</para>
				</listitem>
			</itemizedlist>
		</sect2>

		<sect2>
			<title>Transformations</title>
			<itemizedlist>
				<listitem>
					<para><link linkend="box_shiftValue"><varname>shiftValue</varname>, <varname>scaleValue</varname>, <varname>shiftScaleValue</varname></link>: Shift and/or scale the span of a bounding box by a value</para>
				</listitem>

				<listitem>
					<para><link linkend="box_shiftTime"><varname>shiftTime</varname>, <varname>scaleTime</varname>, <varname>shiftScaleTime</varname></link>: Shift and/or scale the period of a bounding box by an interval</para>
				</listitem>

				<listitem>
					<para><link linkend="box_getSpace"><varname>getSpace</varname></link>: Return the spatial dimension of a bounding box, removing the temporal dimension if any</para>
					</listitem>

				<listitem>
					<para><link linkend="box_expand"><varname>expandValue</varname>, <varname>expandSpace</varname>, <varname>expandTime</varname></link>: Expand the numeric, spatial, or temporal dimension of a bounding box by a value or an interval</para>
					</listitem>

				<listitem>
					<para><link linkend="box_round"><varname>round</varname></link>: Round the values or the coordinates of a bounding box to a number of decimal places</para>
				</listitem>

			</itemizedlist>
		</sect2>

		<sect2>
			<title>Spatial Reference System</title>

			<itemizedlist>
				<listitem>
					<para><link linkend="stbox_SRID"><varname>SRID</varname>, <varname>setSRID</varname></link>: Return or set the spatial reference identifier</para>
				</listitem>

				<listitem>
					<para><link linkend="stbox_transform"><varname>transform</varname>, <varname>transformPipeline</varname></link>: Transform to a spatial reference identifier</para>
				</listitem>
			</itemizedlist>
		</sect2>

		<sect2>
			<title>Splitting Operations</title>
			<itemizedlist>
				<listitem>
					<para><link linkend="quadSplit"><varname>quadSplit</varname></link>: Split a bounding box in quadrants or octants</para>
				</listitem>
			</itemizedlist>
		</sect2>

		<sect2>
			<title>Set Operations</title>
			<itemizedlist>
				<listitem>
					<para><link linkend="box_union"><varname>+</varname>, <varname>*</varname></link>: Union and intersection of bounding boxes</para>
				</listitem>
			</itemizedlist>
		</sect2>

		<sect2>
			<title>Bounding Box Operations</title>

			<sect3>
				<title>Topological Operations</title>
				<itemizedlist>
					<listitem>
						<para><link linkend="box_overlap"><varname>&amp;&amp;</varname></link>: Do the bounding boxes overlap?</para>
					</listitem>

					<listitem>
						<para><link linkend="box_contains"><varname>@&gt;</varname></link>: Does the first bounding box contain the second one?</para>
					</listitem>

					<listitem>
						<para><link linkend="box_containedby"><varname>&lt;@</varname></link>: Is the first bounding box contained in the second one?</para>
					</listitem>

					<listitem>
						<para><link linkend="box_same"><varname>~=</varname></link>: Are the bounding boxes equal in their common dimensions?</para>
					</listitem>

					<listitem>
						<para><link linkend="box_adjacent"><varname>-|-</varname></link>: Are the bounding boxes adjacent?</para>
					</listitem>
				</itemizedlist>
			</sect3>

			<sect3>
				<title>Position Operations</title>
				<itemizedlist>
					<listitem>
						<para><link linkend="tbox_left"><varname>&lt;&lt;</varname>, <varname>&lt;&lt;|</varname>, <varname>&lt;&lt;/</varname>, <varname>&lt;&lt;#</varname></link>: Are the X/Y/Z/T values of the first bounding box strictly less than those of the second one?</para>
					</listitem>

					<listitem>
						<para><link linkend="tbox_right"><varname>&gt;&gt;</varname>,<varname>|&gt;&gt;</varname>, <varname>/&gt;&gt;</varname>, <varname>#&gt;&gt;</varname></link>: Are the X/Y/Z/T values of the first bounding box strictly greater than those of the second one?</para>
					</listitem>

					<listitem>
						<para><link linkend="tbox_overleft"><varname>&amp;&lt;</varname>, <varname>&amp;&lt;|</varname>, <varname>&amp;&lt;/</varname>, <varname>&amp;&lt;#</varname></link>: Are the X/Y/Z/T values of the first bounding box not greater than those of the second one?</para>
					</listitem>

					<listitem>
						<para><link linkend="tbox_overright"><varname>&amp;&gt;</varname>, <varname>|&amp;&gt;</varname>, <varname>/&amp;&gt;</varname>, <varname>#&amp;&gt;</varname></link>: Are the X/Y/Z/T values of the first bounding box not less than those of the second one?</para>
					</listitem>
				</itemizedlist>
			</sect3>
		</sect2>

		<sect2>
			<title>Comparisons</title>
			<itemizedlist>
				<listitem>
				<para><link linkend="box_eq"><varname>=</varname>, <varname>&lt;&gt;</varname>, <varname>&lt;</varname>, <varname>&gt;</varname>, <varname>&lt;=</varname>, <varname>&gt;=</varname></link>: Traditional comparisons</para>
				</listitem>
			</itemizedlist>
		</sect2>

		<sect2>
			<title>Aggregations</title>

			<itemizedlist>
				<listitem>
					<para><link linkend="box_extent"><varname>extent</varname></link>: Bounding box extent</para>
				</listitem>
			</itemizedlist>
		</sect2>
	</sect1>

	<sect1>
		<title>Temporal Types</title>

		<sect2>
			<title>Input and Output</title>
			<itemizedlist>
				<listitem>
					<para><link linkend="ttype_asText"><varname>asText</varname></link>: Return the Well-Known Text (WKT) representation</para>
				</listitem>

				<listitem>
					<para><link linkend="ttype_asMFJSON"><varname>asMFJSON</varname></link>: Return the Moving Features JSON (MF-JSON) representation</para>
				</listitem>

				<listitem>
					<para><link linkend="ttype_asBinary"><varname>asBinary</varname>, <varname>asHexWKB</varname></link>: Return the Well-Known Binary (WKB) or the Hexadecimal Well-Known Binary (HexWKB) representation</para>
				</listitem>

				<listitem>
					<para><link linkend="ttypeFromMFJSON"><varname>ttypeFromMFJSON</varname></link>: Input from a Moving Features JSON (MF-JSON) representation</para>
				</listitem>

				<listitem>
					<para><link linkend="ttypeFromBinary"><varname>ttypeFromBinary</varname>, <varname>ttypeFromHexWKB</varname></link>: Input from the Well-Known Binary (WKB) or from the Hexadecimal Well-Known Binary (HexWKB) representation</para>
				</listitem>
			</itemizedlist>
		</sect2>

		<sect2>
			<title>Constructors</title>
			<itemizedlist>
				<listitem>
					<para><link linkend="ttype_const"><varname>ttype</varname></link>: Constructor for temporal types from a base value and a time value</para>
				</listitem>

				<listitem>
					<para><link linkend="ttypeSeq"><varname>ttypeSeq</varname></link>: Constructor for temporal types of sequence subtype</para>
				</listitem>

				<listitem>
					<para><link linkend="ttypeSeqSet"><varname>ttypeSeqSet</varname>, <varname>ttypeSeqSetGaps</varname></link>: Constructor for temporal types of sequence set subtype</para>
				</listitem>
			</itemizedlist>
		</sect2>

		<sect2>
			<title>Conversions</title>
			<itemizedlist>
				<listitem>
					<para><link linkend="ttype_tstzspan"><varname>ttype::tstzspan</varname></link>: Convert a temporal value to a timestamptz span</para>
				</listitem>
			</itemizedlist>
		</sect2>

		<sect2>
			<title>Accessors</title>
			<itemizedlist>
				<listitem>
				<para><link linkend="ttype_memSize"><varname>memSize</varname></link>: Return the memory size in bytes</para>
				</listitem>

				<listitem>
					<para><link linkend="ttype_tempSubtype"><varname>tempSubtype</varname></link>: Return the temporal subtype</para>
				</listitem>

				<listitem>
					<para><link linkend="ttype_interp"><varname>interp</varname></link>: Return the interpolation</para>
				</listitem>

				<listitem>
					<para><link linkend="ttype_getValue"><varname>getValue</varname>, <varname>getTimestamp</varname></link>: Return the value or the timestamp of an instant</para>
				</listitem>

				<listitem>
					<para><link linkend="ttype_getValues"><varname>getValues</varname>, <varname>getTime</varname></link>: Return the values or the time on which the temporal value is defined</para>
				</listitem>

				<listitem>
					<para><link linkend="ttype_startValue"><varname>startValue</varname>, <varname>endValue</varname>, <varname>valueN</varname></link>: Return the start, end, or n-th value</para>
				</listitem>

				<listitem>
					<para><link linkend="ttype_valueAtTimestamp"><varname>valueAtTimestamp</varname></link>: Return the value at a timestamp</para>
				</listitem>

				<listitem>
					<para><link linkend="ttype_duration"><varname>duration</varname></link>: Return the duration</para>
				</listitem>

				<listitem>
					<para><link linkend="ttype_lowerInc"><varname>lowerInc</varname>, <varname>upperInc</varname></link>: Is the start/end instant inclusive?</para>
				</listitem>

				<listitem>
					<para><link linkend="ttype_numInstants"><varname>numInstants</varname>, <varname>instants</varname></link>: Return the (number of) different instants</para>
				</listitem>

				<listitem>
					<para><link linkend="ttype_startInstant"><varname>startInstant</varname>, <varname>endInstant</varname>, <varname>instantN</varname></link>: Return the start, end, or n-th instant</para>
				</listitem>

				<listitem>
					<para><link linkend="ttype_numTimestamps"><varname>numTimestamps</varname>, <varname>timestamps</varname></link>: Return the (number of different) timestamps</para>
				</listitem>

				<listitem>
					<para><link linkend="ttype_startTimestamp"><varname>startTimestamp</varname>, <varname>endTimestamp</varname>, <varname>timestampN</varname></link>: Return the start, end, or n-th timestamp</para>
				</listitem>

				<listitem>
					<para><link linkend="numSequences"><varname>numSequences</varname>, <varname>sequences</varname></link>: Return the (number of) sequences</para>
				</listitem>

				<listitem>
					<para><link linkend="startSequence"><varname>startSequence</varname>, <varname>endSequence</varname>, <varname>sequenceN</varname></link>: Return the start, end, or n-th sequence</para>
				</listitem>

				<listitem>
					<para><link linkend="segments"><varname>segments</varname></link>: Return the segments</para>
				</listitem>
			</itemizedlist>
		</sect2>

		<sect2>
			<title>Transformations</title>
			<itemizedlist>
				<listitem>
				<para><link linkend="ttype_subtype"><varname>ttypeInst, ttypeSeq, ttypeSeqSet</varname></link>: Transform a temporal value to another subtype</para>
				</listitem>

				<listitem>
					<para><link linkend="ttype_setInterp"><varname>setInterp</varname></link>: Transform a temporal value to another interpolation</para>
				</listitem>

				<listitem>
					<para><link linkend="ttype_shiftTime"><varname>shiftTime</varname>, <varname>scaleTime</varname>, <varname>shiftScaleTime</varname></link>: Shift and/or scale the time span of a temporal value by one or two interval</para>
				</listitem>

				<listitem>
					<para><link linkend="ttype_unnest"><varname>unnest</varname></link>: Transform a nonlinear temporal value into a set of rows, each one containing a base value and a period set during which the temporal value has the base value</para>
				</listitem>
			</itemizedlist>
		</sect2>

		<sect2>
			<title>Modifications</title>
			<itemizedlist>
				<listitem>
				<para><link linkend="insert"><varname>insert</varname></link>: Insert a temporal value into another one</para>
				</listitem>

				<listitem>
				<para><link linkend="update"><varname>update</varname></link>: Update a temporal value with another one</para>
				</listitem>

				<listitem>
					<para><link linkend="deleteTime"><varname>deleteTime</varname></link>: Delete the instants of a temporal value that intersect a time value</para>
				</listitem>

				<listitem>
				<para><link linkend="appendInstant"><varname>appendInstant</varname></link>: Append a temporal instant to a temporal value</para>
				</listitem>

				<listitem>
				<para><link linkend="appendSequence"><varname>appendSequence</varname></link>: Append a temporal sequence to a temporal value</para>
				</listitem>

				<listitem>
				<para><link linkend="merge"><varname>merge</varname></link>: Merge temporal values</para>
				</listitem>

			</itemizedlist>
		</sect2>

		<sect2>
			<title>Restrictions</title>
			<itemizedlist>
			<listitem>
					<para><link linkend="type_atValues"><varname>atValues</varname>, <varname>minusValues</varname></link>: Restrict to (the complement of) a set of values</para>
				</listitem>

				<listitem>
					<para><link linkend="type_atTime"><varname>atTime</varname>, <varname>minusTime</varname></link>: Restrict to (the complement of) a time value</para>
				</listitem>
			</itemizedlist>
		</sect2>

		<sect2>
			<title>Comparisons</title>

			<itemizedlist>
				<listitem>
				<para><link linkend="ttype_eq"><varname>=</varname>, <varname>&lt;&gt;</varname>, <varname>&lt;</varname>, <varname>&gt;</varname>, <varname>&lt;=</varname>, <varname>&gt;=</varname></link>: Traditional comparisons</para>
				</listitem>

				<listitem>
					<para><link linkend="ttype_eveq"><varname>?=</varname>, <varname>%=</varname>, <varname>?&lt;&gt;</varname>, <varname>%&lt;&gt;</varname>, <varname>?&lt;</varname>, <varname>%&lt;</varname>, <varname>?&gt;</varname>, <varname>%&gt;</varname>, <varname>?&lt;=</varname>, <varname>%&lt;=</varname>, <varname>?&gt;=</varname>, <varname>%&gt;=</varname></link>: Ever and always comparisons</para>
				</listitem>

				<listitem>
					<para><link linkend="ttype_teq"><varname>#=</varname>, <varname>#&lt;&gt;</varname>, <varname>#&lt;</varname>, <varname>#&gt;</varname>, <varname>#&lt;=</varname>, <varname>#&gt;=</varname></link>: Temporal comparisons</para>
				</listitem>
			</itemizedlist>
		</sect2>

		<sect2>
			<title>Miscellaneous</title>
			<itemizedlist>
				<listitem>
					<para><link linkend="mobilitydb_version"><varname>mobilitydb_version</varname></link>: Return the version of the MobilityDB extension</para>
				</listitem>

				<listitem>
					<para><link linkend="mobilitydb_full_version"><varname>mobilitydb_full_version</varname></link>: Return the versions of the MobilityDB extension and its dependencies</para>
				</listitem>
			</itemizedlist>
		</sect2>
	</sect1>

	<sect1>
		<title>Temporal Alphanumeric Types</title>

		<sect2>
			<title>Conversions</title>
			<itemizedlist>
				<listitem>
					<para><link linkend="tnumber_bbox"><varname>tnumber::{span,tbox}</varname></link>: Convert a temporal number to a span or to a temporal box</para>
				</listitem>

				<listitem>
					<para><link linkend="tbool_tint"><varname>tbool::int</varname></link>: Convert between a temporal boolean and a temporal integer</para>
				</listitem>

				<listitem>
					<para><link linkend="tint_tfloat"><varname>tint::tfloat</varname>, <varname>tfloat::tint</varname></link>: Convert between a temporal integer and a temporal float</para>
				</listitem>
			</itemizedlist>
		</sect2>

		<sect2>
			<title>Accessors</title>
			<itemizedlist>
				<listitem>
					<para><link linkend="valueSpan"><varname>valueSpan</varname></link>: Return the value span</para>
				</listitem>

				<listitem>
					<para><link linkend="valueSet"><varname>valueSet</varname></link>: Return the set of values of a temporal number</para>
				</listitem>

				<listitem>
					<para><link linkend="startValue"><varname>startValue</varname>, <varname>endValue</varname>, <varname>valueN</varname></link>: Return the start, end, or n-th value</para>
				</listitem>

				<listitem>
					<para><link linkend="minValue"><varname>minValue</varname>, <varname>maxValue</varname></link>: Return the minimum or maximum value</para>
				</listitem>

				<listitem>
					<para><link linkend="minInstant"><varname>minInstant</varname>, <varname>maxInstant</varname></link>: Return the instant with the minimum or maximum value</para>
				</listitem>

				<listitem>
					<para><link linkend="integral"><varname>integral</varname></link>: Return the area under the curve</para>
				</listitem>

				<listitem>
					<para><link linkend="twAvg"><varname>twAvg</varname></link>: Return the time-weighted average</para>
				</listitem>
			</itemizedlist>
		</sect2>

		<sect2>
			<title>Transformations</title>
			<itemizedlist>
				<listitem>
					<para><link linkend="shiftValue"><varname>shiftValue</varname>, <varname>scaleValue</varname>, <varname>shiftScaleValue</varname></link>: Shift and/or scale the value span of a temporal number by one or two values</para>
				</listitem>

				<listitem>
					<para><link linkend="stops"><varname>stops</varname></link>: Extract from a temporal float with linear interpolation the subsequences where the values stay within an span of a given width for at least a given duration</para>
				</listitem>
			</itemizedlist>
		</sect2>

		<sect2>
			<title>Restrictions</title>
			<itemizedlist>
				<listitem>
					<para><link linkend="atMin"><varname>atMin</varname>, <varname>atMax</varname>, <varname>minusMin</varname>, <varname>minusMax</varname></link>: Restrict to (the complement of) the minimum or maximum value</para>
				</listitem>

				<listitem>
					<para><link linkend="atTbox"><varname>atTbox</varname>, <varname>minusTbox</varname></link>: Restrict to (the complement of) a <varname>tbox</varname></para>
				</listitem>
			</itemizedlist>
		</sect2>

		<sect2>
			<title>Mathematical Operations</title>
			<itemizedlist>
				<listitem>
					<para><link linkend="tnumber_add"><varname>+</varname>, <varname>-</varname>, <varname>*</varname>, <varname>/</varname></link>: Temporal addition, subtraction, multiplication, and division</para>
				</listitem>

				<listitem>
					<para><link linkend="abs"><varname>abs</varname></link>: Return the absolute value of a temporal number</para>
				</listitem>

				<listitem>
					<para><link linkend="deltaValue"><varname>deltaValue</varname></link>: Return the value difference between consecutive instants of a temporal number</para>
				</listitem>

				<listitem>
					<para><link linkend="floor"><varname>floor</varname>, <varname>ceil</varname></link>: Round down or up to the nearest integer</para>
				</listitem>

				<listitem>
					<para><link linkend="round"><varname>round</varname></link>: Round to a number of decimal places</para>
				</listitem>

				<listitem>
					<para><link linkend="degrees"><varname>degrees</varname>, <varname>radians</varname></link>: Convert to degrees or radians</para>
				</listitem>

				<listitem>
					<para><link linkend="derivative"><varname>derivative</varname></link>: Return the derivative over time of a temporal float in units per second</para>
				</listitem>

				<listitem>
					<para><link linkend="ln"><varname>ln</varname>, <varname>log10</varname></link>: Return the natural and base 10 logarithm of a temporal float</para>
				</listitem>

				<listitem>
					<para><link linkend="exp"><varname>exp</varname></link>: Return the exponential (e raised to the given power) of a temporal float</para>
				</listitem>
			</itemizedlist>
		</sect2>

		<sect2>
			<title>Boolean Operations</title>
			<itemizedlist>
				<listitem>
					<para><link linkend="tbool_and"><varname>&amp;</varname>, <varname>|</varname></link>: Temporal and, temporal or</para>
				</listitem>

				<listitem>
					<para><link linkend="tbool_not"><varname>~</varname></link>: Temporal not</para>
				</listitem>

				<listitem>
					<para><link linkend="whenTrue"><varname>whenTrue</varname></link>: Return the time when the temporal Boolean takes the value true</para>
				</listitem>
			</itemizedlist>
		</sect2>

		<sect2>
			<title>Text Operations</title>
			<itemizedlist>
				<listitem>
					<para><link linkend="ttext_concat"><varname>||</varname></link>: Text concatenation</para>
				</listitem>

				<listitem>
					<para><link linkend="ttext_lower"><varname>lower</varname>, <varname>upper</varname>, <varname>initcap</varname></link>: Transform in lowercase, uppercase, or initcap</para>
				</listitem>
			</itemizedlist>
		</sect2>
	</sect1>

	<sect1>
		<title>Temporal Geometry Types</title>

		<sect2>
			<title>Input and Output</title>
			<itemizedlist>
				<listitem>
					<para><link linkend="asText"><varname>asText</varname>, <varname>asEWKT</varname></link>: Return the Well-Known Text (WKT) or the Extended Well-Known Text (EWKT) representation</para>
				</listitem>

				<listitem>
					<para><link linkend="asMFJSON"><varname>asMFJSON</varname></link>: Return the Moving Features JSON (MF-JSON) representation</para>
				</listitem>

				<listitem>
					<para><link linkend="asBinary"><varname>asBinary</varname>, <varname>asEWKB</varname>, <varname>asHexEWKB</varname></link>: Return the Well-Known Binary (WKB), the Extended Well-Known Binary (EWKB), or the Hexadecimal Extended Well-Known Binary (EWKB) representation</para>
				</listitem>

				<listitem>
					<para><link linkend="tgeompointFromText"><varname>tspatialFromText</varname>, <varname>tspatialFromEWKT</varname></link>: Input from the Well-Known Text (WKT) or from the Extended Well-Known Text (EWKT) representation</para>
				</listitem>

				<listitem>
					<para><link linkend="tgeompointFromMFJSON"><varname>tspatialFromMFJSON</varname></link>: Input from the Moving Features JSON (MF-JSON) representation</para>
				</listitem>

				<listitem>
					<para><link linkend="tgeompointFromBinary"><varname>tspatialFromBinary</varname>, <varname>tspatialFromEWKB</varname>, <varname>tspatialFromHexEWKB</varname></link>: Input from the Well-Known Binary (WKB), from the Extended Well-Known Binary (EWKB), or from the Hexadecimal Extended Well-Known Binary (EWKB) representation</para>
				</listitem>
			</itemizedlist>
		</sect2>

		<sect2>
			<title>Conversions</title>
			<itemizedlist>
				<listitem>
					<para><link linkend="tgeometry_tgeography"><varname>tgeometry::tgeography</varname>, <varname>tgeography::tgeometry</varname>, <varname>tgeompoint::tgeogpoint</varname>, <varname>tgeogpoint::tgeompoint</varname></link>: Convert between a temporal geometry and a temporal geography</para>
				</listitem>

				<listitem>
					<para><link linkend="tgeompoint_geometry"><varname>tgeompoint::geometry, tgeogpoint::geography</varname>, <varname>geometry::tgeompoint, geography::tgeogpoint</varname></link>: Convert between a temporal point and a PostGIS trajectory</para>
				</listitem>
			</itemizedlist>
		</sect2>

		<sect2>
			<title>Spatial Reference System</title>
			<itemizedlist>
				<listitem>
					<para><link linkend="tgeo_SRID"><varname>SRID</varname>, <varname>setSRID</varname></link>: Return or set the spatial reference identifier</para>
				</listitem>

				<listitem>
					<para><link linkend="tgeo_transform"><varname>transform</varname>, <varname>transformPipeline</varname></link>: Transform to a spatial reference identifier</para>
				</listitem>
			</itemizedlist>
		</sect2>

		<sect2>
			<title>Bounding Box Operations</title>
			<itemizedlist>
				<listitem>
					<para><link linkend="tpoint_expandSpace"><varname>expandSpace</varname></link>: Return the spatiotemporal bounding box expanded in the spatial dimension by a float value</para>
				</listitem>
			</itemizedlist>
		</sect2>

		<sect2>
			<title>Accessors</title>
			<itemizedlist>
				<listitem>
					<para><link linkend="trajectory"><varname>trajectory</varname>, <varname>traversedArea</varname></link>: Return the trajectory or the traversed area</para>
				</listitem>

				<listitem>
					<para><link linkend="getX"><varname>getX</varname>, <varname>getY</varname>, <varname>getZ</varname></link>: Return the X/Y/Z/T coordinate values as a temporal float</para>
				</listitem>

				<listitem>
					<para><link linkend="isSimple"><varname>isSimple</varname></link>: Return true if the temporal point does not spatially self-intersect</para>
				</listitem>

				<listitem>
					<para><link linkend="length"><varname>length</varname></link>: Return the length traversed by the temporal point</para>
				</listitem>

				<listitem>
					<para><link linkend="cumulativeLength"><varname>cumulativeLength</varname></link>: Return the cumulative length traversed by the temporal point</para>
				</listitem>

				<listitem>
					<para><link linkend="speed"><varname>speed</varname></link>: Return the speed of the temporal point in units per second</para>
				</listitem>

				<listitem>
					<para><link linkend="twCentroid"><varname>twCentroid</varname></link>: Return the time-weighted centroid</para>
				</listitem>

				<listitem>
					<para><link linkend="direction"><varname>direction</varname></link>: Return the direction</para>
				</listitem>

				<listitem>
					<para><link linkend="azimuth"><varname>azimuth</varname></link>: Return the temporal azimuth</para>
				</listitem>

				<listitem>
					<para><link linkend="angularDifference"><varname>angularDifference</varname></link>: Return the temporal angular difference</para>
				</listitem>

				<listitem>
					<para><link linkend="bearing"><varname>bearing</varname></link>: Return the temporal bearing</para>
				</listitem>
			</itemizedlist>
		</sect2>

		<sect2>
			<title>Transformations</title>
			<itemizedlist>
				<listitem>
					<para><link linkend="tpoint_round"><varname>round</varname></link>: Round the coordinate values to a number of decimal places</para>
				</listitem>

				<listitem>
					<para><link linkend="tpoint_makeSimple"><varname>makeSimple</varname></link>:  Return an array of fragments of the temporal point which are simple</para>
				</listitem>

				<listitem>
					<para><link linkend="tpoint_geoMeasure"><varname>geoMeasure</varname></link>: Construct a geometry/geography with M measure from a temporal point and a temporal float</para>
				</listitem>

				<listitem>
					<para><link linkend="tgeo_affine"><varname>affine</varname></link>: Return the 3D affine transform of a temporal point to do things like translate, rotate, scale in one step</para>
				</listitem>

				<listitem>
					<para><link linkend="tgeo_rotate"><varname>rotate</varname></link>: Return a temporal point rotated counter-clockwise about the origin point</para>
				</listitem>

				<listitem>
					<para><link linkend="tgeo_scale"><varname>scale</varname></link>: Return a temporal point scaled by given factors</para>
				</listitem>

				<listitem>
					<para><link linkend="tpoint_asMVTGeom"><varname>asMVTGeom</varname></link>: Transform a temporal geometric point into the coordinate space of a Mapbox Vector Tile</para>
				</listitem>

				<listitem>
					<para><link linkend="tgeo_stops"><varname>stops</varname></link>: Extract from a temporal geometry point with linear interpolation the subsequences where the point stays within an area with a specified maximum size for at least the given duration</para>
				</listitem>

			</itemizedlist>
		</sect2>

		<sect2>
			<title>Restrictions</title>
			<itemizedlist>
				<listitem>
					<para><link linkend="tgeo_atGeometry"><varname>atGeometry</varname>, <varname>minusGeometry</varname></link>: Restrict to (the complement of) a geometry, a span in Z and/or a period</para>
				</listitem>

				<listitem>
					<para><link linkend="tgeo_atStbox"><varname>atStbox</varname>, <varname>minuStbox</varname></link>: Restrict to (the complement of) an <varname>stbox</varname></para>
				</listitem>
			</itemizedlist>
		</sect2>


		<sect2>
			<title>Distance Operations</title>
			<itemizedlist>
				<listitem>
					<para><link linkend="smallest_distance"><varname>|=|</varname></link>: Return the smallest distance ever</para>
				</listitem>

				<listitem>
					<para><link linkend="nearestApproachInstant"><varname>nearestApproachInstant</varname></link>: Return the instant of the first temporal point at which the two arguments are at the nearest distance</para>
				</listitem>

				<listitem>
					<para><link linkend="shortestLine"><varname>shortestLine</varname></link>: Return the line connecting the nearest approach point</para>
				</listitem>

				<listitem>
					<para><link linkend="distance"><varname>&lt;-&gt;</varname></link>: Return the temporal distance</para>
				</listitem>
			</itemizedlist>
		</sect2>

		<sect2>
			<title>Spatial Relationships</title>
			<sect3>
				<title>Ever or Always Spatial Relationships</title>

				<itemizedlist>
					<listitem>
						<para><link linkend="eContains"><varname>eContains</varname>, <varname>aContains</varname></link>: Ever or always contains</para>
					</listitem>

					<listitem>
						<para><link linkend="eDisjoint"><varname>eDisjoint</varname>, <varname>aDisjoint</varname></link>: Is ever or always disjoint</para>
					</listitem>

					<listitem>
						<para><link linkend="eDwithin"><varname>eDwithin</varname>, <varname>aDwithin</varname></link>: Is ever or always at distance within</para>
					</listitem>

					<listitem>
						<para><link linkend="eIntersects"><varname>eIntersects</varname>, <varname>aIntersects</varname></link>: Ever or always intersects</para>
					</listitem>

					<listitem>
						<para><link linkend="eTouches"><varname>eTouches</varname>, <varname>aTouches</varname></link>: Ever or always touches</para>
					</listitem>
				</itemizedlist>
			</sect3>

			<sect3>
				<title>Spatiotemporal Relationships</title>

				<itemizedlist>
					<listitem>
						<para><link linkend="tContains"><varname>tContains</varname></link>: Temporal contains</para>
					</listitem>

					<listitem>
						<para><link linkend="tDisjoint"><varname>tDisjoint</varname></link>: Temporal disjoint</para>
					</listitem>

					<listitem>
						<para><link linkend="tDwithin"><varname>tDwithin</varname></link>: Temporal distance within</para>
					</listitem>

					<listitem>
						<para><link linkend="tIntersects"><varname>tIntersects</varname></link>: Temporal intersects</para>
					</listitem>

					<listitem>
						<para><link linkend="tTouches"><varname>tTouches</varname></link>: Temporal touches</para>
					</listitem>
				</itemizedlist>
			</sect3>
		</sect2>
	</sect1>

	<sect1>
		<title>Operations for Temporal Types: Analytics Operations</title>

		<sect2>
			<title>Simplification</title>

			<itemizedlist>
				<listitem>
					<para><link linkend="ttype_minDistSimplify"><varname>minDistSimplify</varname>, <varname>minTimeDeltaSimplify</varname></link>: Return a temporal float or a temporal point simplified ensuring that consecutive values are at least a certain distance or time interval apart</para>
				</listitem>

				<listitem>
					<para><link linkend="ttype_douglasPeuckerSimplify"><varname>maxDistSimplify</varname>, <varname>douglasPeuckerSimplify</varname></link>: Return a temporal float or a temporal point simplified using the Douglas-Peucker algorithm</para>
				</listitem>
			</itemizedlist>
		</sect2>

		<sect2>
			<title>Reduction</title>

			<itemizedlist>
				<listitem>
					<para><link linkend="ttype_tsample"><varname>tsample</varname></link>: Sample a temporal value with respect to an interval</para>
				</listitem>

				<listitem>
					<para><link linkend="ttype_tprecision"><varname>tprecision</varname></link>: Reduce the temporal precision of a temporal value with respect to an interval computing the time-weighted average/centroid in each time bin</para>
				</listitem>
			</itemizedlist>
		</sect2>

		<sect2>
			<title>Similarity</title>

			<itemizedlist>
				<listitem>
					<para><link linkend="ttype_similarityDistance"><varname>hausdorffDistance</varname>, <varname>frechetDistance</varname>, <varname>dynTimeWarpDistance</varname></link>: Return the discrete Hausdorff distance, the discrete Fréchet distance, or the Dynamic Time Warp distance between two temporal values</para>
				</listitem>

				<listitem>
					<para><link linkend="ttype_similarityDistancePath"><varname>frechetDistancePath</varname>, <varname>dynTimeWarpPath</varname></link>: Return the correspondence pairs between two temporal values with respect to the discrete Fréchet distance or the Dynamic Time Warp distance</para>
				</listitem>
			</itemizedlist>
		</sect2>

		<sect2>
			<title>Splitting Operations</title>
			<itemizedlist>
				<listitem>
					<para><link linkend="ttype_splitNSpans"><varname>splitNSpans</varname></link>: Return an array of N time spans obtained by merging the instants or segments of a temporal value</para>
				</listitem>

				<listitem>
					<para><link linkend="ttype_splitEachNSpans"><varname>splitEachNSpans</varname></link>: Return an array of time spans obtained by merging N consecutive instants or segments of a temporal value</para>
				</listitem>

				<listitem>
					<para><link linkend="ttype_splitNTboxes"><varname>splitNTboxes</varname></link>: Return an array of N temporal boxes obtained by merging the instants or segments of a temporal number</para>
				</listitem>

				<listitem>
					<para><link linkend="ttype_splitEachNTboxes"><varname>splitEachNTboxes</varname></link>: Return an array of temporal boxes obtained by merging N consecutive instants or segments of a temporal number</para>
				</listitem>

				<listitem>
					<para><link linkend="ttype_splitNStboxes"><varname>splitNStboxes</varname></link>: Return either an array of N spatial boxes obtained by merging the segments of a (multi)line or an array of N spatiotemporal boxes obtained by merging the instants or segments of a temporal point</para>
				</listitem>

				<listitem>
					<para><link linkend="ttype_splitEachNStboxes"><varname>splitEachNStboxes</varname></link>: Return either an array of spatial boxes obtained by merging N consecutive segments of a (multi)line or an array of spatiotemporal boxes obtained by merging N consecutive instants or segments of a temporal point</para>
				</listitem>
			</itemizedlist>
		</sect2>

		<sect2>
			<title>Multidimensional Tiling</title>

			<sect3>
				<title>Bin Operations</title>

				<itemizedlist>
					<listitem>
						<para><link linkend="bins"><varname>bins</varname></link>: Return a set of bins that cover a value or time span with bins of the same width or duration</para>
					</listitem>

					<listitem>
						<para><link linkend="getBin"><varname>getBin</varname></link>: Return the bin that contains a number or a timestamp</para>
					</listitem>
				</itemizedlist>
			</sect3>

			<sect3>
				<title>Tile Operations</title>

				<itemizedlist>
					<listitem>
						<para><link linkend="valueTimeTiles"><varname>valueTiles</varname>, <varname>timeTiles</varname>, <varname>valueTimeTiles</varname></link>: Return the set of tiles that cover a temporal box with tiles of the same size and/or duration</para>
					</listitem>

					<listitem>
						<para><link linkend="spaceTimeTiles"><varname>spaceTiles</varname>, <varname>timeTiles</varname>, <varname>spaceTimeTiles</varname></link>: Return the set of tiles that cover a spatiotemporal box with tiles of the same size and/or duration</para>
					</listitem>

					<listitem>
						<para><link linkend="getValueTimeTile"><varname>getValueTile</varname>, <varname>getTboxTimeTile</varname>, <varname>getValueTimeTile</varname></link>: Return the temporal tile that covers a value and/or a timestamp</para>
						</listitem>

					<listitem>
						<para><link linkend="getSpaceTimeTile"><varname>getSpaceTile</varname>, <varname>getStboxTimeTile</varname>, <varname>getSpaceTimeTile</varname></link>: Return the spatiotemporal tile that covers a point and/or a timestamp</para>
						</listitem>
				</itemizedlist>
			</sect3>

			<sect3>
				<title>Bounding Box Operations</title>

				<itemizedlist>
					<listitem>
						<para><link linkend="valueTimeBins"><varname>valueBins</varname>, <varname>timeBins</varname></link>: Return an array of value or times spans obtained from the instants or segments of a temporal number with respect to a value or time grid</para>
					</listitem>

					<listitem>
						<para><link linkend="valueTimeBoxes"><varname>valueBoxes</varname>, <varname>timeBoxes</varname>, <varname>valueTimeBoxes</varname></link>: Return an array of temporal boxes obtained from the instants or segments of a temporal number with respect to a value and/or time grid</para>
					</listitem>

					<listitem>
						<para><link linkend="spaceTimeBoxes"><varname>spaceBoxes</varname>, <varname>timeBoxes</varname>, <varname>spaceTimeBoxes</varname></link>: Return an array of spatiotemporal boxes obtained from the instants or segments of a temporal point with respect to a space and/or time grid</para>
					</listitem>
				</itemizedlist>
			</sect3>

			<sect3>
				<title>Splitting Operations</title>

				<itemizedlist>
					<listitem>
						<para><link linkend="valueSplit"><varname>valueSplit</varname>, <varname>timeSplit</varname>, <varname>valueTimeSplit</varname></link>: Split a temporal number with respect to value and/or time bins</para>
					</listitem>

					<listitem>
						<para><link linkend="spaceSplit"><varname>spaceSplit</varname>, <varname>spaceTimeSplit</varname></link>: Split a temporal point with respect to a spatial or spatiotemporal grid</para>
					</listitem>
				</itemizedlist>
			</sect3>
		</sect2>

		<sect2>
			<title>Aggregations</title>

			<itemizedlist>
				<listitem>
					<para><link linkend="tCount"><varname>tCount</varname></link>: Temporal count</para>
				</listitem>

				<listitem>
					<para><link linkend="extent"><varname>extent</varname></link>: Bounding box extent</para>
				</listitem>

				<listitem>
					<para><link linkend="tAnd"><varname>tAnd</varname>, <varname>tOr</varname></link>: Temporal and, temporal or</para>
				</listitem>

				<listitem>
					<para><link linkend="tMin"><varname>tMin</varname>, <varname>tMax</varname>, <varname>tSum</varname>, <varname>tAvg</varname></link>: Temporal minimum, maximum, sum, and average</para>
				</listitem>

				<listitem>
					<para><link linkend="wCount"><varname>wCount</varname></link>: Window count</para>
				</listitem>

				<listitem>
					<para><link linkend="wMin"><varname>wMin</varname></link>: Window minimum, maximum, sum, and average</para>
				</listitem>

				<listitem>
					<para><link linkend="tCentroid"><varname>tCentroid</varname></link>: Temporal centroid</para>
				</listitem>

			</itemizedlist>
		</sect2>
	</sect1>

	<sect1>
		<title>Temporal Poses</title>

		<sect2>
			<title>Static Poses</title>

			<sect3>
				<title>Input and Output</title>
				<itemizedlist>

					<listitem>
						<para><link linkend="pose_asText"><varname>asText</varname>, <varname>asEWKT</varname></link>: Return the Well-Known Text (WKT) or the Extended Well-Known Text (EWKT) representation</para>
					</listitem>

					<listitem>
						<para><link linkend="pose_asBinary"><varname>asBinary</varname>, <varname>asEWKB</varname>, <varname>asHexEWKB</varname></link>: Return the Well-Known Binary (WKB), the Extended Well-Known Binary (EWKB), or the Hexadecimal Extended Well-Known Binary (HexEWKB) representation</para>
					</listitem>

					<listitem>
						<para><link linkend="poseFromText"><varname>poseFromText</varname>, <varname>poseFromEWKT</varname></link>: Input from the Well-Known Text (WKT) or from the Extended Well-Known Text (EWKT) representation</para>
					</listitem>

					<listitem>
						<para><link linkend="poseFromBinary"><varname>poseFromBinary</varname>, <varname>poseFromEWKB </varname>, <varname>poseFromHexEWKB</varname></link>: Input from the Well-Known Binary (WKB), from the Extended Well-Known Binary (EWKB), or from the Hexadecimal Extended Well-Known Binary (HexEWKB) representation</para>
					</listitem>
				</itemizedlist>
			</sect3>

			<sect3>
				<title>Constructors</title>
				<itemizedlist>
					<listitem>
						<para><link linkend="pose"><varname>pose</varname></link>: Constructors for poses</para>
					</listitem>
				</itemizedlist>
			</sect3>

			<sect3>
				<title>Conversions</title>
				<itemizedlist>
					<listitem>
						<para><link linkend="pose_stbox"><varname>pose::stbox</varname></link>: Convert a pose and, optionally, a timestamp or a period, into a spatiotemporal box</para>
					</listitem>

					<listitem>
						<para><link linkend="pose_geometry"><varname>pose::geometry</varname></link>: Convert a pose into a geometry point</para>
					</listitem>
				</itemizedlist>
			</sect3>

			<sect3>
				<title>Accessors</title>
				<itemizedlist>
					<listitem>
						<para><link linkend="pose_point"><varname>point</varname></link>: Return the point</para>
					</listitem>

					<listitem>
						<para><link linkend="pose_rotation"><varname>rotation</varname></link>: Return the rotation</para>
					</listitem>

					<listitem>
						<para><link linkend="pose_orientation"><varname>orientation</varname></link>: Return the orientation</para>
					</listitem>
				</itemizedlist>
			</sect3>

			<sect3>
				<title>Transformations</title>
				<itemizedlist>
					<listitem>
						<para><link linkend="pose_round"><varname>round</varname></link>: Round the point and the orientation of the pose to the number of decimal places</para>
					</listitem>
				</itemizedlist>
			</sect3>

			<sect3>
				<title>Spatial Reference System</title>
				<itemizedlist>
					<listitem>
						<para><link linkend="pose_srid"><varname>SRID</varname>, <varname>setSRID</varname></link>: Return or set the spatial reference identifier</para>
					</listitem>

					<listitem>
						<para><link linkend="pose_transform"><varname>transform</varname>, <varname>transformPipeline</varname></link>: Transform to a spatial reference identifier</para>
					</listitem>

					<listitem>
						<para><link linkend="pose_same"><varname>same</varname></link>: Spatial similarity</para>
					</listitem>
				</itemizedlist>
			</sect3>

			<sect3>
				<title>Comparisons</title>
				<itemizedlist>
					<listitem>
						<para><link linkend="pose_eq"><varname>=</varname>, <varname>&lt;&gt;</varname>, <varname>&lt;</varname>, <varname>&gt;</varname>, <varname>&lt;=</varname>, <varname>&gt;=</varname></link>: Traditional comparisons</para>
						</listitem>
				</itemizedlist>
			</sect3>
		</sect2>

		<sect2>
			<title>Temporal Poses</title>
			<sect3>
				<title>Input and Output</title>
				<itemizedlist>
					<listitem>
						<para><link linkend="tpose_asText"><varname>asText</varname>, <varname>asEWKT</varname></link>: Return the Well-Known Text (WKT) or the Extended Well-Known Text (EWKT) representation</para>
					</listitem>

					<listitem>
						<para><link linkend="tpose_asMFJSON"><varname>asMFJSON</varname></link>: Return the Moving Features JSON (MF-JSON) representation</para>
					</listitem>

					<listitem>
						<para><link linkend="tpose_asBinary"><varname>asBinary</varname>, <varname>asEWKB</varname>, <varname>asHexEWKB</varname></link>: Return the Well-Known Binary (WKB), the Extended Well-Known Binary (EWKB), or the Hexadecimal Extended Well-Known Binary (HexEWKB) representation</para>
					</listitem>

					<listitem>
						<para><link linkend="tposeFromText"><varname>tposeFromText</varname>, <varname>tposeFromEWKT</varname></link>: Input from the Well-Known Text (WKT) or from the Extended Well-Known Text (EWKT) representation</para>
					</listitem>

					<listitem>
						<para><link linkend="tposeFromMFJSON"><varname>tposeFromMFJSON</varname></link>: Input from the Moving Features JSON (MF-JSON) representation</para>
					</listitem>

					<listitem>
						<para><link linkend="tposeFromBinary"><varname>tposeFromBinary</varname>, <varname>tposeFromEWKB </varname>, <varname>tposeFromHexEWKB</varname></link>: Input from the Well-Known Binary (WKB), from the Extended Well-Known Binary (EWKB), or from the Hexadecimal Extended Well-Known Binary (HexEWKB) representation</para>
					</listitem>
				</itemizedlist>
			</sect3>

			<sect3>
				<title>Constructors</title>
				<itemizedlist>
					<listitem>
						<para><link linkend="tpose_const"><varname>tpose</varname></link>: Constructor for temporal poses from a base value and a time value</para>
					</listitem>

					<listitem>
						<para><link linkend="tposeSeq"><varname>tposeSeq</varname></link>: Constructors for temporal poses of sequence subtype</para>
					</listitem>

					<listitem>
						<para><link linkend="tposeSeqSet"><varname>tposeSeqSet</varname>, <varname>tposeSeqSetGaps</varname></link>: Constructor for temporal poses of sequence set subtype</para>
					</listitem>

					<listitem>
						<para><link linkend="tgeompoint_tfloat_tpose"><varname>tpose</varname></link>: Construct a 2D temporal pose from a temporal geometry point and a temporal float</para>
					</listitem>
				</itemizedlist>
			</sect3>

			<sect3>
				<title>Conversions</title>
				<itemizedlist>
					<listitem>
						<para><link linkend="tpose_tgeompoint"><varname>tpose::tgeompoint</varname></link>: Convert a temporal pose into a temporal geometry point</para>
					</listitem>
				</itemizedlist>
			</sect3>

			<sect3>
				<title>Accessors</title>
				<itemizedlist>
					<listitem>
						<para><link linkend="tpose_getValues"><varname>getValues</varname></link>: Return the values</para>
					</listitem>

					<listitem>
						<para><link linkend="tpose_points"><varname>points</varname></link>: Return the points</para>
					</listitem>

					<listitem>
						<para><link linkend="tpose_rotation"><varname>rotation</varname></link>: Return the rotation</para>
					</listitem>

					<listitem>
						<para><link linkend="tpose_valueAtTimestamp"><varname>valueAtTimestamp</varname></link>: Return the value at a timestamp</para>
					</listitem>
				</itemizedlist>
			</sect3>

			<sect3>
				<title>Transformations</title>
				<itemizedlist>
					<listitem>
						<para><link linkend="tpose_subtype"><varname>tposeInst</varname>, <varname>tposeSeq </varname>, <varname>tposeSeqSet</varname></link>: Transform to another subtype</para>
					</listitem>

					<listitem>
						<para><link linkend="tpose_setInterp"><varname>setInterp</varname></link>: Transform to another interpolation</para>
					</listitem>

					<listitem>
						<para><link linkend="pose_round"><varname>round</varname></link>: Round the points and the orientations of the temporal pose to the number of decimal places</para>
					</listitem>
				</itemizedlist>
			</sect3>

			<sect3>
				<title>Modifications</title>
				<itemizedlist>
					<listitem>
						<para><link linkend="tpose_appendInstant"><varname>appendInstant</varname>, <varname>appendSequence</varname></link>: Append a temporal instant or a temporal sequence</para>
					</listitem>

					<listitem>
						<para><link linkend="tpose_merge"><varname>merge</varname></link>: Merge the temporal poses</para>
					</listitem>
				</itemizedlist>
			</sect3>

			<sect3>
				<title>Restrictions</title>
				<itemizedlist>
					<listitem>
						<para><link linkend="tpose_atValues"><varname>atValues</varname>, <varname>minusValues</varname></link>: Restrict to (the complement of) a set of values</para>
					</listitem>

					<listitem>
						<para><link linkend="tpose_atGeometry"><varname>atGeometry</varname>, <varname>minusGeometry</varname></link>: Restrict to (the complement of) a geometry</para>
					</listitem>
				</itemizedlist>
			</sect3>

			<sect3>
				<title>Spatial Reference System</title>
				<itemizedlist>
					<listitem>
						<para><link linkend="tpose_SRID"><varname>SRID</varname>, <varname>setSRID</varname></link>: Return or set the spatial reference identifier</para>
					</listitem>

					<listitem>
						<para><link linkend="tpose_transform"><varname>transform</varname>, <varname>transformPipeline</varname></link>: Transform to a spatial reference identifier</para>
					</listitem>
				</itemizedlist>
			</sect3>

			<sect3>
				<title>Bounding Box Operations</title>
				<itemizedlist>
					<listitem>
						<para><link linkend="tpose_topo"><varname>&amp;&amp;, &lt;@, @&gt;, ~=, -|-</varname></link>: Topological operators</para>
					</listitem>

					<listitem>
						<para><link linkend="tpose_pos"><varname>&lt;&lt;, &amp;&lt;, &gt;&gt;, &amp;&gt;, &lt;&lt;|, &amp;&lt;|, |&gt;&gt;, |&amp;&gt;, &lt;&lt;#, &amp;&lt;#, #&gt;&gt;, |&amp;&gt;</varname></link>: Position operators</para>
					</listitem>
				</itemizedlist>
			</sect3>

			<sect3>
				<title>Distance Operations</title>
				<itemizedlist>
					<listitem>
						<para><link linkend="tpose_nearestApproachDistance"><varname>|=|</varname></link>: Return the smallest distance ever</para>
					</listitem>

					<listitem>
						<para><link linkend="tpose_nearestApproachInstant"><varname>nearestApproachInstant</varname></link>: Return the instant of the first temporal pose at which the two arguments are at the nearest distance</para>
					</listitem>

					<listitem>
						<para><link linkend="tpose_shortestLine"><varname>shortestLine</varname></link>: Return the line connecting the nearest approach point</para>
					</listitem>

					<listitem>
						<para><link linkend="tpose_distance"><varname>&lt;-&gt;</varname></link>: Return the temporal distance</para>
					</listitem>
				</itemizedlist>
			</sect3>

			<sect3>
				<title>Comparisons</title>
				<itemizedlist>
					<listitem>
						<para><link linkend="tpose_comp"><varname>=, &lt;&gt;, &lt;, &gt;, &lt;=, &gt;=</varname></link>: Traditional comparisons</para>
					</listitem>

					<listitem>
						<para><link linkend="tpose_ever_always"><varname>?=, &amp;=</varname></link>: Ever and always comparisons</para>
					</listitem>

					<listitem>
						<para><link linkend="tpose_tcomp"><varname>#=, #&lt;&gt;</varname></link>: Temporal comparisons</para>
					</listitem>

				</itemizedlist>
			</sect3>

			<sect3>
				<title>Aggregations</title>
				<itemizedlist>
					<listitem>
						<para><link linkend="tpose_tCount"><varname>tCount</varname></link>: Temporal count</para>
					</listitem>

					<listitem>
						<para><link linkend="tpose_wCount"><varname>wCount</varname></link>: Window count</para>
					</listitem>
				</itemizedlist>
			</sect3>
		</sect2>
	</sect1>

	<sect1>
		<title>Temporal Network Points</title>

		<sect2>
			<title>Static Network Types</title>

			<sect3>
				<title>Constructors</title>
				<itemizedlist>
					<listitem>
						<para><link linkend="npoint"><varname>npoint</varname>, <varname>nsegment</varname></link>: Constructors for network points and network segments</para>
					</listitem>
				</itemizedlist>
			</sect3>

			<sect3>
				<title>Conversions</title>
				<itemizedlist>
					<listitem>
						<para><link linkend="npoint_geometry"><varname>npoint::geometry</varname>, <varname>nsegment::geometry</varname>, <varname>geometry::npoint</varname>, <varname>geometry::nsegment</varname></link>: Convert between a network point or segment and a geometry</para>
					</listitem>
				</itemizedlist>
			</sect3>

			<sect3>
				<title>Accessors</title>
				<itemizedlist>
					<listitem>
						<para><link linkend="route"><varname>route</varname></link>: Return the route identifier</para>
					</listitem>

					<listitem>
						<para><link linkend="getPosition"><varname>getPosition</varname></link>: Return the position fraction</para>
					</listitem>

					<listitem>
						<para><link linkend="startPosition"><varname>startPosition</varname>, <varname>endPosition</varname></link>: Return the start or end position</para>
					</listitem>
				</itemizedlist>
			</sect3>

			<sect3>
				<title>Transformations</title>
				<itemizedlist>
					<listitem>
						<para><link linkend="npoint_round"><varname>round</varname></link>: Round the position(s) of the network point or the network segment to the number of decimal places</para>
					</listitem>
				</itemizedlist>
			</sect3>

			<sect3>
				<title>Spatial Operations</title>
				<itemizedlist>
					<listitem>
						<para><link linkend="npoint_srid"><varname>SRID</varname></link>: Return the spatial reference identifier</para>
					</listitem>

					<listitem>
						<para><link linkend="npoint_same"><varname>equals</varname></link>: Spatial similarity</para>
					</listitem>
				</itemizedlist>
			</sect3>

			<sect3>
				<title>Comparisons</title>
				<itemizedlist>
					<listitem>
						<para><link linkend="npoint_eq"><varname>=</varname>, <varname>&lt;&gt;</varname>, <varname>&lt;</varname>, <varname>&gt;</varname>, <varname>&lt;=</varname>, <varname>&gt;=</varname></link>: Traditional comparisons</para>
						</listitem>
				</itemizedlist>
			</sect3>
		</sect2>

		<sect2>
			<title>Temporal Network Points</title>
			<sect3>
				<title>Constructors</title>
				<itemizedlist>
					<listitem>
						<para><link linkend="tnpoint_const"><varname>tnpoint</varname></link>: Constructor for temporal network points from a base value and a time value</para>
					</listitem>

					<listitem>
						<para><link linkend="tnpointSeq"><varname>tnpointSeq</varname></link>: Constructors for temporal network points of sequence subtype</para>
					</listitem>

					<listitem>
						<para><link linkend="tnpointSeqSet"><varname>tnpointSeqSet</varname>, <varname>tnpointSeqSetGaps</varname></link>: Constructor for temporal network points of sequence set subtype</para>
					</listitem>
				</itemizedlist>
			</sect3>

			<sect3>
				<title>Conversions</title>
				<itemizedlist>
					<listitem>
						<para><link linkend="tnpoint_tgeompoint"><varname>tnpoint::tgeompoint</varname>, <varname>tgeompoint::tnpoint</varname></link>: Convert between a temporal network point and a temporal geometry point</para>
					</listitem>
				</itemizedlist>
			</sect3>

			<sect3>
				<title>Accessors</title>
				<itemizedlist>
					<listitem>
						<para><link linkend="tnpoint_getValues"><varname>getValues</varname></link>: Return the values</para>
					</listitem>

					<listitem>
						<para><link linkend="tnpoint_routes"><varname>routes</varname></link>: Return the road identifiers</para>
					</listitem>

					<listitem>
						<para><link linkend="tnpoint_valueAtTimestamp"><varname>valueAtTimestamp</varname></link>: Return the value at a timestamp</para>
					</listitem>

					<listitem>
						<para><link linkend="tnpoint_length"><varname>length</varname></link>: Return the length traversed by the temporal network point</para>
					</listitem>

					<listitem>
						<para><link linkend="tnpoint_cumulativeLength"><varname>cumulativeLength</varname></link>: Return the cumulative length traversed by the temporal network point</para>
					</listitem>

					<listitem>
						<para><link linkend="tnpoint_speed"><varname>speed</varname></link>: Return the speed of the temporal network point in units per second</para>
					</listitem>


				</itemizedlist>
			</sect3>

			<sect3>
				<title>Transformations</title>
				<itemizedlist>
					<listitem>
						<para><link linkend="tnpoint_subtype"><varname>tnpointInst</varname>, <varname>tnpointSeq</varname>, <varname>tnpointSeqSet</varname></link>: Transform a temporal network point to another subtype</para>
					</listitem>

					<listitem>
						<para><link linkend="tnpoint_setInterp"><varname>setInterp</varname></link>: Transform a temporal network point to another interpolation</para>
					</listitem>

					<listitem>
						<para><link linkend="tnpoint_round"><varname>round</varname></link>: Round the fraction of the temporal network point to the number of decimal places</para>
					</listitem>

				</itemizedlist>
			</sect3>

			<sect3>
				<title>Restrictions</title>
				<itemizedlist>
					<listitem>
						<para><link linkend="tnpoint_atValues"><varname>atValues</varname>, <varname>minusValues</varname></link>: Restrict to (the complement of) a set of values</para>
					</listitem>

					<listitem>
						<para><link linkend="tnpoint_atGeometry"><varname>atGeometry</varname>, <varname>minusGeometry</varname></link>: Restrict to (the complement of) a geometry</para>
					</listitem>


				</itemizedlist>
			</sect3>

			<sect3>
				<title>Bounding Box Operations</title>
				<itemizedlist>
					<listitem>
						<para><link linkend="tnpoint_topo"><varname>&amp;&amp;, &lt;@, @&gt;, ~=, -|-</varname></link>: Topological operators</para>
					</listitem>

					<listitem>
						<para><link linkend="tnpoint_pos"><varname>&lt;&lt;, &amp;&lt;, &gt;&gt;, &amp;&gt;, &lt;&lt;|, &amp;&lt;|, |&gt;&gt;, |&amp;&gt;, &lt;&lt;#, &amp;&lt;#, #&gt;&gt;, |&amp;&gt;</varname></link>: Position operators</para>
					</listitem>

				</itemizedlist>
			</sect3>

			<sect3>
				<title>Distance Operations</title>
				<itemizedlist>
					<listitem>
						<para><link linkend="tnpoint_nearestApproachInstant"><varname>nearestApproachInstant</varname></link>: Return the instant of the first temporal network point at which the two arguments are at the nearest distance</para>
					</listitem>

					<listitem>
						<para><link linkend="tnpoint_nearestApproachDistance"><varname>nearestApproachDistance</varname></link>: Smallest distance ever between the two arguments</para>
					</listitem>

					<listitem>
						<para><link linkend="tnpoint_shortestLine"><varname>shortestLine</varname></link>: Return the line connecting the nearest approach point between the two arguments</para>
					</listitem>

					<listitem>
						<para><link linkend="tnpoint_smallestDistance"><varname>|=|</varname></link>: Return the smallest distance ever between the two arguments</para>
					</listitem>

					<listitem>
						<para><link linkend="tnpoint_distance"><varname>&lt;-&gt;</varname></link>: Return the temporal distance</para>
					</listitem>
				</itemizedlist>
			</sect3>

			<sect3>
				<title>Spatial Operations</title>
				<itemizedlist>
					<listitem>
						<para><link linkend="tnpoint_twCentroid"><varname>twCentroid</varname></link>: Return the time-weighted centroid</para>
					</listitem>
				</itemizedlist>
			</sect3>

			<sect3>
				<title>Comparisons</title>
				<itemizedlist>
					<listitem>
						<para><link linkend="tnpoint_comp"><varname>=, &lt;&gt;, &lt;, &gt;, &lt;=, &gt;=</varname></link>: Traditional comparisons</para>
					</listitem>

					<listitem>
						<para><link linkend="tnpoint_ever_always"><varname>?=, &amp;=</varname></link>: Ever and always comparisons</para>
					</listitem>

					<listitem>
						<para><link linkend="tnpoint_tcomp"><varname>#=, #&lt;&gt;</varname></link>: Temporal comparisons</para>
					</listitem>

				</itemizedlist>
			</sect3>

			<sect3>
				<title>Aggregations</title>
				<itemizedlist>
					<listitem>
						<para><link linkend="tnpoint_tCount"><varname>tCount</varname></link>: Temporal count</para>
					</listitem>

					<listitem>
						<para><link linkend="tnpoint_wCount"><varname>wCount</varname></link>: Window count</para>
					</listitem>

					<listitem>
						<para><link linkend="tnpoint_tCentroid"><varname>tCentroid</varname></link>: Temporal centroid</para>
					</listitem>
				</itemizedlist>
			</sect3>
		</sect2>
	</sect1>

	<sect1>
		<title>Temporal Circular Buffers</title>

		<sect2>
			<title>Static Circular Buffers</title>

			<sect3>
				<title>Constructors</title>
				<itemizedlist>
					<listitem>
						<para><link linkend="cbuffer"><varname>cbuffer</varname></link>: Constructor for circular buffers</para>
					</listitem>
				</itemizedlist>
			</sect3>

			<sect3>
				<title>Conversions</title>
				<itemizedlist>
					<listitem>
						<para><link linkend="cbuffer_geometry"><varname>cbuffer::geometry</varname>, <varname>geometry::cbuffer</varname></link>: Convert betwwen a circular buffer and a geometry point</para>
					</listitem>

					<listitem>
						<para><link linkend="cbuffer_stbox"><varname>stbox</varname></link>: Convert a circular buffer and, optionally, a timestamp or a period, into a spatiotemporal box</para>
					</listitem>

				</itemizedlist>
			</sect3>

			<sect3>
				<title>Accessors</title>
				<itemizedlist>
					<listitem>
						<para><link linkend="point"><varname>point</varname></link>: Return the point</para>
					</listitem>

					<listitem>
						<para><link linkend="radius"><varname>radius</varname></link>: Return the radius</para>
					</listitem>
				</itemizedlist>
			</sect3>

			<sect3>
				<title>Transformations</title>
				<itemizedlist>
					<listitem>
						<para><link linkend="cbuffer_round"><varname>round</varname></link>: Round the point and the radius of the circular buffer to the number of decimal places</para>
					</listitem>
				</itemizedlist>
			</sect3>

			<sect3>
				<title>Spatial Operations</title>
				<itemizedlist>
					<listitem>
						<para><link linkend="cbuffer_SRID"><varname>SRID</varname>, <varname>setSRID</varname></link>: Return or set the spatial reference identifier</para>
					</listitem>

					<listitem>
						<para><link linkend="cbuffer_transform"><varname>transform</varname>, <varname>transformPipeline</varname></link>: Transform to a spatial reference identifier</para>
					</listitem>
				</itemizedlist>
			</sect3>

			<sect3>
				<title>Comparisons</title>
				<itemizedlist>
					<listitem>
						<para><link linkend="cbuffer_comp"><varname>=</varname>, <varname>&lt;&gt;</varname>, <varname>&lt;</varname>, <varname>&gt;</varname>, <varname>&lt;=</varname>, <varname>&gt;=</varname></link>: Traditional comparisons</para>
						</listitem>
				</itemizedlist>
			</sect3>
		</sect2>

		<sect2>
			<title>Temporal Circular Buffers</title>

			<sect3>
				<title>Input and Output</title>
				<itemizedlist>
					<listitem>
						<para><link linkend="tcbuffer_asText"><varname>asText</varname>, <varname>asEWKT</varname></link>: Return the Well-Known Text (WKT) or the Extended Well-Known Text (EWKT) representation</para>
					</listitem>
          
					<listitem>
						<para><link linkend="tcbuffer_asBinary"><varname>asBinary</varname>, <varname>asEWKB</varname></link>: Return the Well-Known Binary (WKB), the Extended Well-Known Binary (EWKB), or the Hexadecimal Extended Well-Known Binary (HexEWKB) representation as text</para>
					</listitem>
          
					<listitem>
						<para><link linkend="tcbufferFromText"><varname>tcbufferFromText</varname>, <varname>tcbufferFromEWKT</varname></link>: Input from the Well-Known Text (WKT) or from the Extended Well-Known Text (EWKT) representation</para>
					</listitem>
          
					<listitem>
						<para><link linkend="tcbufferFromBinary"><varname>tcbufferFromBinary</varname>, <varname>tcbufferFromEWKB</varname>, <varname>tcbufferFromHexEWKB</varname></link>: Input from the Well-Known Binary (WKB), from the Extended Well-Known Binary (EWKB), or from the Hexadecimal Extended Well-Known Binary (HexEWKB) representation</para>
					</listitem>
				</itemizedlist>
			</sect3>

			<sect3>
				<title>Constructors</title>
				<itemizedlist>
					<listitem>
						<para><link linkend="tcbuffer_const"><varname>tcbuffer</varname></link>: Constructor for temporal circular buffers having a constant value</para>
					</listitem>

					<listitem>
						<para><link linkend="tcbufferSeq"><varname>tcbufferSeq</varname></link>: Constructors for temporal circular buffers of sequence subtype</para>
					</listitem>

					<listitem>
						<para><link linkend="tcbufferSeqSet"><varname>tcbufferSeqSet</varname>, <varname>tcbufferSeqSetGaps</varname></link>: Constructor for temporal circular buffers of sequence set subtype</para>
					</listitem>

					<listitem>
						<para><link linkend="tgeompoint_tfloat_tcbuffer"><varname>tcbuffer</varname></link>: Construct a temporal circular buffer from a temporal geometry point and a temporal float</para>
					</listitem>
				</itemizedlist>
			</sect3>

			<sect3>
				<title>Conversions</title>
				<itemizedlist>
					<listitem>
						<para><link linkend="tcbuffer_tgeompoint"><varname>tcbuffer::tgeompoint</varname></link>: Convert a temporal circular buffer to a temporal geometry point</para>
					</listitem>
					<listitem>
						<para><link linkend="tcbuffer_tfloat"><varname>tcbuffer::tfloat</varname></link>: Convert a temporal circular buffer to a temporal float</para>
					</listitem>
				</itemizedlist>
			</sect3>

			<sect3>
				<title>Accessors</title>
				<itemizedlist>
					<listitem>
						<para><link linkend="tcbuffer_getValues"><varname>getValues</varname></link>: Return the values</para>
					</listitem>

					<listitem>
						<para><link linkend="tcbuffer_points"><varname>points</varname></link>: Return the points</para>
					</listitem>

					<listitem>
						<para><link linkend="tcbuffer_valueAtTimestamp"><varname>valueAtTimestamp</varname></link>: Return the value at a timestamp</para>
					</listitem>
				</itemizedlist>
			</sect3>

			<sect3>
				<title>Transformations</title>
				<itemizedlist>
					<listitem>
						<para><link linkend="tcbuffer_subtype"><varname>tcbufferInst</varname>, <varname>tcbufferSeq</varname>, <varname>tcbufferSeqSet</varname></link>: Transform a temporal circular buffer to another subtype</para>
					</listitem>

					<listitem>
						<para><link linkend="tcbuffer_setInterp"><varname>setInterp</varname></link>: Transform a temporal circular buffer to another interpolation</para>
					</listitem>

					<listitem>
						<para><link linkend="tcbuffer_round"><varname>round</varname></link>: Round the points and the radii of the temporal circular buffer to the number of decimal places</para>
					</listitem>
				</itemizedlist>
			</sect3>

			<sect3>
				<title>Restrictions</title>
				<itemizedlist>
					<listitem>
						<para><link linkend="tcbuffer_atValues"><varname>atValues</varname>, <varname>minusValue</varname></link>: Restrict to (the complement of) a set of values</para>
					</listitem>

					<listitem>
						<para><link linkend="tcbuffer_atGeometry"><varname>atGeometry</varname>, <varname>minusGeometry</varname></link>: Restrict to (the complement of) a geometry</para>
					</listitem>
				</itemizedlist>
			</sect3>

			<sect3>
				<title>Distance Operations</title>
				<itemizedlist>
					<listitem>
						<para><link linkend="tcbuffer_nearestApproachInstant"><varname>nearestApproachInstant</varname></link>: Return the instant of the first temporal circular buffer at which the two arguments are at the nearest distance</para>
					</listitem>

					<listitem>
						<para><link linkend="tcbuffer_nearestApproachDistance"><varname>nearestApproachDistance</varname></link>: Return the smallest distance ever between the two arguments</para>
					</listitem>

					<listitem>
						<para><link linkend="tcbuffer_shortestLine"><varname>shortestLine</varname></link>: Return the line connecting the nearest approach point between the two arguments</para>
					</listitem>

					<listitem>
						<para><link linkend="tcbuffer_smallestDistance"><varname>|=|</varname></link>: Return the smallest distance ever between the two arguments</para>
					</listitem>

					<listitem>
						<para><link linkend="tcbuffer_distance"><varname>&lt;-&gt;</varname></link>: Return the temporal distance</para>
					</listitem>
				</itemizedlist>
			</sect3>

			<sect3>
				<title>Spatial Operations</title>
				<itemizedlist>
					<listitem>
						<para><link linkend="tcbuffer_SRID"><varname>SRID</varname>, <varname>setSRID</varname></link>: Return or set the spatial reference identifier</para>
					</listitem>

					<listitem>
						<para><link linkend="tcbuffer_transform"><varname>transform</varname>, <varname>transformPipeline</varname></link>: Transform to a spatial reference identifier</para>
					</listitem>

					<listitem>
						<para><link linkend="tcbuffer_traversedArea"><varname>traversedArea</varname></link>: Return the area traversed by the temporal circular buffer</para>
					</listitem>
				</itemizedlist>
			</sect3>

			<sect3>
				<title>Bounding Box Operations</title>
				<itemizedlist>
					<listitem>
						<para><link linkend="tcbuffer_topo"><varname>&amp;&amp;, &lt;@, @&gt;, ~=, -|-</varname></link>: Topological operators</para>
					</listitem>
					<listitem>
						<para><link linkend="tcbuffer_pos"><varname>&lt;&lt;, &amp;&lt;, &gt;&gt;, &amp;&gt;, &lt;&lt;|, &amp;&lt;|, |&gt;&gt;, |&amp;&gt;, &lt;&lt;#, &amp;&lt;#, #&gt;&gt;, |&amp;&gt;</varname></link>: Position operators</para>
					</listitem>
				</itemizedlist>
			</sect3>

			<sect3>
				<title>Spatial Relationships</title>
				<itemizedlist>
					<listitem>
						<para><link linkend="tcbuffer_espatialrels"><varname>eContains, eDisjoint, eIntersects, eTouches, eDwithin</varname></link>: Possible spatial relationships</para>
					</listitem>

					<listitem>
						<para><link linkend="tcbuffer_tspatialrels"><varname>tContains, tDisjoint, tIntersects, tTouches, tDwithin</varname></link>: Spatiotemporal relationships</para>
					</listitem>
				</itemizedlist>
			</sect3>

			<sect3>
				<title>Comparisons</title>
				<itemizedlist>
					<listitem>
						<para><link linkend="tcbuffer_comp"><varname>=, &lt;&gt;, &lt;, &gt;, &lt;=, &gt;=</varname></link>: Traditional comparisons</para>
					</listitem>

					<listitem>
						<para><link linkend="tcbuffer_ever_always"><varname>?=, &amp;=</varname></link>: Ever and always comparisons</para>
					</listitem>

					<listitem>
						<para><link linkend="tcbuffer_tcomp"><varname>#=, #&lt;&gt;</varname></link>: Temporal comparisons</para>
					</listitem>
				</itemizedlist>
			</sect3>

			<sect3>
				<title>Aggregations</title>

				<itemizedlist>
					<listitem>
						<para><link linkend="tcbuffer_tCount"><varname>tCount</varname></link>: Temporal count</para>
					</listitem>

					<listitem>
						<para><link linkend="tcbuffer_wCount"><varname>wCount</varname></link>: Window count</para>
					</listitem>

					<listitem>
						<para><link linkend="tcbuffer_tCentroid"><varname>tCentroid</varname></link>: Temporal centroid</para>
					</listitem>
				</itemizedlist>
			</sect3>
		</sect2>
	</sect1>
</appendix>

