<?xml version="1.0" encoding="UTF-8"?>
<!--
   ****************************************************************************
    MobilityDB Manual
    Copyright(c) MobilityDB Contributors

    This documentation is licensed under a Creative Commons Attribution-Share
    Alike 3.0 License: https://creativecommons.org/licenses/by-sa/3.0/
   ****************************************************************************
-->
<appendix id ="reference">
	<title>MobilityDB Reference</title>

	<sect1>
		<title>MobilityDB Types</title>
		<para>MobilityDB defines four <emphasis>template types</emphasis> that act as type constructors over <emphasis>base types</emphasis>. These template types are <varname>set</varname>, <varname>span</varname>, <varname>spanset</varname>, and <varname>temporal</varname>. <xref linkend="templatetypes" /> shows the types defined over these template types. Furthermore, MobilityDB defines two bounding box types, namely, <varname>tbox</varname> and <varname>stbox</varname>.</para>

		<table frame="all" colsep="1" rowsep="1" id="templatetypes">
			<?dblatex table-width="autowidth.column: 1 2 3 4 5"?>
			<title>MobilityDB current instantiations of template types</title>
			<tgroup cols="5" align="left" colsep="1" rowsep="1">
			<colspec colnum="1" colname="col1"/>
			<colspec colnum="2" colname="col2"/>
			<colspec colnum="3" colname="col3"/>
			<colspec colnum="4" colname="col4"/>
			<colspec colnum="5" colname="col5"/>
			<thead>
				<row>
					<entry morerows="1"><emphasis role="bold">Base Types</emphasis></entry>
					<entry namest="col2" nameend="col5" align="center">Template Types</entry>
				</row>
				<row>
					<entry><emphasis role="bold"><varname>set</varname></emphasis></entry>
					<entry><emphasis role="bold"><varname>span</varname></emphasis></entry>
					<entry><emphasis role="bold"><varname>spanset</varname></emphasis></entry>
					<entry><emphasis role="bold"><varname>temporal</varname></emphasis></entry>
				</row>
			</thead>
			<tbody>
				<row>
					<entry><emphasis role="bold"><varname>bool</varname></emphasis></entry>
					<entry><varname></varname></entry>
					<entry><varname></varname></entry>
					<entry><varname></varname></entry>
					<entry><varname>tbool</varname></entry>
				</row>
				<row>
					<entry><emphasis role="bold"><varname>text</varname></emphasis></entry>
					<entry><varname>textset</varname></entry>
					<entry><varname></varname></entry>
					<entry><varname></varname></entry>
					<entry><varname>ttext</varname></entry>
				</row>
				<row>
					<entry><emphasis role="bold"><varname>int</varname></emphasis></entry>
					<entry><varname>intset</varname></entry>
					<entry><varname>intspan</varname></entry>
					<entry><varname>intspanset</varname></entry>
					<entry><varname>tint</varname></entry>
				</row>
				<row>
						<entry><emphasis role="bold"><varname>bigint</varname></emphasis></entry>
						<entry><varname>bigintset</varname></entry>
						<entry><varname>bigintspan</varname></entry>
						<entry><varname>bigintspanset</varname></entry>
						<entry><varname></varname></entry>
				</row>
				<row>
					<entry><emphasis role="bold"><varname>float</varname></emphasis></entry>
					<entry><varname>floatset</varname></entry>
					<entry><varname>floatspan</varname></entry>
					<entry><varname>floatspanset</varname></entry>
					<entry><varname>tfloat</varname></entry>
				</row>
				<row>
					<entry><emphasis role="bold"><varname>timestamptz</varname></emphasis></entry>
					<entry><varname>tstzset</varname></entry>
					<entry><varname>tstzspan</varname></entry>
					<entry><varname>tstzspanset</varname></entry>
					<entry><varname></varname></entry>
				</row>
				<row>
					<entry><emphasis role="bold"><varname>geometry</varname></emphasis></entry>
					<entry><varname>geomset</varname></entry>
					<entry><varname></varname></entry>
					<entry><varname></varname></entry>
					<entry><varname>tgeompoint</varname></entry>
				</row>
				<row>
					<entry><emphasis role="bold"><varname>geography</varname></emphasis></entry>
					<entry><varname>geogset</varname></entry>
					<entry><varname></varname></entry>
					<entry><varname></varname></entry>
					<entry><varname>tgeogpoint</varname></entry>
				</row>
				<row>
					<entry><emphasis role="bold"><varname>npoint</varname></emphasis></entry>
					<entry><varname>npointset</varname></entry>
					<entry><varname></varname></entry>
					<entry><varname></varname></entry>
					<entry><varname>tnpoint</varname></entry>
				</row>
			</tbody>
			</tgroup>
		</table>
	</sect1>

	<sect1>
		<title>Operations for Set and Span Types</title>

		<sect2>
			<title>Input and Output</title>
			<itemizedlist>
				<listitem>
					<para><link linkend="setspan_asBinary"><varname>asBinary</varname></link>: Get the Well-Known Binary (WKB) representation</para>
				</listitem>

				<listitem>
					<para><link linkend="setspan_asHexWKB"><varname>asHexWKB</varname></link>: Get the Hexadecimal Well-Known Binary (HexWKB) representation as text</para>
				</listitem>

				<listitem>
					<para><link linkend="setspan_FromBinary"><varname>settypeFromBinary</varname>, <varname>spantypeFromBinary</varname>, <varname>spansettypeFromBinary</varname></link>: Input from a Well-Known Binary (WKB) representation</para>
				</listitem>

				<listitem>
					<para><link linkend="setspan_FromHexWKB"><varname>settypeFromHexWKB</varname>, <varname>spantypeFromHexWKB</varname>, <varname>spansettypeFromHexWKB</varname></link>: Input from an Hexadecimal Well-Known Binary (HexWKB) representation</para>
				</listitem>
			</itemizedlist>
		</sect2>

		<sect2>
			<title>Constructors</title>
			<itemizedlist>
				<listitem>
					<para><link linkend="set"><varname>set</varname></link>: Constructor for set values</para>
				</listitem>

				<listitem>
					<para><link linkend="span"><varname>span</varname></link>: Constructor for span values</para>
				</listitem>

				<listitem>
					<para><link linkend="spanset"><varname>spanset</varname></link>: Constructor for span set values</para>
				</listitem>
			</itemizedlist>
		</sect2>

		<sect2>
			<title>Casting</title>
			<itemizedlist>
				<listitem>
					<para><link linkend="base_cast"><varname>::</varname>, <varname>set(base)</varname>, <varname>span(base)</varname>, <varname>spanset(base)</varname></link>: Cast a base value to a set, span, or span set value</para>
				</listitem>

				<listitem>
					<para><link linkend="set_cast"><varname>::</varname>, <varname>spanset(set)</varname></link>: Cast a set value to a span set value</para>
				</listitem>

				<listitem>
					<para><link linkend="span_cast"><varname>::</varname>, <varname>spanset(span)</varname></link>: Cast a span value to a span set value</para>
				</listitem>

				<listitem>
					<para><link linkend="range_cast"><varname>::</varname>, <varname>range(span)</varname>, <varname>span(range)</varname></link>: Cast a span value to and from a PostgreSQL range value</para>
				</listitem>

				<listitem>
					<para><link linkend="multirange_cast"><varname>::</varname>, <varname>multirange(spanset)</varname>, <varname>spanset(multirange)</varname></link>: Cast a span set value to and from a PostgreSQL multirange value</para>
				</listitem>
			</itemizedlist>
		</sect2>

		<sect2>
			<title>Accessors</title>
			<itemizedlist>
				<listitem>
					<para><link linkend="setspan_memSize"><varname>memSize</varname></link>: Get the memory size in bytes</para>
				</listitem>

				<listitem>
					<para><link linkend="lower"><varname>lower</varname>, <varname>upper</varname></link>: Get the lower/upper bound</para>
				</listitem>

				<listitem>
					<para><link linkend="lower_inc"><varname>lower_inc</varname>, <varname>upper_inc</varname></link>: Is the lower/upper bound inclusive?</para>
				</listitem>

				<listitem>
					<para><link linkend="width"><varname>width</varname></link>: Get the width of the span as a float</para>
				</listitem>

				<listitem>
					<para><link linkend="setspan_duration"><varname>duration</varname></link>: Get the duration</para>
				</listitem>

				<listitem>
					<para><link linkend="setspan_span"><varname>span</varname></link>: Get the bounding span of the set or span set ignoring the potential time gaps</para>
				</listitem>

				<listitem>
					<para><link linkend="setspan_numValues"><varname>numValues</varname></link>: Get the number of different values</para>
				</listitem>

				<listitem>
					<para><link linkend="setspan_startValue"><varname>startValue</varname>, <varname>endValue</varname>, <varname>valueN</varname></link>: Get the start, end, or n-th value</para>
				</listitem>

				<listitem>
					<para><link linkend="setspan_values"><varname>getValues</varname></link>: Get the values</para>
				</listitem>

				<listitem>
					<para><link linkend="numSpans"><varname>numSpans</varname></link>: Get the number of composing spans</para>
				</listitem>

				<listitem>
					<para><link linkend="startSpan"><varname>startSpan</varname>, <varname>endSpan</varname>, <varname>spanN</varname></link>: Get the start, end, or n-th span</para>
				</listitem>

				<listitem>
					<para><link linkend="spans"><varname>spans</varname></link>: Get the spans</para>
				</listitem>
			</itemizedlist>
		</sect2>

		<sect2>
			<title>Transformations</title>

			<itemizedlist>
				<listitem>
					<para><link linkend="setspan_shift"><varname>shift</varname></link>: Shift the time value by an interval</para>
				</listitem>

				<listitem>
					<para><link linkend="setspan_tscale"><varname>tscale</varname></link>: Scale the time value to an interval</para>
				</listitem>

				<listitem>
					<para><link linkend="setspan_shiftTscale"><varname>shiftTscale</varname></link>: Shift and scale the time value with the intervals</para>
				</listitem>

				<listitem>
					<para><link linkend="floatspan_round"><varname>round</varname></link>: Round the bounds of a float set or span to a number of decimal places</para>
				</listitem>
			</itemizedlist>
		</sect2>

		<sect2>
			<title>Comparisons</title>

			<itemizedlist>
				<listitem>
					<para><link linkend="setspan_eq"><varname>=</varname></link>: Are the values equal?</para>
				</listitem>

				<listitem>
					<para><link linkend="setspan_ne"><varname>&lt;&gt;</varname></link>: Are the values different?</para>
				</listitem>

				<listitem>
					<para><link linkend="setspan_lt"><varname>&lt;</varname></link>: Is the first value less than the second one?</para>
				</listitem>

				<listitem>
					<para><link linkend="setspan_gt"><varname>&gt;</varname></link>: Is the first value greater than the second one?</para>
				</listitem>

				<listitem>
					<para><link linkend="setspan_le"><varname>&lt;=</varname></link>: Is the first value less than or equal to the second one?</para>
				</listitem>

				<listitem>
					<para><link linkend="setspan_ge"><varname>&gt;=</varname></link>: Is the first value greater than or equal to the second one?</para>
				</listitem>
			</itemizedlist>
		</sect2>

		<sect2>
			<title>Set Operations</title>

			<itemizedlist>
				<listitem>
					<para><link linkend="setspan_union"><varname>+</varname></link>: Union of sets or spans</para>
				</listitem>

				<listitem>
					<para><link linkend="setspan_difference"><varname>-</varname></link>: Difference of sets or spans</para>
				</listitem>

				<listitem>
					<para><link linkend="setspan_intersection"><varname>*</varname></link>: Intersection of sets or spans</para>
				</listitem>
			</itemizedlist>
		</sect2>

		<sect2>
			<title>Topological and Relative Position Operations</title>

			<itemizedlist>
				<listitem>
					<para><link linkend="setspan_overlaps"><varname>&amp;&amp;</varname></link>: Do the sets or spans overlap (have values in common)?</para>
				</listitem>

				<listitem>
					<para><link linkend="setspan_contains"><varname>@&gt;</varname></link>: Does the first set or span contain the second one?</para>
				</listitem>

				<listitem>
					<para><link linkend="setspan_containedby"><varname>&lt;@</varname></link>: Is the first set or span contained by the second one?</para>
				</listitem>

				<listitem>
					<para><link linkend="setspan_adjacent"><varname>-|-</varname></link>: Is the first set or span adjacent to the second one?</para>
				</listitem>

				<listitem>
					<para><link linkend="setspan_left"><varname>&lt;&lt;</varname>, <varname>&lt;&lt;#</varname></link>: Is the first set or span scritly to the left of the second one?</para>
				</listitem>

				<listitem>
					<para><link linkend="setspan_right"><varname>&gt;&gt;</varname>, <varname>#&gt;&gt;</varname></link>: Is the first set or span strictly to the right of the second one?</para>
				</listitem>

				<listitem>
					<para><link linkend="setspan_overleft"><varname>&amp;&lt;</varname>, <varname>&amp;&lt;#</varname></link>: Is the first set or span not to the right of the second one?</para>
				</listitem>

				<listitem>
					<para><link linkend="setspan_overright"><varname>&amp;&gt;</varname>, <varname>#&amp;&gt;</varname></link>: Is the first set or span not to the left of the second one?</para>
				</listitem>
			</itemizedlist>
		</sect2>

		<sect2>
			<title>Distance Operations</title>

			<itemizedlist>
				<listitem>
					<para><link linkend="smallest_distance_time"><varname>&lt;-&gt;</varname></link>: Get the smallest distance ever</para>
				</listitem>
			</itemizedlist>
		</sect2>

		<sect2>
			<title>Aggregations</title>

			<itemizedlist>
				<listitem>
					<para><link linkend="setspan_tcount"><varname>tcount</varname></link>: Temporal count</para>
				</listitem>

				<listitem>
					<para><link linkend="setspan_extent"><varname>extent</varname></link>: Bounding span</para>
				</listitem>

				<listitem>
					<para><link linkend="setspan_union_agg"><varname>set_union</varname>, <varname>span_union</varname></link>: Aggregate union</para>
				</listitem>
			</itemizedlist>
		</sect2>
	</sect1>

	<sect1>
		<title>Operations for Box Types</title>

		<sect2>
			<title>Input and Output</title>
			<itemizedlist>
				<listitem>
					<para><link linkend="box_asBinary"><varname>asBinary</varname></link>: Get the Well-Known Binary (WKB) representation</para>
				</listitem>

				<listitem>
					<para><link linkend="box_asHexWKB"><varname>asHexWKB</varname></link>: Get the Hexadecimal Well-Known Binary (HexWKB) representation as text</para>
				</listitem>

				<listitem>
					<para><link linkend="box_FromBinary"><varname>tboxFromBinary</varname>, <varname>stboxFromBinary</varname></link>: Input from a Well-Known Binary (WKB) representation</para>
				</listitem>

				<listitem>
					<para><link linkend="box_FromHexWKB"><varname>tboxFromHexWKB</varname>, <varname>stboxFromHexWKB</varname></link>: Input from an Hexadecimal Well-Known Binary (HexWKB) representation</para>
				</listitem>
			</itemizedlist>
		</sect2>

		<sect2>
			<title>Constructors</title>
			<itemizedlist>
				<listitem>
					<para><link linkend="tbox"><varname>tbox</varname></link>: Constructor for <varname>tbox</varname></para>
				</listitem>

				<listitem>
					<para><link linkend="stbox"><varname>stbox, stbox_z, stbox_t, stbox_zt, geodstbox_z, geodstbox_t, geodstbox_zt</varname></link>: Constructor for <varname>stbox</varname></para>
				</listitem>
			</itemizedlist>
		</sect2>

		<sect2>
			<title>Casting</title>

			<itemizedlist>
				<listitem>
					<para><link linkend="tbox_cast_to"><varname>tbox::type</varname></link>: Cast a <varname>tbox</varname> to another type</para>
				</listitem>

				<listitem>
					<para><link linkend="tbox_cast_from"><varname>type::tbox</varname></link>: Cast another type to a <varname>tbox</varname></para>
				</listitem>

				<listitem>
					<para><link linkend="stbox_cast_to"><varname>stbox::type</varname></link>: Cast an <varname>stbox</varname> to another type</para>
				</listitem>

				<listitem>
					<para><link linkend="stbox_cast_from"><varname>type::stbox</varname></link>: Cast another type to an <varname>stbox</varname></para>
				</listitem>
			</itemizedlist>
		</sect2>

		<sect2>
			<title>Accessors</title>

			<itemizedlist>
				<listitem>
					<para><link linkend="hasX"><varname>hasX</varname>, <varname>hasZ</varname>, <varname>hasT</varname></link>: Has X/Z/T dimension?</para>
				</listitem>

				<listitem>
					<para><link linkend="isGeodetic"><varname>isGeodetic</varname></link>: Is geodetic?</para>
				</listitem>

				<listitem>
					<para><link linkend="Xmin"><varname>Xmin</varname>, <varname>Ymin</varname>, <varname>Zmin</varname>, <varname>Tmin</varname></link>: Get the minimum X/Y/Z/T value</para>
				</listitem>

				<listitem>
					<para><link linkend="Xmax"><varname>Xmax</varname>, <varname>Ymax</varname>, <varname>Zmax</varname>, <varname>Tmax</varname></link>: Get the maximum X/Y/Z/T value</para>
				</listitem>
			</itemizedlist>
		</sect2>

		<sect2>
			<title>Transformations</title>
			<itemizedlist>
				<listitem>
					<para><link linkend="getSpace"><varname>getSpace</varname></link>: Get the spatial dimension of the bounding box, removing the temporal dimension if any</para>
					</listitem>

				<listitem>
					<para><link linkend="expandValue"><varname>expandValue</varname></link>: Expand the numeric dimension of the bounding box by a float value</para>
					</listitem>

				<listitem>
					<para><link linkend="expandSpace"><varname>expandSpace</varname></link>: Expand the spatial dimension of the bounding box by a float value</para>
					</listitem>

				<listitem>
					<para><link linkend="expandTime"><varname>expandTime</varname></link>: Expand the temporal dimension of the bounding box by a time interval</para>
				</listitem>

				<listitem>
					<para><link linkend="box_round"><varname>round</varname></link>: Round the value or the coordinates of the bounding box to a number of decimal places</para>
				</listitem>

			</itemizedlist>
		</sect2>

		<sect2>
			<title>Spatial Reference System</title>

			<itemizedlist>
				<listitem>
					<para><link linkend="stbox_SRID"><varname>SRID</varname></link>: Get the spatial reference identifier</para>
				</listitem>

				<listitem>
					<para><link linkend="stbox_setSRID"><varname>setSRID</varname></link>: Set the spatial reference identifier</para>
					</listitem>

				<listitem>
					<para><link linkend="stbox_transform"><varname>transform</varname></link>: Transform to a different spatial reference</para>
				</listitem>
			</itemizedlist>
		</sect2>

		<sect2>
			<title>Aggregations</title>

			<itemizedlist>
				<listitem>
					<para><link linkend="box_extent"><varname>extent</varname></link>: Bounding box extent</para>
				</listitem>
			</itemizedlist>
		</sect2>

		<sect2>
			<title>Comparisons</title>
			<itemizedlist>
				<listitem>
				<para><link linkend="box_eq"><varname>=</varname></link>: Are the bounding boxes equal?</para>
				</listitem>

				<listitem>
					<para><link linkend="box_ne"><varname>&lt;&gt;</varname></link>: Are the bounding boxes different?</para>
				</listitem>

				<listitem>
					<para><link linkend="box_lt"><varname>&lt;</varname></link>: Is the first bounding box less than the second one?</para>
				</listitem>

				<listitem>
					<para><link linkend="box_gt"><varname>&gt;</varname></link>: Is the first bounding box greater than the second one?</para>
				</listitem>

				<listitem>
					<para><link linkend="box_le"><varname>&lt;=</varname></link>: Is the first bounding box less than or equal to the second one?</para>
				</listitem>

				<listitem>
					<para><link linkend="box_ge"><varname>&gt;=</varname></link>: Is the first bounding box greater than or equal to the second one?</para>
				</listitem>
			</itemizedlist>
		</sect2>

		<sect2>
			<title>Set Operations</title>
			<itemizedlist>
				<listitem>
					<para><link linkend="box_union"><varname>+</varname></link>: Union of bounding boxes</para>
				</listitem>

				<listitem>
					<para><link linkend="box_intersection"><varname>*</varname></link>: Intersection of bounding boxes</para>
				</listitem>
			</itemizedlist>
		</sect2>

		<sect2>
			<title>Topological and Relative Position Operations</title>
			<itemizedlist>
				<listitem>
					<para><link linkend="box_overlap"><varname>&amp;&amp;</varname></link>: Do the bounding boxes overlap?</para>
				</listitem>

				<listitem>
					<para><link linkend="box_contains"><varname>@&gt;</varname></link>: Does the first bounding box contain the second one?</para>
				</listitem>

				<listitem>
					<para><link linkend="box_containedby"><varname>&lt;@</varname></link>: Is the first bounding box contained in the second one?</para>
				</listitem>

				<listitem>
					<para><link linkend="box_same"><varname>~=</varname></link>: Are the bounding boxes equal in their common dimensions?</para>
				</listitem>

				<listitem>
					<para><link linkend="box_adjacent"><varname>-|-</varname></link>: Are the bounding boxes adjacent?</para>
				</listitem>

				<listitem>
					<para><link linkend="tbox_left"><varname>&lt;&lt;</varname>, <varname>&lt;&lt;|</varname>, <varname>&lt;&lt;/</varname>, <varname>&lt;&lt;#</varname></link>: Are the X/Y/Z/T values of the first bounding box strictly less than those of the second one?</para>
				</listitem>

				<listitem>
					<para><link linkend="tbox_right"><varname>&gt;&gt;</varname>,<varname>|&gt;&gt;</varname>, <varname>/&gt;&gt;</varname>, <varname>#&gt;&gt;</varname></link>: Are the X/Y/Z/T values of the first bounding box strictly greater than those of the second one?</para>
				</listitem>

				<listitem>
					<para><link linkend="tbox_overleft"><varname>&amp;&lt;</varname>, <varname>&amp;&lt;|</varname>, <varname>&amp;&lt;/</varname>, <varname>&amp;&lt;#</varname></link>: Are the X/Y/Z/T values of the first bounding box not greater than those of the second one?</para>
				</listitem>

				<listitem>
					<para><link linkend="tbox_overright"><varname>&amp;&gt;</varname>, <varname>|&amp;&gt;</varname>, <varname>/&amp;&gt;</varname>, <varname>#&amp;&gt;</varname></link>: Are the X/Y/Z/T values of the first bounding box not less than those of the second one?</para>
				</listitem>
			</itemizedlist>
		</sect2>
	</sect1>

	<sect1>
		<title>Operations for Temporal Types: Generic Operations</title>

		<sect2>
			<title>Input and Output</title>
			<itemizedlist>
				<listitem>
					<para><link linkend="temporal_asMFJSON"><varname>asMFJSON</varname></link>: Get the Moving Features JSON (MF-JSON) representation</para>
				</listitem>

				<listitem>
					<para><link linkend="temporal_asBinary"><varname>asBinary</varname></link>: Get the Well-Known Binary (WKB) representation</para>
				</listitem>

				<listitem>
					<para><link linkend="temporal_asHexWKB"><varname>asHexWKB</varname></link>: Get the Hexadecimal Well-Known Binary (HexWKB) representation as text</para>
				</listitem>

				<listitem>
					<para><link linkend="temporal_FromMFJSON"><varname>ttypeFromMFJSON</varname></link>: Input from a Moving Features JSON (MF-JSON) representation</para>
				</listitem>

				<listitem>
					<para><link linkend="temporal_FromBinary"><varname>ttypeFromBinary</varname></link>: Input from a Well-Known Binary (WKB) representation</para>
				</listitem>

				<listitem>
					<para><link linkend="temporal_FromHexWKB"><varname>ttypeFromHexWKB</varname></link>: Input from an Hexadecimal Well-Known Binary (HexWKB) representation</para>
				</listitem>
			</itemizedlist>
		</sect2>

		<sect2>
			<title>Constructors</title>
			<itemizedlist>
				<listitem>
					<para><link linkend="set"><varname>set</varname></link>: Constructor for set values</para>
				</listitem>

				<listitem>
					<para><link linkend="span"><varname>span</varname></link>: Constructor for span values</para>
				</listitem>

				<listitem>
					<para><link linkend="spanset"><varname>spanset</varname></link>: Constructor for span set values</para>
				</listitem>
			</itemizedlist>
		</sect2>


		<sect2>
			<title>Constructors</title>
			<itemizedlist>
				<listitem>
					<para><link linkend="ttype_const"><varname>ttype</varname></link>: Constructor for temporal types from a base value and a time value</para>
				</listitem>

				<listitem>
					<para><link linkend="ttype_seq"><varname>ttype_discseq</varname></link>: Constructor for temporal types of sequence subtype</para>
				</listitem>

				<listitem>
					<para><link linkend="ttype_seqset"><varname>ttype_seqset</varname>, <varname>ttype_seqset_gaps</varname></link>: Constructor for temporal types of sequence set subtype</para>
				</listitem>
			</itemizedlist>
		</sect2>

		<sect2>
			<title>Casting</title>

			<itemizedlist>
				<listitem>
					<para><link linkend="ttype_bbox"><varname>ttype::tstzspan</varname>, <varname>tnumber::{numspan,tbox}</varname>, <varname>tpoint::stbox</varname></link>: Cast a temporal value to a bounding box</para>
				</listitem>

				<listitem>
					<para><link linkend="tint_tfloat"><varname>tint::tfloat</varname>, <varname>tfloat::tint</varname></link>: Cast between a temporal integer and a temporal float</para>
				</listitem>

				<listitem>
					<para><link linkend="tgeompoint_tgeogpoint"><varname>tgeompoint::tgeogpoint</varname>, <varname>tgeogpoint::tgeompoint</varname></link>: Cast between a temporal geometry point and a temporal geography point</para>
				</listitem>


				<listitem>
					<para><link linkend="tgeompoint_geometry"><varname>tgeompoint::geometry, tgeogpoint::geography</varname>, <varname>geometry::tgeompoint, geography::tgeogpoint</varname></link>: Cast between a temporal point and a PostGIS trajectory</para>
				</listitem>
			</itemizedlist>
		</sect2>

		<sect2>
			<title>Accessors</title>
			<itemizedlist>
				<listitem>
				<para><link linkend="ttype_memSize"><varname>memSize</varname></link>: Get the memory size in bytes</para>
				</listitem>

				<listitem>
					<para><link linkend="tempSubtype"><varname>tempSubtype</varname></link>: Get the temporal subtype</para>
				</listitem>

				<listitem>
					<para><link linkend="interp"><varname>interp</varname></link>: Get the interpolation</para>
				</listitem>

				<listitem>
					<para><link linkend="getValue"><varname>getValue</varname>, <varname>getTimestamp</varname></link>: Get the value or the timestamp of an instant</para>
				</listitem>

				<listitem>
					<para><link linkend="getValues"><varname>getValues</varname>, <varname>getTime</varname></link>: Get the values or the time on which the temporal value is defined</para>
				</listitem>

				<listitem>
					<para><link linkend="valueSpan"><varname>valueSpan</varname>, <varname>timeSpan</varname></link>: Get the value or time span</para>
				</listitem>

				<listitem>
					<para><link linkend="valueSet"><varname>valueSet</varname></link>: Get the values of the temporal number as a set</para>
				</listitem>

				<listitem>
					<para><link linkend="startValue"><varname>startValue</varname>, <varname>endValue</varname></link>: Get the start or end value</para>
				</listitem>

				<listitem>
					<para><link linkend="minValue"><varname>minValue</varname>, <varname>maxValue</varname></link>: Get the minimum or maximum value</para>
				</listitem>

				<listitem>
					<para><link linkend="minInstant"><varname>minInstant</varname>, <varname>maxInstant</varname></link>: Get the instant with the minimum or maximum value</para>
				</listitem>

				<listitem>
					<para><link linkend="valueAtTimestamp"><varname>valueAtTimestamp</varname></link>: Get the value at a timestamp</para>
				</listitem>

				<listitem>
					<para><link linkend="ttype_duration"><varname>duration</varname></link>: Get the duration</para>
				</listitem>

				<listitem>
					<para><link linkend="numInstants"><varname>numInstants</varname></link>: Get the number of different instants</para>
				</listitem>

				<listitem>
					<para><link linkend="startInstant"><varname>startInstant</varname>, <varname>endInstant</varname>, <varname>instantN</varname></link>: Get the start, end, or n-th instant</para>
				</listitem>

				<listitem>
					<para><link linkend="instants"><varname>instants</varname></link>: Get the different instants</para>
				</listitem>

				<listitem>
					<para><link linkend="ttype_numTimestamps"><varname>numTimestamps</varname></link>: Get the number of different timestamps</para>
				</listitem>

				<listitem>
					<para><link linkend="ttype_startTimestamp"><varname>startTimestamp</varname>, <varname>endTimestamp</varname>, <varname>timestampN</varname></link>: Get the start, end, or n-th timestamp</para>
				</listitem>

				<listitem>
					<para><link linkend="ttype_timestamps"><varname>timestamps</varname></link>: Get the different timestamps</para>
				</listitem>

				<listitem>
					<para><link linkend="numSequences"><varname>numSequences</varname></link>: Get the number of sequences</para>
				</listitem>

				<listitem>
					<para><link linkend="startSequence"><varname>startSequence</varname>, <varname>endSequence</varname>, <varname>sequenceN</varname></link>: Get the start, end, or n-th sequence</para>
				</listitem>

				<listitem>
					<para><link linkend="sequences"><varname>sequences</varname></link>: Get the sequences</para>
				</listitem>

				<listitem>
					<para><link linkend="segments"><varname>segments</varname></link>: Get the segments</para>
				</listitem>

				<listitem>
					<para><link linkend="integral"><varname>integral</varname></link>: Get the area under the curve</para>
				</listitem>

				<listitem>
					<para><link linkend="twAvg"><varname>twAvg</varname></link>: Get the time-weighted average</para>
				</listitem>
			</itemizedlist>
		</sect2>

		<sect2>
			<title>Transformations</title>

			<itemizedlist>
				<listitem>
				<para><link linkend="ttype_subtype"><varname>ttype_inst, ttype_seq, ttype_seqset</varname></link>: Transform a temporal value to another subtype</para>
				</listitem>

				<listitem>
					<para><link linkend="setInterp"><varname>setInterp</varname></link>: Transform a temporal value to another interpolation</para>
				</listitem>

				<listitem>
					<para><link linkend="shift"><varname>shift</varname></link>: Shift the time span of the temporal value by an interval</para>
				</listitem>

				<listitem>
					<para><link linkend="tscale"><varname>tscale</varname></link>: Scale the time span of the temporal value to an interval</para>
				</listitem>

				<listitem>
					<para><link linkend="shiftTscale"><varname>shiftTscale</varname></link>: Shift and scale the time span the temporal value with the intervals</para>
				</listitem>

				<listitem>
					<para><link linkend="stops"><varname>stops</varname></link>: Extract from a temporal sequence (set) with linear interpolation the subsequences where the objects stays within an area with a given maximum size for at least the specified duration.</para>
				</listitem>

				<listitem>
					<para><link linkend="unnest"><varname>unnest</varname></link>: Transform a nonlinear temporal value into a set of rows, each one containing a base value and a period set during which the temporal value has the base value</para>
				</listitem>
			</itemizedlist>
		</sect2>

		<sect2>
			<title>Modifications</title>

			<itemizedlist>
				<listitem>
				<para><link linkend="insert"><varname>insert</varname></link>: Insert a temporal value into another one</para>
				</listitem>

				<listitem>
				<para><link linkend="update"><varname>update</varname></link>: Update a temporal value with another one</para>
				</listitem>

				<listitem>
					<para><link linkend="deleteTime"><varname>deleteTime</varname></link>: Delete the instants of a temporal value that intersect a time value</para>
				</listitem>

				<listitem>
				<para><link linkend="appendInstant"><varname>appendInstant</varname></link>: Append a temporal instant to a temporal value</para>
				</listitem>

				<listitem>
				<para><link linkend="appendSequence"><varname>appendSequence</varname></link>: Append a temporal sequence to a temporal value</para>
				</listitem>

				<listitem>
				<para><link linkend="merge"><varname>merge</varname></link>: Merge temporal values</para>
				</listitem>

			</itemizedlist>
		</sect2>

		<sect2>
			<title>Restrictions</title>

			<itemizedlist>

			<listitem>
					<para><link linkend="atValues"><varname>atValues</varname>, <varname>minusValues</varname></link>: Restrict to (the complement of) a set of values</para>
				</listitem>

				<listitem>
					<para><link linkend="atMin"><varname>atMin</varname>, <varname>minusMin</varname></link>: Restrict to (the complement of) the minimum value</para>
				</listitem>

				<listitem>
					<para><link linkend="atMax"><varname>atMax</varname>, <varname>minusMax</varname></link>: Restrict to (the complement of) the maximum value</para>
				</listitem>

				<listitem>
					<para><link linkend="atGeometry"><varname>atGeometry</varname>, <varname>minusGeometry</varname></link>: Restrict to (the complement of) a geometry</para>
				</listitem>

				<listitem>
					<para><link linkend="atTime"><varname>atTime</varname>, <varname>minusTime</varname></link>: Restrict to (the complement of) a time value</para>
				</listitem>

				<listitem>
					<para><link linkend="atTbox"><varname>atTbox</varname>, <varname>minusTbox</varname></link>: Restrict to (the complement of) a <varname>tbox</varname></para>
				</listitem>

				<listitem>
					<para><link linkend="atStbox"><varname>atStbox</varname>, <varname>minusStbox</varname></link>: Restrict to (the complement of) an <varname>stbox</varname></para>
				</listitem>
			</itemizedlist>
		</sect2>

		<sect2>
			<title>Comparisons</title>

			<sect3>
				<title>Traditional Comparisons</title>

				<itemizedlist>
					<listitem>
					<para><link linkend="ttype_eq"><varname>=</varname></link>: Are the temporal values equal?</para>
					</listitem>

					<listitem>
						<para><link linkend="ttype_ne"><varname>&lt;&gt;</varname></link>: Are the temporal values different?</para>
					</listitem>

					<listitem>
						<para><link linkend="ttype_lt"><varname>&lt;</varname></link>: Is the first temporal value less than the second one?</para>
					</listitem>

					<listitem>
						<para><link linkend="ttype_gt"><varname>&gt;</varname></link>: Is the first temporal value greater than the second one?</para>
					</listitem>

					<listitem>
						<para><link linkend="ttype_le"><varname>&lt;=</varname></link>: Is the first temporal value less than or equal to the second one?</para>
					</listitem>

					<listitem>
						<para><link linkend="ttype_ge"><varname>&gt;=</varname></link>: Is the first temporal value greater than or equal to the second one?</para>
					</listitem>
				</itemizedlist>
			</sect3>

			<sect3>
				<title>Ever and Always Comparisons</title>

				<itemizedlist>
					<listitem>
						<para><link linkend="ttype_eveq"><varname>?=</varname>, <varname>%=</varname></link>: Is the temporal value ever/always equal to the value?</para>
					</listitem>

					<listitem>
						<para><link linkend="ttype_evne"><varname>?&lt;&gt;</varname>, <varname>%&lt;&gt;</varname></link>: Is the temporal value ever/always different from the value?</para>
					</listitem>

					<listitem>
						<para><link linkend="ttype_evlt"><varname>?&lt;</varname>, <varname>%&lt;</varname></link>: Is the temporal value ever/always less than the value?</para>
					</listitem>

					<listitem>
						<para><link linkend="ttype_evgt"><varname>?&gt;</varname>, <varname>%&gt;</varname></link>: Is the temporal value ever/always greater than the value?</para>
					</listitem>

					<listitem>
						<para><link linkend="ttype_evle"><varname>?&lt;=</varname>, <varname>%&lt;=</varname></link>: Is the temporal value ever/always less than or equal to the value?</para>
					</listitem>

					<listitem>
						<para><link linkend="ttype_evge"><varname>?&gt;=</varname>, <varname>%&gt;=</varname></link>: Is the temporal value ever/always greater than or equal to the value?</para>
					</listitem>
				</itemizedlist>
			</sect3>

			<sect3>
				<title>Temporal Comparisons</title>

				<itemizedlist>
					<listitem>
						<para><link linkend="ttype_teq"><varname>#=</varname></link>: Temporal equal</para>
					</listitem>

					<listitem>
						<para><link linkend="ttype_tne"><varname>#&lt;&gt;</varname></link>: Temporal different</para>
					</listitem>

					<listitem>
						<para><link linkend="ttype_tlt"><varname>#&lt;</varname></link>: Temporal less than</para>
					</listitem>

					<listitem>
						<para><link linkend="ttype_tgt"><varname>#&gt;</varname></link>: Temporal greater than</para>
					</listitem>

					<listitem>
						<para><link linkend="ttype_tle"><varname>#&lt;=</varname></link>: Temporal less than or equal to</para>
					</listitem>

					<listitem>
						<para><link linkend="ttype_tge"><varname>#&gt;=</varname></link>: Temporal greater than or equal to</para>
					</listitem>
				</itemizedlist>
			</sect3>
		</sect2>
	</sect1>

	<sect1>
		<title>Temporal Types: Alphanumeric Operations</title>

		<sect2>
			<title>Mathematical Operations</title>

			<itemizedlist>
				<listitem>
					<para><link linkend="tnumber_add"><varname>+</varname></link>: Temporal addition</para>
				</listitem>

				<listitem>
					<para><link linkend="tnumber_sub"><varname>-</varname></link>: Temporal subtraction</para>
				</listitem>

				<listitem>
					<para><link linkend="tnumber_mult"><varname>*</varname></link>: Temporal multiplication</para>
				</listitem>

				<listitem>
					<para><link linkend="tnumber_div"><varname>/</varname></link>: Temporal division</para>
				</listitem>

				<listitem>
					<para><link linkend="abs"><varname>abs</varname></link>: Get the absolute value of the temporal number</para>
				</listitem>

				<listitem>
					<para><link linkend="deltaValue"><varname>deltaValue</varname></link>: Get the value difference between consecutive instants of the temporal number</para>
				</listitem>

				<listitem>
					<para><link linkend="round"><varname>round</varname></link>: Round the values to a number of decimal places</para>
				</listitem>

				<listitem>
					<para><link linkend="degrees"><varname>degrees</varname>, <varname>radians</varname></link>: Convert between radians and degrees</para>
				</listitem>

				<listitem>
					<para><link linkend="derivative"><varname>derivative</varname></link>: Get the derivative over time of the temporal float in units per second</para>
				</listitem>
			</itemizedlist>
		</sect2>

		<sect2>
			<title>Boolean Operations</title>
			<itemizedlist>
				<listitem>
					<para><link linkend="tbool_and"><varname>&amp;</varname></link>: Temporal and</para>
				</listitem>

				<listitem>
					<para><link linkend="tbool_or"><varname>|</varname></link>: Temporal or</para>
				</listitem>

				<listitem>
					<para><link linkend="tbool_not"><varname>~</varname></link>: Temporal not</para>
				</listitem>

				<listitem>
					<para><link linkend="whenTrue"><varname>whenTrue</varname></link>: Get the time when the temporal Boolean takes the value true</para>
				</listitem>
			</itemizedlist>
		</sect2>

		<sect2>
			<title>Text Operations</title>

			<itemizedlist>
				<listitem>
					<para><link linkend="ttext_concat"><varname>||</varname></link>: Temporal text concatenation</para>
				</listitem>

				<listitem>
					<para><link linkend="ttext_lower"><varname>lower</varname>, <varname>upper</varname></link>: Transform between lowercase and uppercase</para>
				</listitem>
			</itemizedlist>
		</sect2>

	</sect1>

	<sect1>
		<title>Temporal Types: Spatial Operations</title>

		<sect2>
			<title>Input and Output</title>

			<itemizedlist>
				<listitem>
					<para><link linkend="asText"><varname>asText</varname></link>: Get the Well-Known Text (WKT) representation</para>
				</listitem>

				<listitem>
					<para><link linkend="asEWKT"><varname>asEWKT</varname></link>: Get the Extended Well-Known Text (EWKT) representation</para>
				</listitem>

				<listitem>
					<para><link linkend="asMFJSON"><varname>asMFJSON</varname></link>: Get the Moving Features JSON representation</para>
				</listitem>

				<listitem>
					<para><link linkend="asBinary"><varname>asBinary</varname></link>: Get the Well-Known Binary (WKB) representation</para>
				</listitem>

				<listitem>
					<para><link linkend="asEWKB"><varname>asEWKB</varname></link>: Get the Extended Well-Known Binary (EWKB) representation</para>
				</listitem>

				<listitem>
					<para><link linkend="asHexEWKB"><varname>asHexEWKB</varname></link>: Get the Hexadecimal Extended Well-Known Binary (EWKB) representation as text </para>
				</listitem>

				<listitem>
					<para><link linkend="tgeompointFromText"><varname>tgeompointFromText</varname>, <varname>tgeogpointFromText</varname></link>: Input a temporal geometry/geography point from a Well-Known Text (WKT) representation</para>
				</listitem>

				<listitem>
					<para><link linkend="tgeompointFromEWKT"><varname>tgeompointFromEWKT</varname>, <varname>tgeogpointFromEWKT</varname></link>: Input a temporal geometry/geography point from an Extended Well-Known Text (EWKT) representation</para>
				</listitem>

				<listitem>
					<para><link linkend="tgeompointFromMFJSON"><varname>tgeompointFromMFJSON</varname>, <varname>tgeogpointFromMFJSON</varname></link>: Input a temporal geometry/geography point from a Moving Features JSON representation</para>
				</listitem>

				<listitem>
					<para><link linkend="tgeompointFromBinary"><varname>tgeompointFromBinary</varname>, <varname>tgeogpointFromBinary</varname></link>: Input a temporal geometry/geography point from a Well-Known Binary (WKB) representation</para>
				</listitem>

				<listitem>
					<para><link linkend="tgeompointFromEWKB"><varname>tgeompointFromEWKB</varname>, <varname>tgeogpointFromEWKB</varname></link>: Input a temporal geometry/geography point from an Extended Well-Known Binary (EWKB) representation</para>
				</listitem>

				<listitem>
					<para><link linkend="tgeompointFromHexEWKB"><varname>tgeompointFromHexEWKB</varname>, <varname>tgeogpointFromHexEWKB</varname></link>: Input a temporal geometry/geography point from an Hexadecimal Extended Well-Known Binary (EWKB) representation as text </para>
				</listitem>
			</itemizedlist>
		</sect2>

		<sect2>
			<title>Spatial Reference System</title>

			<itemizedlist>
				<listitem>
					<para><link linkend="tpoint_SRID"><varname>SRID</varname></link>: Get the spatial reference identifier</para>
				</listitem>

				<listitem>
					<para><link linkend="tpoint_setSRID"><varname>setSRID</varname></link>: Set the spatial reference identifier</para>
					</listitem>

				<listitem>
					<para><link linkend="tpoint_transform"><varname>transform</varname></link>: Transform to a different spatial reference</para>
				</listitem>
			</itemizedlist>
		</sect2>

		<sect2>
			<title>Bounding Box Operations</title>
			<itemizedlist>
				<listitem>
					<para><link linkend="tpoint_expandSpace"><varname>expandSpace</varname></link>: Get the spatiotemporal bounding box expanded in the spatial dimension by a float value</para>
				</listitem>
			</itemizedlist>
		</sect2>

		<sect2>
			<title>Accessors</title>

			<itemizedlist>
				<listitem>
					<para><link linkend="trajectory"><varname>trajectory</varname></link>: Get the trajectory</para>
				</listitem>

				<listitem>
					<para><link linkend="getX"><varname>getX</varname>, <varname>getY</varname>, <varname>getZ</varname></link>: Get the X/Y/Z/T coordinate values as a temporal float</para>
				</listitem>

				<listitem>
					<para><link linkend="length"><varname>length</varname></link>: Get the length traversed by the temporal point</para>
				</listitem>

				<listitem>
					<para><link linkend="isSimple"><varname>isSimple</varname></link>: Return true if the temporal point does not spatially self-intersect</para>
				</listitem>

				<listitem>
					<para><link linkend="cumulativeLength"><varname>cumulativeLength</varname></link>: Get the cumulative length traversed by the temporal point</para>
				</listitem>

				<listitem>
					<para><link linkend="speed"><varname>speed</varname></link>: Get the speed of the temporal point in units per second</para>
				</listitem>

				<listitem>
					<para><link linkend="twCentroid"><varname>twCentroid</varname></link>: Get the time-weighted centroid</para>
				</listitem>

				<listitem>
					<para><link linkend="direction"><varname>direction</varname></link>: Get the direction</para>
				</listitem>

				<listitem>
					<para><link linkend="azimuth"><varname>azimuth</varname></link>: Get the temporal azimuth</para>
				</listitem>

				<listitem>
					<para><link linkend="angularDifference"><varname>angularDifference</varname></link>: Get the temporal angular difference</para>
				</listitem>

				<listitem>
					<para><link linkend="bearing"><varname>bearing</varname></link>: Get the temporal bearing</para>
				</listitem>
			</itemizedlist>
		</sect2>

		<sect2>
			<title>Tranformations</title>
			<itemizedlist>
				<listitem>
					<para><link linkend="tpoint_round"><varname>round</varname></link>: Round the coordinate values to a number of decimal places</para>
				</listitem>

				<listitem>
					<para><link linkend="makeSimple"><varname>makeSimple</varname></link>:  Return an array of fragments of the temporal point which are simple</para>
				</listitem>

				<listitem>
					<para><link linkend="geoMeasure"><varname>geoMeasure</varname></link>: Construct a geometry/geography with M measure from a temporal point and a temporal float</para>
				</listitem>

				<listitem>
					<para><link linkend="asMVTGeom"><varname>asMVTGeom</varname></link>: Transform a temporal geometric point into the coordinate space of a Mapbox Vector Tile</para>
				</listitem>
			</itemizedlist>
		</sect2>

		<sect2>
			<title>Distance Operations</title>

			<itemizedlist>
				<listitem>
					<para><link linkend="smallest_distance"><varname>|=|</varname></link>: Get the smallest distance ever</para>
				</listitem>

				<listitem>
					<para><link linkend="nearestApproachInstant"><varname>nearestApproachInstant</varname></link>: Get the instant of the first temporal point at which the two arguments are at the nearest distance</para>
				</listitem>

				<listitem>
					<para><link linkend="shortestLine"><varname>shortestLine</varname></link>: Get the line connecting the nearest approach point</para>
				</listitem>

				<listitem>
					<para><link linkend="distance"><varname>&lt;-&gt;</varname></link>: Get the temporal distance</para>
				</listitem>
			</itemizedlist>
		</sect2>

		<sect2>
			<title>Ever and Temporal Spatial Relationships</title>
			<itemizedlist>
				<listitem>
					<para><link linkend="econtains"><varname>econtains</varname></link>: Ever contains</para>
				</listitem>

				<listitem>
					<para><link linkend="edisjoint"><varname>edisjoint</varname></link>: Is ever disjoint</para>
				</listitem>

				<listitem>
					<para><link linkend="edwithin"><varname>edwithin</varname></link>: Is ever at distance within</para>
				</listitem>

				<listitem>
					<para><link linkend="eintersects"><varname>eintersects</varname></link>: Ever intersects</para>
				</listitem>

				<listitem>
					<para><link linkend="etouches"><varname>etouches</varname></link>: Ever touches</para>
				</listitem>

				<listitem>
					<para><link linkend="tcontains"><varname>tcontains</varname></link>: Temporal contains</para>
				</listitem>

				<listitem>
					<para><link linkend="tdisjoint"><varname>tdisjoint</varname></link>: Temporal disjoint</para>
				</listitem>

				<listitem>
					<para><link linkend="tdwithin"><varname>tdwithin</varname></link>: Temporal distance within</para>
				</listitem>

				<listitem>
					<para><link linkend="tintersects"><varname>tintersects</varname></link>: Temporal intersects</para>
				</listitem>

				<listitem>
					<para><link linkend="ttouches"><varname>ttouches</varname></link>: Temporal touches</para>
				</listitem>
				</itemizedlist>
		</sect2>
	</sect1>

	<sect1>
		<title>Operations for Temporal Types: Analytics Operations</title>

		<sect2>
			<title>Simplification</title>

			<itemizedlist>
				<listitem>
					<para><link linkend="minDistSimplify"><varname>minDistSimplify</varname></link>: Simplify a temporal float or a temporal point ensuring that consecutive values are at least a certain distance apart</para>
				</listitem>

				<listitem>
					<para><link linkend="minTimeDeltaSimplify"><varname>minTimeDeltaSimplify</varname></link>: Simplify a temporal float or a temporal point ensuring that consecutive values are at least a certain time interval apart</para>
				</listitem>

				<listitem>
					<para><link linkend="DouglasPeuckerSimplify"><varname>maxDistSimplify</varname>, <varname>DouglasPeuckerSimplify</varname></link>: Simplify a temporal float or a temporal point using the Douglas-Peucker algorithm</para>
				</listitem>
			</itemizedlist>
		</sect2>

		<sect2>
			<title>Similarity</title>

			<itemizedlist>
				<listitem>
					<para><link linkend="hausdorffDistance"><varname>hausdorffDistance</varname></link>: Get the discrete Hausdorff distance between two temporal values</para>
				</listitem>

				<listitem>
					<para><link linkend="frechetDistance"><varname>frechetDistance</varname></link>: Get the discrete Fréchet distance between two temporal values</para>
				</listitem>

				<listitem>
					<para><link linkend="frechetDistancePath"><varname>frechetDistancePath</varname></link>: Get the correspondence pairs between two temporal values with respect to the discrete Fréchet distance</para>
				</listitem>

				<listitem>
					<para><link linkend="dynamicTimeWarp"><varname>dynamicTimeWarp</varname></link>: Get the Dynamic Time Warp distance between two temporal values</para>
				</listitem>

				<listitem>
					<para><link linkend="dynamicTimeWarpPath"><varname>dynamicTimeWarpPath</varname></link>: Get the correspondence pairs between two temporal values with respect to the Dynamic Time Warp distance</para>
				</listitem>
			</itemizedlist>
		</sect2>

		<sect2>
			<title>Multidimensional Tiling</title>

			<sect3>
				<title>Bucket Operations</title>

				<itemizedlist>
					<listitem>
						<para><link linkend="bucketList"><varname>bucketList</varname></link>: Return a set of couples (index, bucket) that cover the span or period with buckets of the same width or duration aligned with the origin</para>
					</listitem>

					<listitem>
						<para><link linkend="valueBucket"><varname>valueBucket</varname></link>: Return the start value of the bucket that contains the input number</para>
					</listitem>

					<listitem>
						<para><link linkend="spanBucket"><varname>spanBucket</varname></link>: Return the span in the bucket space that contains the input number</para>
					</listitem>

					<listitem>
						<para><link linkend="timeBucket"><varname>timeBucket</varname></link>: Return the start timestamp of the bucket that contains the input timestamp</para>
					</listitem>

					<listitem>
						<para><link linkend="periodBucket"><varname>periodBucket</varname></link>: Return a period in the bucket space that contains the input timestamp</para>
					</listitem>

				</itemizedlist>
			</sect3>

			<sect3>
				<title>Grid Operations</title>

				<itemizedlist>
					<listitem>
						<para><link linkend="tileList"><varname>tileList</varname></link>: Return a set of couples (index, tile) that covers the box with multidimensional tiles of the same size and duration</para>
					</listitem>

					<listitem>
						<para><link linkend="tile"><varname>tile</varname></link>: Return the tile of the multidimensional grid that contains the value and the timestamp</para>
						</listitem>
				</itemizedlist>
			</sect3>

			<sect3>
				<title>Split Operations</title>

				<itemizedlist>
					<listitem>
						<para><link linkend="valueSplit"><varname>valueSplit</varname></link>: Fragment the temporal number with respect to value buckets</para>
					</listitem>

					<listitem>
						<para><link linkend="timeSplit"><varname>timeSplit</varname></link>: Fragment the temporal value with respect to time buckets</para>
					</listitem>

					<listitem>
						<para><link linkend="valueTimeSplit"><varname>valueTimeSplit</varname></link>: Fragment the temporal number with respect to the tiles in a value-time grid</para>
					</listitem>

					<listitem>
						<para><link linkend="spaceSplit"><varname>spaceSplit</varname></link>: Fragment the temporal point with respect to tiles in a spatial grid</para>
					</listitem>

					<listitem>
						<para><link linkend="spaceTimeSplit"><varname>spaceTimeSplit</varname></link>: Fragment the temporal point with respect to tiles in a spatiotemporal grid</para>
					</listitem>
				</itemizedlist>
			</sect3>
		</sect2>

		<sect2>
			<title>Aggregations</title>

			<itemizedlist>
				<listitem>
					<para><link linkend="tcount"><varname>tcount</varname></link>: Temporal count</para>
				</listitem>

				<listitem>
					<para><link linkend="extent"><varname>extent</varname></link>: Bounding box extent</para>
				</listitem>

				<listitem>
					<para><link linkend="tand"><varname>tand</varname></link>: Temporal and</para>
				</listitem>

				<listitem>
					<para><link linkend="tor"><varname>tor</varname></link>: Temporal or</para>
				</listitem>

				<listitem>
					<para><link linkend="tmin"><varname>tmin</varname></link>: Temporal minimum</para>
				</listitem>

				<listitem>
					<para><link linkend="tmax"><varname>tmax</varname></link>: Temporal maximum</para>
				</listitem>

				<listitem>
					<para><link linkend="tsum"><varname>tsum</varname></link>: Temporal sum</para>
				</listitem>

				<listitem>
					<para><link linkend="tavg"><varname>tavg</varname></link>: Temporal average</para>
				</listitem>

				<listitem>
					<para><link linkend="wmin"><varname>wmin</varname></link>: Window minimum</para>
				</listitem>

				<listitem>
					<para><link linkend="wmax"><varname>wmax</varname></link>: Window maximum</para>
				</listitem>

				<listitem>
					<para><link linkend="wcount"><varname>wcount</varname></link>: Window count</para>
				</listitem>

				<listitem>
					<para><link linkend="wsum"><varname>wsum</varname></link>: Window sum</para>
				</listitem>

				<listitem>
					<para><link linkend="wavg"><varname>wavg</varname></link>: Window average</para>
				</listitem>

				<listitem>
					<para><link linkend="tcentroid"><varname>tcentroid</varname></link>: Temporal centroid</para>
				</listitem>

			</itemizedlist>
		</sect2>

		<sect2>
			<title>Utility Functions</title>
			<itemizedlist>
				<listitem>
					<para><link linkend="mobilitydb_version"><varname>mobilitydb_version</varname></link>: Get the version of the MobilityDB extension</para>
				</listitem>

				<listitem>
					<para><link linkend="mobilitydb_full_version"><varname>mobilitydb_full_version</varname></link>: Get the versions of the MobilityDB extension and its dependencies</para>
				</listitem>
			</itemizedlist>
		</sect2>
	</sect1>

	<sect1>
		<title>Operations for Temporal Network Points</title>

		<sect2>
			<title>Static Network Types</title>

			<sect3>
				<title>Constructors</title>
				<itemizedlist>
					<listitem>
						<para><link linkend="npoint"><varname>npoint</varname></link>: Constructor for network points</para>
					</listitem>

					<listitem>
						<para><link linkend="nsegment"><varname>nsegment</varname></link>: Constructor for network segments</para>
					</listitem>
				</itemizedlist>
			</sect3>

			<sect3>
				<title>Accessors</title>
				<itemizedlist>
					<listitem>
						<para><link linkend="route"><varname>route</varname></link>: Get the route identifier</para>
					</listitem>

					<listitem>
						<para><link linkend="getPosition"><varname>getPosition</varname></link>: Get the position fraction</para>
					</listitem>

					<listitem>
						<para><link linkend="startPosition"><varname>startPosition</varname>, <varname>endPosition</varname></link>: Get the start/end position</para>
					</listitem>


					<listitem>
						<para><link linkend="npoint_srid"><varname>SRID</varname></link>: Get the spatial reference identifier</para>
					</listitem>
				</itemizedlist>
			</sect3>

			<sect3>
				<title>Transformations</title>
				<itemizedlist>
					<listitem>
						<para><link linkend="npoint_round"><varname>round</varname></link>: Round the position(s) of the network point or the network segment to the number of decimal places</para>
					</listitem>
				</itemizedlist>
			</sect3>

			<sect3>
				<title>Spatial Operations</title>
				<itemizedlist>
					<listitem>
						<para><link linkend="npoint_geometry"><varname>::</varname></link>: Cast a network point to a geometry</para>
					</listitem>

					<listitem>
						<para><link linkend="geometry_npoint"><varname>::</varname></link>: Cast a geometry to a network point</para>
					</listitem>

					<listitem>
						<para><link linkend="npoint_same"><varname>equals</varname></link>: Spatial equality for network points</para>
					</listitem>
				</itemizedlist>
			</sect3>

			<sect3>
				<title>Comparisons</title>
				<itemizedlist>
					<listitem>
						<para><link linkend="static_eq"><varname>=</varname></link>: Are the values equal?</para>
						</listitem>

					<listitem>
						<para><link linkend="static_ne"><varname>&lt;&gt;</varname></link>: Are the values different?</para>
					</listitem>

					<listitem>
						<para><link linkend="static_lt"><varname>&lt;</varname></link>: Is the first value less than the second one?</para>
					</listitem>

					<listitem>
						<para><link linkend="static_gt"><varname>&gt;</varname></link>: Is the first value greater than the second one?</para>
					</listitem>

					<listitem>
						<para><link linkend="static_le"><varname>&lt;=</varname></link>: Is the first value less than or equal to the second one?</para>
					</listitem>

					<listitem>
						<para><link linkend="static_ge"><varname>&gt;=</varname></link>: Is the first value greater than or equal to the second one?</para>
					</listitem>
				</itemizedlist>
			</sect3>
		</sect2>

		<sect2>
			<title>Temporal Network Points</title>

			<sect3>
				<title>Constructors</title>
				<itemizedlist>
					<listitem>
						<para><link linkend="tnpoint_const"><varname>tnpoint_inst</varname>, <varname>tnpoint_seq</varname>, <varname>tnpoint_seqset</varname></link>: Constructor for temporal network points from a base value and a time value</para>
					</listitem>

					<listitem>
						<para><link linkend="tnpoint_seq"><varname>tnpoint_seq</varname></link>: Constructors for temporal network points of sequence subtype</para>
					</listitem>

					<listitem>
						<para><link linkend="tnpoint_seqset"><varname>tnpoint_seqset</varname></link>: Constructor for temporal network points of sequence set subtype</para>
					</listitem>
				</itemizedlist>
			</sect3>

			<sect3>
				<title>Casting</title>
				<itemizedlist>
					<listitem>
						<para><link linkend="tnpoint_tgeompoint"><varname>tnpoint::tgeompoint</varname></link>: Cast a temporal network point to a temporal geometry point</para>
					</listitem>

					<listitem>
						<para><link linkend="tgeompoint_tnpoint"><varname>tgeompoint::tnpoint</varname></link>: Cast a temporal geometry point to a temporal network point</para>
					</listitem>
				</itemizedlist>
			</sect3>

			<sect3>
				<title>Operations</title>
				<itemizedlist>
					<listitem>
						<para><link linkend="tnpoint_subtype"><varname>tnpoint_inst, tnpoint_discseq, tnpoint_contseq, tnpoint_seqset</varname></link>: Transform a temporal network to another subtype</para>
					</listitem>

					<listitem>
						<para><link linkend="tnpoint_setInterp"><varname>setInterp</varname></link>: Transform a temporal network point in another interpolation</para>
					</listitem>

					<listitem>
						<para><link linkend="tnpoint_round"><varname>round</varname></link>: Round the fraction of the temporal network point to the number of decimal places</para>
					</listitem>

					<listitem>
						<para><link linkend="tnpoint_getValues"><varname>getValues</varname></link>: Get the values</para>
					</listitem>

					<listitem>
						<para><link linkend="tnpoint_routes"><varname>routes</varname></link>: Get the road identifiers</para>
					</listitem>

					<listitem>
						<para><link linkend="tnpoint_valueAtTimestamp"><varname>valueAtTimestamp</varname></link>: Get the value at a timestamp</para>
					</listitem>

					<listitem>
						<para><link linkend="tnpoint_length"><varname>length</varname></link>: Get the length traversed by the temporal network point</para>
					</listitem>

					<listitem>
						<para><link linkend="tnpoint_cumulativeLength"><varname>cumulativeLength</varname></link>: Get the cumulative length traversed by the temporal network point</para>
					</listitem>

					<listitem>
						<para><link linkend="tnpoint_speed"><varname>speed</varname></link>: Get the speed of the temporal network point in units per second</para>
					</listitem>

					<listitem>
						<para><link linkend="tnpoint_stbox"><varname>stbox</varname></link>: Construct the bounding box from a npoint and, optionally, a timestamp or a period</para>
					</listitem>

					<listitem>
						<para><link linkend="tnpoint_twCentroid"><varname>twCentroid</varname></link>: Get the time-weighted centroid</para>
					</listitem>

					<listitem>
						<para><link linkend="tnpoint_azimuth"><varname>azimuth</varname></link>: Get the temporal azimuth</para>
					</listitem>

					<listitem>
						<para><link linkend="tnpoint_nearestApproachInstant"><varname>nearestApproachInstant</varname></link>: Get the instant of the first temporal network point at which the two arguments are at the nearest distance</para>
					</listitem>

					<listitem>
						<para><link linkend="tnpoint_nearestApproachDistance"><varname>nearestApproachDistance</varname></link>: Smallest distance ever between the two arguments</para>
					</listitem>

					<listitem>
						<para><link linkend="tnpoint_shortestLine"><varname>shortestLine</varname></link>: Get the line connecting the nearest approach point between the two arguments</para>
					</listitem>

					<listitem>
						<para><link linkend="tnpoint_atValue"><varname>atValue</varname>, <varname>minusValue</varname></link>: Restrict to (the complement of) a value</para>
					</listitem>

					<listitem>
						<para><link linkend="tnpoint_atGeometry"><varname>atGeometry</varname>, <varname>minusGeometry</varname></link>: Restrict to (the complement of) a geometry</para>
					</listitem>

					<listitem>
						<para><link linkend="tnpoint_comp"><varname>=, &lt;&gt;, &lt;, &gt;, &lt;=, &gt;=</varname></link>: Traditional comparison operators</para>
					</listitem>

					<listitem>
						<para><link linkend="tnpoint_tcomp"><varname>#=, #&lt;&gt;</varname></link>: Temporal comparison operators</para>
					</listitem>

					<listitem>
						<para><link linkend="tnpoint_ever_always"><varname>?=, &amp;=</varname></link>: Ever and always equal operators</para>
					</listitem>

					<listitem>
						<para><link linkend="tnpoint_relpos"><varname>&lt;&lt;, &amp;&lt;, &gt;&gt;, &amp;&gt;, &lt;&lt;|, &amp;&lt;|, |&gt;&gt;, |&amp;&gt;, &lt;&lt;#, &amp;&lt;#, #&gt;&gt;, |&amp;&gt;</varname></link>: Relative position operators</para>
					</listitem>

					<listitem>
						<para><link linkend="tnpoint_topo"><varname>&amp;&amp;, &lt;@, @&gt;, ~=, -|-</varname></link>: Topological operators</para>
					</listitem>

					<listitem>
						<para><link linkend="tnpoint_smallestDistance"><varname>|=|</varname></link>: Get the smallest distance ever between the two arguments</para>
					</listitem>

					<listitem>
						<para><link linkend="tnpoint_distance"><varname>&lt;-&gt;</varname></link>: Get the temporal distance</para>
					</listitem>

					<listitem>
						<para><link linkend="tnpoint_espatialrels"><varname>econtains, edisjoint, eintersects, etouches, edwithin</varname></link>: Possible spatial relationships</para>
					</listitem>

					<listitem>
						<para><link linkend="tnpoint_tspatialrels"><varname>tcontains, tdisjoint, tintersects, ttouches, tdwithin</varname></link>: Temporal spatial relationships</para>
					</listitem>
				</itemizedlist>
			</sect3>

			<sect3>
				<title>Aggregations</title>

				<itemizedlist>
					<listitem>
						<para><link linkend="tnpoint_tcount"><varname>tcount</varname></link>: Temporal count</para>
					</listitem>

					<listitem>
						<para><link linkend="tnpoint_wcount"><varname>tcount</varname></link>: Window count</para>
					</listitem>

					<listitem>
						<para><link linkend="tnpoint_tcentroid"><varname>tcentroid</varname></link>: Temporal centroid</para>
					</listitem>
				</itemizedlist>
			</sect3>
		</sect2>
	</sect1>

</appendix>
