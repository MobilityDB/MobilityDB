DROP INDEX IF EXISTS tbl_intspanset_rtree_idx;
NOTICE:  index "tbl_intspanset_rtree_idx" does not exist, skipping
DROP INDEX
DROP INDEX IF EXISTS tbl_floatspanset_rtree_idx;
NOTICE:  index "tbl_floatspanset_rtree_idx" does not exist, skipping
DROP INDEX
DROP INDEX IF EXISTS tbl_intspanset_quadtree_idx;
NOTICE:  index "tbl_intspanset_quadtree_idx" does not exist, skipping
DROP INDEX
DROP INDEX IF EXISTS tbl_floatspanset_quadtree_idx;
NOTICE:  index "tbl_floatspanset_quadtree_idx" does not exist, skipping
DROP INDEX
DROP TABLE IF EXISTS test_spansetops;
NOTICE:  table "test_spansetops" does not exist, skipping
DROP TABLE
CREATE TABLE test_spansetops(
  op CHAR(3),
  leftarg TEXT,
  rightarg TEXT,
  no_idx BIGINT,
  rtree_idx BIGINT,
  quadtree_idx BIGINT
);
CREATE TABLE
INSERT INTO test_spansetops(op, leftarg, rightarg, no_idx)
SELECT '<<', 'integer', 'intspanset', COUNT(*) FROM tbl_int t1, tbl_intspanset t2 WHERE t1.i << t2.ss;
INSERT 0 1
INSERT INTO test_spansetops(op, leftarg, rightarg, no_idx)
SELECT '<<', 'intspanset', 'integer', COUNT(*) FROM tbl_intspanset t1, tbl_int t2 WHERE t1.ss << t2.i;
INSERT 0 1
INSERT INTO test_spansetops(op, leftarg, rightarg, no_idx)
SELECT '<<', 'intspanset', 'intspanset', COUNT(*) FROM tbl_intspanset t1, tbl_intspanset t2 WHERE t1.ss << t2.ss;
INSERT 0 1
INSERT INTO test_spansetops(op, leftarg, rightarg, no_idx)
SELECT '<<', 'float', 'floatspanset', COUNT(*) FROM tbl_float t1, tbl_floatspanset t2 WHERE t1.f << t2.ss;
INSERT 0 1
INSERT INTO test_spansetops(op, leftarg, rightarg, no_idx)
SELECT '<<', 'floatspanset', 'float', COUNT(*) FROM tbl_floatspanset t1, tbl_float t2 WHERE t1.ss << t2.f;
INSERT 0 1
INSERT INTO test_spansetops(op, leftarg, rightarg, no_idx)
SELECT '<<', 'floatspanset', 'floatspanset', COUNT(*) FROM tbl_floatspanset t1, tbl_floatspanset t2 WHERE t1.ss << t2.ss;
INSERT 0 1
INSERT INTO test_spansetops(op, leftarg, rightarg, no_idx)
SELECT '&<', 'integer', 'intspanset', COUNT(*) FROM tbl_int t1, tbl_intspanset t2 WHERE t1.i &< t2.ss;
INSERT 0 1
INSERT INTO test_spansetops(op, leftarg, rightarg, no_idx)
SELECT '&<', 'intspanset', 'integer', COUNT(*) FROM tbl_intspanset t1, tbl_int t2 WHERE t1.ss &< t2.i;
INSERT 0 1
INSERT INTO test_spansetops(op, leftarg, rightarg, no_idx)
SELECT '&<', 'intspanset', 'intspanset', COUNT(*) FROM tbl_intspanset t1, tbl_intspanset t2 WHERE t1.ss &< t2.ss;
INSERT 0 1
INSERT INTO test_spansetops(op, leftarg, rightarg, no_idx)
SELECT '&<', 'float', 'floatspanset', COUNT(*) FROM tbl_float t1, tbl_floatspanset t2 WHERE t1.f &< t2.ss;
INSERT 0 1
INSERT INTO test_spansetops(op, leftarg, rightarg, no_idx)
SELECT '&<', 'floatspanset', 'float', COUNT(*) FROM tbl_floatspanset t1, tbl_float t2 WHERE t1.ss &< t2.f;
INSERT 0 1
INSERT INTO test_spansetops(op, leftarg, rightarg, no_idx)
SELECT '&<', 'floatspanset', 'floatspanset', COUNT(*) FROM tbl_floatspanset t1, tbl_floatspanset t2 WHERE t1.ss &< t2.ss;
INSERT 0 1
INSERT INTO test_spansetops(op, leftarg, rightarg, no_idx)
SELECT '>>', 'integer', 'intspanset', COUNT(*) FROM tbl_int t1, tbl_intspanset t2 WHERE t1.i >> t2.ss;
INSERT 0 1
INSERT INTO test_spansetops(op, leftarg, rightarg, no_idx)
SELECT '>>', 'intspanset', 'integer', COUNT(*) FROM tbl_intspanset t1, tbl_int t2 WHERE t1.ss >> t2.i;
INSERT 0 1
INSERT INTO test_spansetops(op, leftarg, rightarg, no_idx)
SELECT '>>', 'intspanset', 'intspanset', COUNT(*) FROM tbl_intspanset t1, tbl_intspanset t2 WHERE t1.ss >> t2.ss;
INSERT 0 1
INSERT INTO test_spansetops(op, leftarg, rightarg, no_idx)
SELECT '>>', 'float', 'floatspanset', COUNT(*) FROM tbl_float t1, tbl_floatspanset t2 WHERE t1.f >> t2.ss;
INSERT 0 1
INSERT INTO test_spansetops(op, leftarg, rightarg, no_idx)
SELECT '>>', 'floatspanset', 'float', COUNT(*) FROM tbl_floatspanset t1, tbl_float t2 WHERE t1.ss >> t2.f;
INSERT 0 1
INSERT INTO test_spansetops(op, leftarg, rightarg, no_idx)
SELECT '>>', 'floatspanset', 'floatspanset', COUNT(*) FROM tbl_floatspanset t1, tbl_floatspanset t2 WHERE t1.ss >> t2.ss;
INSERT 0 1
INSERT INTO test_spansetops(op, leftarg, rightarg, no_idx)
SELECT '&>', 'integer', 'intspanset', COUNT(*) FROM tbl_int t1, tbl_intspanset t2 WHERE t1.i &> t2.ss;
INSERT 0 1
INSERT INTO test_spansetops(op, leftarg, rightarg, no_idx)
SELECT '&>', 'intspanset', 'integer', COUNT(*) FROM tbl_intspanset t1, tbl_int t2 WHERE t1.ss &> t2.i;
INSERT 0 1
INSERT INTO test_spansetops(op, leftarg, rightarg, no_idx)
SELECT '&>', 'intspanset', 'intspanset', COUNT(*) FROM tbl_intspanset t1, tbl_intspanset t2 WHERE t1.ss &> t2.ss;
INSERT 0 1
INSERT INTO test_spansetops(op, leftarg, rightarg, no_idx)
SELECT '&>', 'float', 'floatspanset', COUNT(*) FROM tbl_float t1, tbl_floatspanset t2 WHERE t1.f &> t2.ss;
INSERT 0 1
INSERT INTO test_spansetops(op, leftarg, rightarg, no_idx)
SELECT '&>', 'floatspanset', 'float', COUNT(*) FROM tbl_floatspanset t1, tbl_float t2 WHERE t1.ss &> t2.f;
INSERT 0 1
INSERT INTO test_spansetops(op, leftarg, rightarg, no_idx)
SELECT '&>', 'floatspanset', 'floatspanset', COUNT(*) FROM tbl_floatspanset t1, tbl_floatspanset t2 WHERE t1.ss &> t2.ss;
INSERT 0 1
CREATE INDEX tbl_intspanset_rtree_idx ON tbl_intspanset USING GIST(ss);
CREATE INDEX
CREATE INDEX tbl_floatspanset_rtree_idx ON tbl_floatspanset USING GIST(ss);
CREATE INDEX
UPDATE test_spansetops
SET rtree_idx = ( SELECT COUNT(*) FROM tbl_int t1, tbl_intspanset t2 WHERE t1.i << t2.ss )
WHERE op = '<<' AND leftarg = 'integer' AND rightarg = 'intspanset';
UPDATE 1
UPDATE test_spansetops
SET rtree_idx = ( SELECT COUNT(*) FROM tbl_intspanset t1, tbl_int t2 WHERE t1.ss << t2.i )
WHERE op = '<<' AND leftarg = 'intspanset' AND rightarg = 'integer';
UPDATE 1
UPDATE test_spansetops
SET rtree_idx = ( SELECT COUNT(*) FROM tbl_intspanset t1, tbl_intspanset t2 WHERE t1.ss << t2.ss )
WHERE op = '<<' AND leftarg = 'intspanset' AND rightarg = 'intspanset';
UPDATE 1
UPDATE test_spansetops
SET rtree_idx = ( SELECT COUNT(*) FROM tbl_floatspanset t1, tbl_floatspanset t2 WHERE t1.ss << t2.ss )
WHERE op = '<<' AND leftarg = 'floatspanset' AND rightarg = 'floatspanset';
UPDATE 1
UPDATE test_spansetops
SET rtree_idx = ( SELECT COUNT(*) FROM tbl_int t1, tbl_intspanset t2 WHERE t1.i &< t2.ss )
WHERE op = '&<' AND leftarg = 'integer' AND rightarg = 'intspanset';
UPDATE 1
UPDATE test_spansetops
SET rtree_idx = ( SELECT COUNT(*) FROM tbl_intspanset t1, tbl_int t2 WHERE t1.ss &< t2.i )
WHERE op = '&<' AND leftarg = 'intspanset' AND rightarg = 'integer';
UPDATE 1
UPDATE test_spansetops
SET rtree_idx = ( SELECT COUNT(*) FROM tbl_intspanset t1, tbl_intspanset t2 WHERE t1.ss &< t2.ss )
WHERE op = '&<' AND leftarg = 'intspanset' AND rightarg = 'intspanset';
UPDATE 1
UPDATE test_spansetops
SET rtree_idx = ( SELECT COUNT(*) FROM tbl_int t1, tbl_intspanset t2 WHERE t1.i >> t2.ss )
WHERE op = '>>' AND leftarg = 'integer' AND rightarg = 'intspanset';
UPDATE 1
UPDATE test_spansetops
SET rtree_idx = ( SELECT COUNT(*) FROM tbl_intspanset t1, tbl_int t2 WHERE t1.ss >> t2.i )
WHERE op = '>>' AND leftarg = 'intspanset' AND rightarg = 'integer';
UPDATE 1
UPDATE test_spansetops
SET rtree_idx = ( SELECT COUNT(*) FROM tbl_intspanset t1, tbl_intspanset t2 WHERE t1.ss >> t2.ss )
WHERE op = '>>' AND leftarg = 'intspanset' AND rightarg = 'intspanset';
UPDATE 1
UPDATE test_spansetops
SET rtree_idx = ( SELECT COUNT(*) FROM tbl_floatspanset t1, tbl_floatspanset t2 WHERE t1.ss >> t2.ss )
WHERE op = '>>' AND leftarg = 'floatspanset' AND rightarg = 'floatspanset';
UPDATE 1
UPDATE test_spansetops
SET rtree_idx = ( SELECT COUNT(*) FROM tbl_int t1, tbl_intspanset t2 WHERE t1.i &> t2.ss )
WHERE op = '&>' AND leftarg = 'integer' AND rightarg = 'intspanset';
UPDATE 1
UPDATE test_spansetops
SET rtree_idx = ( SELECT COUNT(*) FROM tbl_intspanset t1, tbl_int t2 WHERE t1.ss &> t2.i )
WHERE op =  '&>' AND leftarg = 'intspanset' AND rightarg = 'integer';
UPDATE 1
UPDATE test_spansetops
SET rtree_idx = ( SELECT COUNT(*) FROM tbl_intspanset t1, tbl_intspanset t2 WHERE t1.ss &> t2.ss )
WHERE op = '&>' AND leftarg = 'intspanset' AND rightarg = 'intspanset';
UPDATE 1
UPDATE test_spansetops
SET rtree_idx = ( SELECT COUNT(*) FROM tbl_float t1, tbl_floatspanset t2 WHERE t1.f &> t2.ss )
WHERE op = '&>' AND leftarg = 'float' AND rightarg = 'floatspanset';
UPDATE 1
DROP INDEX tbl_intspanset_rtree_idx;
DROP INDEX
DROP INDEX tbl_floatspanset_rtree_idx;
DROP INDEX
CREATE INDEX tbl_intspanset_quadtree_idx ON tbl_intspanset USING SPGIST(ss);
CREATE INDEX
CREATE INDEX tbl_floatspanset_quadtree_idx ON tbl_floatspanset USING SPGIST(ss);
CREATE INDEX
UPDATE test_spansetops
SET quadtree_idx = ( SELECT COUNT(*) FROM tbl_int t1, tbl_intspanset t2 WHERE t1.i << t2.ss )
WHERE op = '<<' AND leftarg = 'integer' AND rightarg = 'intspanset';
UPDATE 1
UPDATE test_spansetops
SET quadtree_idx = ( SELECT COUNT(*) FROM tbl_intspanset t1, tbl_int t2 WHERE t1.ss << t2.i )
WHERE op = '<<' AND leftarg = 'intspanset' AND rightarg = 'integer';
UPDATE 1
UPDATE test_spansetops
SET quadtree_idx = ( SELECT COUNT(*) FROM tbl_intspanset t1, tbl_intspanset t2 WHERE t1.ss << t2.ss )
WHERE op = '<<' AND leftarg = 'intspanset' AND rightarg = 'intspanset';
UPDATE 1
UPDATE test_spansetops
SET quadtree_idx = ( SELECT COUNT(*) FROM tbl_float t1, tbl_floatspanset t2 WHERE t1.f << t2.ss )
WHERE op = '<<' AND leftarg = 'float' AND rightarg = 'floatspanset';
UPDATE 1
UPDATE test_spansetops
SET quadtree_idx = ( SELECT COUNT(*) FROM tbl_floatspanset t1, tbl_float t2 WHERE t1.ss << t2.f )
WHERE op = '<<' AND leftarg = 'floatspanset' AND rightarg = 'float';
UPDATE 1
UPDATE test_spansetops
SET quadtree_idx = ( SELECT COUNT(*) FROM tbl_floatspanset t1, tbl_floatspanset t2 WHERE t1.ss << t2.ss )
WHERE op = '<<' AND leftarg = 'floatspanset' AND rightarg = 'floatspanset';
UPDATE 1
UPDATE test_spansetops
SET quadtree_idx = ( SELECT COUNT(*) FROM tbl_int t1, tbl_intspanset t2 WHERE t1.i &< t2.ss )
WHERE op = '&<' AND leftarg = 'integer' AND rightarg = 'intspanset';
UPDATE 1
UPDATE test_spansetops
SET quadtree_idx = ( SELECT COUNT(*) FROM tbl_intspanset t1, tbl_int t2 WHERE t1.ss &< t2.i )
WHERE op = '&<' AND leftarg = 'intspanset' AND rightarg = 'integer';
UPDATE 1
UPDATE test_spansetops
SET quadtree_idx = ( SELECT COUNT(*) FROM tbl_intspanset t1, tbl_intspanset t2 WHERE t1.ss &< t2.ss )
WHERE op = '&<' AND leftarg = 'intspanset' AND rightarg = 'intspanset';
UPDATE 1
UPDATE test_spansetops
SET quadtree_idx = ( SELECT COUNT(*) FROM tbl_float t1, tbl_floatspanset t2 WHERE t1.f &< t2.ss )
WHERE op = '&<' AND leftarg = 'float' AND rightarg = 'floatspanset';
UPDATE 1
UPDATE test_spansetops
SET quadtree_idx = ( SELECT COUNT(*) FROM tbl_floatspanset t1, tbl_float t2 WHERE t1.ss &< t2.f )
WHERE op = '&<' AND leftarg = 'floatspanset' AND rightarg = 'float';
UPDATE 1
UPDATE test_spansetops
SET quadtree_idx = ( SELECT COUNT(*) FROM tbl_floatspanset t1, tbl_floatspanset t2 WHERE t1.ss &< t2.ss )
WHERE op = '&<' AND leftarg = 'floatspanset' AND rightarg = 'floatspanset';
UPDATE 1
UPDATE test_spansetops
SET quadtree_idx = ( SELECT COUNT(*) FROM tbl_int t1, tbl_intspanset t2 WHERE t1.i >> t2.ss )
WHERE op = '>>' AND leftarg = 'integer' AND rightarg = 'intspanset';
UPDATE 1
UPDATE test_spansetops
SET quadtree_idx = ( SELECT COUNT(*) FROM tbl_intspanset t1, tbl_int t2 WHERE t1.ss >> t2.i )
WHERE op = '>>' AND leftarg = 'intspanset' AND rightarg = 'integer';
UPDATE 1
UPDATE test_spansetops
SET quadtree_idx = ( SELECT COUNT(*) FROM tbl_intspanset t1, tbl_intspanset t2 WHERE t1.ss >> t2.ss )
WHERE op = '>>' AND leftarg = 'intspanset' AND rightarg = 'intspanset';
UPDATE 1
UPDATE test_spansetops
SET quadtree_idx = ( SELECT COUNT(*) FROM tbl_float t1, tbl_floatspanset t2 WHERE t1.f >> t2.ss )
WHERE op = '>>' AND leftarg = 'float' AND rightarg = 'floatspanset';
UPDATE 1
UPDATE test_spansetops
SET quadtree_idx = ( SELECT COUNT(*) FROM tbl_floatspanset t1, tbl_float t2 WHERE t1.ss >> t2.f )
WHERE op = '>>' AND leftarg = 'floatspanset' AND rightarg = 'float';
UPDATE 1
UPDATE test_spansetops
SET quadtree_idx = ( SELECT COUNT(*) FROM tbl_floatspanset t1, tbl_floatspanset t2 WHERE t1.ss >> t2.ss )
WHERE op = '>>' AND leftarg = 'floatspanset' AND rightarg = 'floatspanset';
UPDATE 1
UPDATE test_spansetops
SET quadtree_idx = ( SELECT COUNT(*) FROM tbl_int t1, tbl_intspanset t2 WHERE t1.i &> t2.ss )
WHERE op = '&>' AND leftarg = 'integer' AND rightarg = 'intspanset';
UPDATE 1
UPDATE test_spansetops
SET quadtree_idx = ( SELECT COUNT(*) FROM tbl_intspanset t1, tbl_int t2 WHERE t1.ss &> t2.i )
WHERE op =  '&>' AND leftarg = 'intspanset' AND rightarg = 'integer';
UPDATE 1
UPDATE test_spansetops
SET quadtree_idx = ( SELECT COUNT(*) FROM tbl_intspanset t1, tbl_intspanset t2 WHERE t1.ss &> t2.ss )
WHERE op = '&>' AND leftarg = 'intspanset' AND rightarg = 'intspanset';
UPDATE 1
UPDATE test_spansetops
SET quadtree_idx = ( SELECT COUNT(*) FROM tbl_float t1, tbl_floatspanset t2 WHERE t1.f &> t2.ss )
WHERE op = '&>' AND leftarg = 'float' AND rightarg = 'floatspanset';
UPDATE 1
UPDATE test_spansetops
SET quadtree_idx = ( SELECT COUNT(*) FROM tbl_floatspanset t1, tbl_float t2 WHERE t1.ss &> t2.f )
WHERE op =  '&>' AND leftarg = 'floatspanset' AND rightarg = 'float';
UPDATE 1
UPDATE test_spansetops
SET quadtree_idx = ( SELECT COUNT(*) FROM tbl_floatspanset t1, tbl_floatspanset t2 WHERE t1.ss &> t2.ss )
WHERE op = '&>' AND leftarg = 'floatspanset' AND rightarg = 'floatspanset';
UPDATE 1
DROP INDEX tbl_intspanset_quadtree_idx;
DROP INDEX
DROP INDEX tbl_floatspanset_quadtree_idx;
DROP INDEX
SELECT * FROM test_spansetops
WHERE no_idx <> rtree_idx OR no_idx <> quadtree_idx
ORDER BY op, leftarg, rightarg;
 op  |   leftarg    | rightarg | no_idx | rtree_idx | quadtree_idx 
-----+--------------+----------+--------+-----------+--------------
 >>  | floatspanset | float    |   8670 |           |         1652
 >>  | intspanset   | integer  |   9352 |      1817 |         1817
(2 rows)

DROP TABLE test_spansetops;
DROP TABLE
